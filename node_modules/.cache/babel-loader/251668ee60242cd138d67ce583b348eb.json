{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V11/c2md-web_react/src/components/DoctorSpecialities/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Style from \"./DoctorSpecialities.module.scss\";\nimport Assets from \"../Layout/Assets\";\nimport classNames from \"classnames\";\nimport Button from \"react-bootstrap/Button\";\nimport { Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchSpeciality } from \"../../actions/SpecialityListingAction\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DoctorSpecialities({\n  selectedSpeciality,\n  setSpeciality,\n  clientDetails,\n  ResetFilter\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const speciality = useSelector(state => state.specialityList.specialityList);\n  useEffect(() => {\n    if (speciality.legth == 0) {\n      dispatch(fetchSpeciality());\n    }\n  }, [speciality]);\n  const history = useHistory();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const OnSearch = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const dataItem = speciality && speciality.legth !== 0 && speciality.filter(item => {\n    if (searchQuery === \"\") {\n      return item;\n    } else if (item.specialityName.toLowerCase().includes(searchQuery.toLowerCase())) return item;\n  });\n\n  const onSelectSpeciality = data => {\n    setSpeciality(data);\n    ResetFilter();\n\n    if (clientDetails == undefined) {\n      history.push(\"/DoctorListing/\" + data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.doctor_listing_search_input,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Assets.search_icon,\n        className: Style.doctor_listing_search_icon_image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        id: \"search\",\n        placeholder: \"Search\",\n        className: Style.doctor_listing_search_input_box,\n        onChange: OnSearch,\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.doctor_listing_specialities_scroll,\n      children: [searchQuery ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${\"ALL\" === selectedSpeciality ? Style.active_speciality : Style.doctor_listing_selected_speciality}`,\n        onClick: () => onSelectSpeciality(\"ALL\"),\n        children: [\"All Doctors\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.arrow_right\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), dataItem && dataItem.length !== 0 ? dataItem.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${item.specialityName === selectedSpeciality ? Style.active_speciality : Style.doctor_listing_selected_speciality}`,\n          onClick: () => onSelectSpeciality(item.specialityName),\n          children: [item.specialityName, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.arrow_right\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this);\n      }) : searchQuery != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"The requested speciality is not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DoctorSpecialities, \"jlKFlt9n9FbGdDeQ3wdynl/wvVk=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = DoctorSpecialities;\nexport default DoctorSpecialities;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorSpecialities\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V11/c2md-web_react/src/components/DoctorSpecialities/index.js"],"names":["React","useState","useEffect","Row","Style","Assets","classNames","Button","Col","useSelector","useDispatch","fetchSpeciality","useHistory","DoctorSpecialities","selectedSpeciality","setSpeciality","clientDetails","ResetFilter","dispatch","speciality","state","specialityList","legth","history","searchQuery","setSearchQuery","OnSearch","e","target","value","dataItem","filter","item","specialityName","toLowerCase","includes","onSelectSpeciality","data","undefined","push","doctor_listing_search_input","search_icon","doctor_listing_search_icon_image","doctor_listing_search_input_box","doctor_listing_specialities_scroll","active_speciality","doctor_listing_selected_speciality","arrow_right","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Style from \"./DoctorSpecialities.module.scss\";\nimport Assets from \"../Layout/Assets\";\nimport classNames from \"classnames\";\nimport Button from \"react-bootstrap/Button\";\nimport { Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchSpeciality } from \"../../actions/SpecialityListingAction\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DoctorSpecialities({\n  selectedSpeciality,\n  setSpeciality,\n  clientDetails,\n  ResetFilter,\n}) {\n  const dispatch = useDispatch();\n  const speciality = useSelector(\n    (state) => state.specialityList.specialityList\n  );\n  useEffect(() => {\n    if (speciality.legth == 0) {\n      dispatch(fetchSpeciality());\n    }\n  }, [speciality]);\n  const history = useHistory();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const OnSearch = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const dataItem =\n    speciality &&\n    speciality.legth !== 0 &&\n    speciality.filter((item) => {\n      if (searchQuery === \"\") {\n        return item;\n      } else if (\n        item.specialityName.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n        return item;\n    });\n\n  const onSelectSpeciality = (data) => {\n    setSpeciality(data);\n    ResetFilter();\n    if (clientDetails == undefined) {\n      history.push(\"/DoctorListing/\" + data);\n    }\n  };\n\n  return (\n    <>\n      <div className={Style.doctor_listing_search_input}>\n        <img\n          src={Assets.search_icon}\n          className={Style.doctor_listing_search_icon_image}\n        ></img>\n        <input\n          autoComplete=\"off\"\n          id=\"search\"\n          placeholder=\"Search\"\n          className={Style.doctor_listing_search_input_box}\n          onChange={OnSearch}\n          value={searchQuery}\n        />\n      </div>\n      <div className={Style.doctor_listing_specialities_scroll}>\n\n        {\n          searchQuery ? null :\n            <div\n\n              className={`${\"ALL\" === selectedSpeciality\n                ? Style.active_speciality\n                : Style.doctor_listing_selected_speciality\n                }`}\n              onClick={() => onSelectSpeciality(\"ALL\")}\n            >\n              All Doctors\n\n              <img src={Assets.arrow_right} />\n            </div>\n        }\n\n        {(dataItem &&\n          dataItem.length !== 0) ?\n          dataItem.map((item, index) => {\n            return (\n              <div\n                key={index}\n                className={`${item.specialityName === selectedSpeciality\n                  ? Style.active_speciality\n                  : Style.doctor_listing_selected_speciality\n                  }`}\n                onClick={() => onSelectSpeciality(item.specialityName)}\n              >\n                {item.specialityName}\n\n                <img src={Assets.arrow_right} />\n              </div>\n            );\n          }) : searchQuery != \"\" && <div>The requested speciality is not found</div>}\n      </div>\n    </>\n  );\n}\n\nexport default DoctorSpecialities;\n"]},"metadata":{},"sourceType":"module"}