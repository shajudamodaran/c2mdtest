{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V10/c2md-web_react/src/components/CustomPhoneInput/CustomPhoneInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './customphoneinput.css';\nimport { Menu } from 'antd';\nimport { CaretDownOutlined, DownOutlined } from '@ant-design/icons';\nimport { getCountryArray } from '../../constants/country';\nimport { Dropdown, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomPhoneInput({\n  onChange,\n  onBlur,\n  value,\n  name\n}) {\n  _s();\n\n  let [selecedCountry, selectCountry] = useState({\n    \"name\": \"India\",\n    \"flag\": \"ðŸ‡®ðŸ‡³\",\n    \"code\": \"IN\",\n    \"dial_code\": \"+91\"\n  });\n  let [isVisible, setVisible] = useState(true);\n  let [countryArray, setCountryArray] = useState(getCountryArray());\n\n  let handleSelectChange = e => {\n    if (e.target.value && countryArray) {\n      let index = e.target.value;\n      selectCountry(countryArray[index]);\n    }\n  };\n\n  let handlePhoneNumberChange = e => {\n    var _selecedCountry$dial_, _selecedCountry$dial_2;\n\n    let {\n      value\n    } = e.target;\n    let data = {\n      \"name\": selecedCountry === null || selecedCountry === void 0 ? void 0 : selecedCountry.name,\n      \"dialCode\": selecedCountry === null || selecedCountry === void 0 ? void 0 : (_selecedCountry$dial_ = selecedCountry.dial_code) === null || _selecedCountry$dial_ === void 0 ? void 0 : _selecedCountry$dial_.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, ''),\n      \"countryCode\": selecedCountry === null || selecedCountry === void 0 ? void 0 : selecedCountry.code,\n      \"format\": \"+... .... ....\"\n    };\n    let formattedValue = {\n      formattedValue: `${selecedCountry === null || selecedCountry === void 0 ? void 0 : selecedCountry.dial_code}${value}`\n    };\n    onChange(`${selecedCountry === null || selecedCountry === void 0 ? void 0 : (_selecedCountry$dial_2 = selecedCountry.dial_code) === null || _selecedCountry$dial_2 === void 0 ? void 0 : _selecedCountry$dial_2.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '')}${value}`, data, e, \"+852123\");\n  };\n\n  function allowOnlyNumericsOrDigits(e) {\n    const charCode = e.which ? e.which : e.keyCode;\n\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      e.preventDefault();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom_phone_input_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag_box \",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"ant-dropdown-link\",\n        onClick: e => setVisible(true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flag_image\",\n          src: `https://countryflagsapi.com/png/${selecedCountry ? selecedCountry.code : \"india\"}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: \"\",\n        onChange: handleSelectChange,\n        size: \"sm\",\n        style: {\n          display: isVisible ? \"flex\" : \"none\",\n          maxHeight: \"100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          hidden: true,\n          value: \"911\",\n          children: `${selecedCountry ? selecedCountry.dial_code : \"+91\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), countryArray.length > 0 ? countryArray.map((eachCountry, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: `${eachCountry.name}  ${eachCountry.dial_code}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 41\n          }, this);\n        }) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number_box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: allowOnlyNumericsOrDigits,\n        name: name,\n        value: value,\n        onBlur: onBlur,\n        onChange: handlePhoneNumberChange,\n        placeholder: \"Enter mobile number\",\n        type: \"tel\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomPhoneInput, \"D78lSwYb4YKcAUjUFBWY4rjC9w4=\");\n\n_c = CustomPhoneInput;\nexport default CustomPhoneInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPhoneInput\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V10/c2md-web_react/src/components/CustomPhoneInput/CustomPhoneInput.jsx"],"names":["React","useEffect","useRef","useState","Menu","CaretDownOutlined","DownOutlined","getCountryArray","Dropdown","Form","CustomPhoneInput","onChange","onBlur","value","name","selecedCountry","selectCountry","isVisible","setVisible","countryArray","setCountryArray","handleSelectChange","e","target","index","handlePhoneNumberChange","data","dial_code","replace","code","formattedValue","allowOnlyNumericsOrDigits","charCode","which","keyCode","preventDefault","display","maxHeight","length","map","eachCountry","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport './customphoneinput.css'\n\nimport { Menu } from 'antd';\nimport { CaretDownOutlined, DownOutlined } from '@ant-design/icons';\nimport { getCountryArray } from '../../constants/country';\nimport { Dropdown, Form } from 'react-bootstrap';\n\n\nfunction CustomPhoneInput({ onChange, onBlur, value, name }) {\n\n    let [selecedCountry, selectCountry] = useState({ \"name\": \"India\", \"flag\": \"ðŸ‡®ðŸ‡³\", \"code\": \"IN\", \"dial_code\": \"+91\" })\n    let [isVisible, setVisible] = useState(true)\n    let [countryArray, setCountryArray] = useState(getCountryArray())\n\n\n    let handleSelectChange = (e) => {\n\n        if (e.target.value && countryArray) {\n            let index = e.target.value\n            selectCountry(countryArray[index])\n        }\n    }\n\n\n    let handlePhoneNumberChange = (e) => {\n\n        let { value } = e.target\n\n\n        let data = {\n            \"name\": selecedCountry?.name,\n            \"dialCode\": selecedCountry?.dial_code?.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, ''),\n            \"countryCode\": selecedCountry?.code,\n            \"format\": \"+... .... ....\"\n        }\n\n        let formattedValue = { formattedValue: `${selecedCountry?.dial_code}${value}` }\n\n\n\n        onChange(`${selecedCountry?.dial_code?.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '')}${value}`, data, e, \"+852123\")\n\n    }\n\n    function allowOnlyNumericsOrDigits(e) {\t\t\n\t\tconst charCode = e.which ? e.which : e.keyCode;\n\t\t\n\t\tif (charCode > 31 && (charCode < 48 || charCode > 57)) {\n            e.preventDefault();\n\t\t}\n\t}\n\n\n    return (\n\n        <div className='custom_phone_input_container'>\n\n            <div className=\"flag_box \">\n\n\n                <a className=\"ant-dropdown-link\" onClick={e => setVisible(true)}>\n                    <img className='flag_image' src={`https://countryflagsapi.com/png/${selecedCountry ? selecedCountry.code : \"india\"}`} alt=\"\" />\n\n                </a>\n\n                <Form.Select value=\"\" onChange={handleSelectChange} size=\"sm\" style={{ display: isVisible ? \"flex\" : \"none\", maxHeight:\"100px\" }}>\n\n                   \n                        <option hidden value=\"911\">\n                            {`${selecedCountry ? selecedCountry.dial_code : \"+91\"}`}\n                        </option>\n\n                        {\n                            countryArray.length > 0 ?\n                                countryArray.map((eachCountry, key) => {\n\n                                    return (\n                                        <option key={key} value={key}>{`${eachCountry.name}  ${eachCountry.dial_code}`}</option>\n                                    )\n                                }) : null\n                        }\n                   \n                </Form.Select>\n\n\n            </div>\n\n            <div className=\"number_box\">\n                <input onKeyDown={allowOnlyNumericsOrDigits} name={name} value={value} onBlur={onBlur} onChange={handlePhoneNumberChange} placeholder='Enter mobile number' type=\"tel\" id=\"\" />\n            </div>\n\n        </div>\n    )\n}\n\nexport default CustomPhoneInput\n\n\n"]},"metadata":{},"sourceType":"module"}