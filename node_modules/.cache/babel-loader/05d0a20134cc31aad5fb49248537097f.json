{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V10/c2md-web_react/src/components/Reference/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Style from \"./Reference.module.scss\";\nimport YesNoButton from \"../YesNoButton\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Reference({\n  progressIncrementer,\n  appoinment_form,\n  Store_formData,\n  progress\n}) {\n  _s();\n\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const [referenceDoctorName, setReferenceDoctorName] = useState(appoinment_form.referenceDoctorName ? appoinment_form.referenceDoctorName : \"\");\n  const [referenceFor, setReferenceFor] = useState(appoinment_form.referenceFor ? appoinment_form.referenceFor : \"\");\n  const errorInit = {\n    referenceDoctorName: false,\n    referenceFor: false,\n    error: false\n  };\n  const [isRef, setIsRef] = useState(appoinment_form.referenceFor ? \"Yes\" : \"\");\n  const [error, setError] = useState(errorInit);\n  const dispatch = useDispatch();\n  const dataList = [\"Treatment\", \"Evaluation\", \"Follow up\", \"Second Opinion\", \"Investigation\", \"Planning\", \"Review\", \"Other\"];\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n\n      if (referenceDoctorName == \"\") {\n        errorTemp = { ...errorTemp,\n          referenceDoctorName: true,\n          error: true\n        };\n      }\n\n      if (referenceFor == \"\") {\n        errorTemp = { ...errorTemp,\n          referenceFor: true,\n          error: true\n        };\n      }\n\n      setError({ ...errorTemp,\n        error: true\n      });\n    }\n  }, [referenceDoctorName, referenceFor]);\n\n  const contine = () => {\n    let errorTemp = errorInit;\n\n    if (referenceDoctorName == \"\") {\n      errorTemp = { ...errorTemp,\n        referenceDoctorName: true,\n        error: true\n      };\n    }\n\n    if (referenceFor == \"\") {\n      errorTemp = { ...errorTemp,\n        referenceFor: true,\n        error: true\n      };\n    }\n\n    setError(errorTemp);\n\n    if (!errorTemp.error) {\n      dispatch(Store_formData({ ...appoinment_form,\n        referenceDoctorName: referenceDoctorName,\n        referenceFor: referenceFor\n      }));\n      progressIncrementer();\n    }\n  };\n\n  const yes_btn_Change = () => {\n    setIsRef(\"Yes\");\n  };\n\n  const No_btn_Change = () => {\n    setIsRef(\"No\");\n    progressIncrementer();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: Style.reference_main_heading,\n      children: \"Have you been referred by any doctor/hospital?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YesNoButton, {\n      yes_btn_Change: yes_btn_Change,\n      No_btn_Change: No_btn_Change,\n      flag: isRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), isRef && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.reference_label,\n          children: \"Enter Doctor Or Hospital Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"referenceDoctorName\",\n          className: `${Style.reference_input_field} ${error.referenceDoctorName && Style.inputError}`,\n          placeholder: \"Enter Doctor or Hospital Name\",\n          onChange: e => setReferenceDoctorName(e.target.value),\n          value: referenceDoctorName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), error.referenceDoctorName && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.error,\n          children: \"Please enter the name of the doctor/hospital you have been referred by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.reference_label,\n          children: \"Referred For\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n          error: error.referenceFor,\n          DataItem: dataList,\n          onClick: e => {\n            setReferenceFor(e);\n          },\n          defaultPlaceH: referenceFor != \"\",\n          selectedData: referenceFor != \"\" ? referenceFor : \"Referred For\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), error.referenceFor && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.error,\n          children: \"Please let us know what have you been referred to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${Style.btn_floating} btn_floating`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: Style.reference_continue_button,\n          onClick: contine,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(Reference, \"Kzyew5PlYcQopmzuwUReiqtGpLM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Reference;\nexport default Reference;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reference\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V10/c2md-web_react/src/components/Reference/index.js"],"names":["React","useState","useEffect","Style","YesNoButton","Button","useDispatch","CustomDropDown","Reference","progressIncrementer","appoinment_form","Store_formData","progress","document","querySelector","scrollTo","referenceDoctorName","setReferenceDoctorName","referenceFor","setReferenceFor","errorInit","error","isRef","setIsRef","setError","dispatch","dataList","errorTemp","contine","yes_btn_Change","No_btn_Change","reference_main_heading","reference_label","reference_input_field","inputError","e","target","value","btn_floating","reference_continue_button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Style from \"./Reference.module.scss\";\nimport YesNoButton from \"../YesNoButton\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\n\nfunction Reference({\n  progressIncrementer,\n  appoinment_form,\n  Store_formData,\n  progress,\n}) {\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const [referenceDoctorName, setReferenceDoctorName] = useState(\n    appoinment_form.referenceDoctorName\n      ? appoinment_form.referenceDoctorName\n      : \"\"\n  );\n  const [referenceFor, setReferenceFor] = useState(\n    appoinment_form.referenceFor ? appoinment_form.referenceFor : \"\"\n  );\n  const errorInit = {\n    referenceDoctorName: false,\n    referenceFor: false,\n    error: false,\n  };\n  const [isRef, setIsRef] = useState(appoinment_form.referenceFor ? \"Yes\" : \"\");\n  const [error, setError] = useState(errorInit);\n  const dispatch = useDispatch();\n  const dataList = [\n    \"Treatment\",\n    \"Evaluation\",\n    \"Follow up\",\n    \"Second Opinion\",\n    \"Investigation\",\n    \"Planning\",\n    \"Review\",\n    \"Other\",\n  ];\n\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n      if (referenceDoctorName == \"\") {\n        errorTemp = { ...errorTemp, referenceDoctorName: true, error: true };\n      }\n      if (referenceFor == \"\") {\n        errorTemp = { ...errorTemp, referenceFor: true, error: true };\n      }\n      setError({ ...errorTemp, error: true });\n    }\n  }, [referenceDoctorName, referenceFor]);\n\n  const contine = () => {\n    let errorTemp = errorInit;\n    if (referenceDoctorName == \"\") {\n      errorTemp = { ...errorTemp, referenceDoctorName: true, error: true };\n    }\n    if (referenceFor == \"\") {\n      errorTemp = { ...errorTemp, referenceFor: true, error: true };\n    }\n    setError(errorTemp);\n\n    if (!errorTemp.error) {\n      dispatch(\n        Store_formData({\n          ...appoinment_form,\n          referenceDoctorName: referenceDoctorName,\n          referenceFor: referenceFor,\n        })\n      );\n      progressIncrementer();\n    }\n  };\n\n  const yes_btn_Change = () => {\n    setIsRef(\"Yes\");\n  };\n\n  const No_btn_Change = () => {\n    setIsRef(\"No\");\n    progressIncrementer();\n  };\n\n  return (\n    <>\n      <h3 className={Style.reference_main_heading}>\n        Have you been referred by any doctor/hospital?\n      </h3>\n      <YesNoButton\n        yes_btn_Change={yes_btn_Change}\n        No_btn_Change={No_btn_Change}\n        flag={isRef}\n      />\n      {isRef && (\n        <>\n          <div className=\"form-group\">\n            <label className={Style.reference_label}>\n              Enter Doctor Or Hospital Name\n            </label>\n            <input\n              type=\"text\"\n              name=\"referenceDoctorName\"\n              className={`${Style.reference_input_field} ${\n                error.referenceDoctorName && Style.inputError\n              }`}\n              placeholder=\"Enter Doctor or Hospital Name\"\n              onChange={(e) => setReferenceDoctorName(e.target.value)}\n              value={referenceDoctorName}\n            />\n            {error.referenceDoctorName && (\n              <p className={Style.error}>\n                Please enter the name of the doctor/hospital you have been\n                referred by\n              </p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label className={Style.reference_label}>Referred For</label>\n            <CustomDropDown\n              error={error.referenceFor}\n              DataItem={dataList}\n              onClick={(e) => {\n                setReferenceFor(e);\n              }}\n              defaultPlaceH={referenceFor != \"\"}\n              selectedData={referenceFor != \"\" ? referenceFor : \"Referred For\"}\n            />\n            {/* <input\n                    type=\"text\"\n                    name=\"referenceFor\"\n                    className={`${Style.reference_input_field} ${error.referenceFor&&Style.inputError}`}\n                    placeholder=\"Enter Referred For\"\n                    onChange={(e)=>setReferenceFor(e.target.value)}\n                    value={referenceFor}\n                /> */}\n            {error.referenceFor && (\n              <p className={Style.error}>\n                Please let us know what have you been referred to\n              </p>\n            )}\n          </div>\n          <div className={`${Style.btn_floating} btn_floating`}>\n            <Button\n              className={Style.reference_continue_button}\n              onClick={contine}\n            >\n              Continue\n            </Button>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Reference;\n"]},"metadata":{},"sourceType":"module"}