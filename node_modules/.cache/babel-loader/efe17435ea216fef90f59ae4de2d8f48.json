{"ast":null,"code":"var _formatTime;\n\nimport loginedApi from \"../apis\";\nimport { FETCH_APPOINTMENT_HISTORY, FETCH_SELECTED_APPOINTMENT_DETAILS } from \"./type\";\nimport specialist from \"../specialityList\";\n\nconst publicIp = require(\"public-ip\");\n\nlet IP = publicIp.v4();\n\nconst {\n  detect\n} = require('detect-browser');\n\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = (_formatTime = formatTime) === null || _formatTime === void 0 ? void 0 : _formatTime.slice(1);\n\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nexport const fetchAppointmentHistory = patientData => async dispatch => {\n  let resp = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      \"browserTimeZone\": \"GMT%2B05:30\"\n    },\n    \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n  const res = await loginedApi.post(\"getappointmenthistory\", {\n    token: \"C2MDVerificationToken\",\n    version: \"2.0\",\n    data: {\n      browserTimeZone: `GMT${formatTime}`,\n      patientId: patientData === null || patientData === void 0 ? void 0 : patientData.patientId,\n      //\"48315460\",\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      accessCountry: doctorscountrycode.Country\n    },\n    \"requestType\": 58\n  });\n  console.log(res);\n\n  if (res.status === 200) {\n    dispatch({\n      type: FETCH_APPOINTMENT_HISTORY,\n      payload: res.data.data\n    });\n  }\n};\nexport const fetchSelectedAppointmentDetails = _ref => {\n  let {\n    appointmentId,\n    userData\n  } = _ref;\n  return async dispatch => {\n    let resp = await loginedApi.post(\"getcountrycode\", {\n      \"token\": \"token\",\n      \"version\": \"2.0\",\n      \"data\": {\n        \"browserTimeZone\": \"GMT%2B05:30\"\n      },\n      \"requestType\": 1058\n    });\n    const doctorscountrycode = resp.data.data;\n    const res = await loginedApi.post(\"appointments\", {\n      \"requestType\": \"77\",\n      \"token\": \"C2MDVerificationToken\",\n      \"data\": {\n        \"appointmentId\": appointmentId,\n        \"userType\": userData === null || userData === void 0 ? void 0 : userData.userType,\n        browserTimeZone: `GMT${formatTime}`,\n        \"userId\": userData === null || userData === void 0 ? void 0 : userData.userId,\n        \"currency\": userData === null || userData === void 0 ? void 0 : userData.today_rate.currency,\n        Browser: browser.name + \" \" + browser.version,\n        appname: \"C2MD Web\",\n        Ipaddress: doctorscountrycode.Ipaddress,\n        useragent: userAgent\n      }\n    });\n    console.log(res);\n\n    if (res.status === 200) {\n      dispatch({\n        type: FETCH_SELECTED_APPOINTMENT_DETAILS,\n        payload: res.data.data\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V11/c2md-web_react/src/actions/AppointmentActions.js"],"names":["loginedApi","FETCH_APPOINTMENT_HISTORY","FETCH_SELECTED_APPOINTMENT_DETAILS","specialist","publicIp","require","IP","v4","detect","browser","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","result","slice","search","fetchAppointmentHistory","patientData","dispatch","resp","post","doctorscountrycode","data","res","token","version","browserTimeZone","patientId","Ipaddress","useragent","Browser","name","appname","Os","accessCountry","Country","console","log","status","type","payload","fetchSelectedAppointmentDetails","appointmentId","userData","userType","userId","today_rate","currency"],"mappings":"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","sourcesContent":["import loginedApi from \"../apis\";\nimport { FETCH_APPOINTMENT_HISTORY, FETCH_SELECTED_APPOINTMENT_DETAILS } from \"./type\";\nimport specialist from \"../specialityList\";\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nconst { detect } = require('detect-browser');\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\")\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\")\n}//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\n\nexport const fetchAppointmentHistory = (patientData) => async (dispatch) => {\n\n    let resp = await loginedApi.post(\"getcountrycode\", \n    {\n      \"token\": \"token\",\n      \"version\":\"2.0\",\n      \"data\": {\"browserTimeZone\":\"GMT%2B05:30\"},\n      \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n\n\n    const res = await loginedApi.post(\"getappointmenthistory\", {\n\n        token: \"C2MDVerificationToken\",\n        version: \"2.0\",\n        data: {\n            browserTimeZone: `GMT${formatTime}`,\n            patientId:patientData?.patientId, //\"48315460\",\n            Ipaddress: doctorscountrycode.Ipaddress, \n            useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n            Os: platform ,\n          \n            accessCountry: doctorscountrycode.Country,\n        },\n        \"requestType\": 58,\n    });\n\n    console.log(res);\n\n    if (res.status === 200) {\n        dispatch({\n            type: FETCH_APPOINTMENT_HISTORY,\n            payload: res.data.data,\n        });\n    }\n};\n\n\nexport const fetchSelectedAppointmentDetails = ({ appointmentId,userData}) => async (dispatch) => {\n\n    let resp = await loginedApi.post(\"getcountrycode\", \n    {\n      \"token\": \"token\",\n      \"version\":\"2.0\",\n      \"data\": {\"browserTimeZone\":\"GMT%2B05:30\"},\n      \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n\n    const res = await loginedApi.post(\"appointments\",\n        {\n            \"requestType\": \"77\",\n            \"token\": \"C2MDVerificationToken\",\n            \"data\": {\n                \"appointmentId\": appointmentId,\n                \"userType\": userData?.userType,\n                browserTimeZone: `GMT${formatTime}`,\n                \"userId\": userData?.userId,\n                \"currency\": userData?.today_rate.currency,\n                Browser: browser.name+\" \"+browser.version,\n                appname: \"C2MD Web\",\n                Ipaddress: doctorscountrycode.Ipaddress, \n                useragent: userAgent,\n            }\n        }\n    );\n\n    console.log(res);\n\n    if (res.status === 200) {\n        dispatch({\n            type: FETCH_SELECTED_APPOINTMENT_DETAILS,\n            payload: res.data.data,\n        });\n    }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}