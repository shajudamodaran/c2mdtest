{"ast":null,"code":"var _jsxFileName = \"/home/veena/Downloads/connect2mydoctor-phase1/src/pages/Treatment.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetch_clientDetails } from '../actions/MicrositeAction';\nimport { fetchSpeciality } from \"../actions/SpecialityListingAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Speciality = /*#__PURE__*/React.lazy(_c = () => import(\"../components/Speciality\"));\n_c2 = Speciality;\nconst MicrositeLayout = /*#__PURE__*/React.lazy(_c3 = () => import(\"../components/MicrositeLayout/Layout\"));\n_c4 = MicrositeLayout;\nconst Treatment = /*#__PURE__*/React.lazy(_c5 = () => import(\"../components/TreatmentListing\"));\n_c6 = Treatment;\n\nfunction TreatmentsPage() {\n  _s();\n\n  const clientDetails = useSelector(state => state.clientDetails);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!clientDetails.logo) {\n      dispatch(fetch_clientDetails());\n    }\n  }, []);\n  useEffect(() => {\n    dispatch(fetchSpeciality());\n  }, []);\n  const speciality = useSelector(state => state.specialityList.specialityList);\n  return /*#__PURE__*/_jsxDEV(MicrositeLayout, {\n    clientDetails: clientDetails,\n    children: /*#__PURE__*/_jsxDEV(Treatment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TreatmentsPage, \"KXQ1sxo0/DBzEmCXKvUM47yxCp0=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c7 = TreatmentsPage;\nexport default TreatmentsPage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Speciality$React.lazy\");\n$RefreshReg$(_c2, \"Speciality\");\n$RefreshReg$(_c3, \"MicrositeLayout$React.lazy\");\n$RefreshReg$(_c4, \"MicrositeLayout\");\n$RefreshReg$(_c5, \"Treatment$React.lazy\");\n$RefreshReg$(_c6, \"Treatment\");\n$RefreshReg$(_c7, \"TreatmentsPage\");","map":{"version":3,"sources":["/home/veena/Downloads/connect2mydoctor-phase1/src/pages/Treatment.js"],"names":["React","lazy","useEffect","useSelector","useDispatch","fetch_clientDetails","fetchSpeciality","Speciality","MicrositeLayout","Treatment","TreatmentsPage","clientDetails","state","dispatch","logo","speciality","specialityList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AACA,SAASC,eAAT,QAAgC,oCAAhC;;AACA,MAAMC,UAAU,gBAAGP,KAAK,CAACC,IAAN,MAAW,MAAM,OAAO,0BAAP,CAAjB,CAAnB;MAAMM,U;AAGN,MAAMC,eAAe,gBAAGR,KAAK,CAACC,IAAN,OAAW,MACjC,OAAO,sCAAP,CADsB,CAAxB;MAAMO,e;AAGN,MAAMC,SAAS,gBAAGT,KAAK,CAACC,IAAN,OAAW,MAC3B,OAAO,gCAAP,CADgB,CAAlB;MAAMQ,S;;AAIN,SAASC,cAAT,GAA0B;AAAA;;AAExB,QAAMC,aAAa,GAAGR,WAAW,CAC9BS,KAAD,IAAWA,KAAK,CAACD,aADc,CAAjC;AAKA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG,CAACS,aAAa,CAACG,IAAlB,EAAuB;AACrBD,MAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR;AACD;AACF,GAJQ,EAIP,EAJO,CAAT;AAMAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMS,UAAU,GAAGZ,WAAW,CAC3BS,KAAD,IAAWA,KAAK,CAACI,cAAN,CAAqBA,cADJ,CAA9B;AAMA,sBACE,QAAC,eAAD;AAAiB,IAAA,aAAa,EAAEL,aAAhC;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlCQD,c;UAEeP,W,EAKLC,W,EAWED,W;;;MAlBZO,c;AAoCT,eAAeA,cAAf","sourcesContent":["import React, { lazy,useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {fetch_clientDetails} from '../actions/MicrositeAction';\nimport { fetchSpeciality } from \"../actions/SpecialityListingAction\";\nconst Speciality = React.lazy(() => import(\"../components/Speciality\"));\n\n\nconst MicrositeLayout = React.lazy(() =>\n  import(\"../components/MicrositeLayout/Layout\")\n);\nconst Treatment = React.lazy(() =>\n  import(\"../components/TreatmentListing\")\n);\n\nfunction TreatmentsPage() {\n\n  const clientDetails = useSelector(\n    (state) => state.clientDetails\n  );\n\n\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    if(!clientDetails.logo){\n      dispatch(fetch_clientDetails())\n    }\n  },[])\n\n  useEffect(() => {\n    dispatch(fetchSpeciality());\n  }, []);\n\n  const speciality = useSelector(\n    (state) => state.specialityList.specialityList\n  );\n\n\n\n  return (\n    <MicrositeLayout clientDetails={clientDetails}>\n      <Treatment />\n      {/* {speciality &&\n        speciality.legth !== 0 &&\n        speciality.map((item) => {\n          return <Speciality Item={item} key={item.specialityId} />;\n        })} */}\n    </MicrositeLayout>\n  );\n}\n\nexport default TreatmentsPage;\n"]},"metadata":{},"sourceType":"module"}