{"ast":null,"code":"var _jsxFileName = \"/home/veena/Downloads/c2md-web_react/src/components/AddMedicine/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Style from \"./AddMedicine.module.scss\";\nimport YesNoButton from \"../YesNoButton\";\nimport PeriodAccordion from \"../PeriodAccordion\";\nimport AddMoreContinue from \"../AddContinueButtons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Accordion } from \"react-bootstrap\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport Custommodal from \"../Layout/Custommodal\";\nimport Assets from \"../Layout/Assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddMedicine(_ref) {\n  _s();\n\n  var _settingsdata$, _appoinment_form$medi, _medicationData$, _medicationData$2, _medicationData$3;\n\n  let {\n    progressIncrementer,\n    settingsdata,\n    appoinment_form,\n    Store_formData\n  } = _ref;\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const [showModal, setShowModal] = useState(false);\n  const [modalItem, setItem] = useState(\"Do you really want to delete this medicine ?\");\n  const patient_data = useSelector(state => state.bookAppoinment.patient_data);\n  const [deleteItems, setDeleteItem] = useState(\"\");\n  const [showForm, setForm] = useState(true);\n  const dispatch = useDispatch();\n  let medicationData = [];\n  medicationData = settingsdata[1] && ((_settingsdata$ = settingsdata[1]) === null || _settingsdata$ === void 0 ? void 0 : _settingsdata$.Medication);\n  console.log(medicationData);\n  const feq = medicationData ? [0] : null;\n  const status = medicationData ? [3] : null;\n  const unit = medicationData ? [2] : null;\n  const [isMedication, setIsMedication] = useState(((_appoinment_form$medi = appoinment_form.medications) === null || _appoinment_form$medi === void 0 ? void 0 : _appoinment_form$medi.length) > 0 ? \"Yes\" : \"\");\n  const [medicine, setMedicine] = useState(appoinment_form.medications);\n  const medicineFormInit = {\n    medication: \"\",\n    quantity: \"\",\n    measurement: \"\",\n    frequency: \"\",\n    status: \"\"\n  };\n  const [medicineForm, setMedicineForm] = useState(medicineFormInit);\n  const errorInit = {\n    medication: false,\n    quantity: false,\n    measurement: false,\n    frequency: false,\n    error: false\n  };\n  const [error, setError] = useState(errorInit);\n  useEffect(() => {\n    if ((medicine === null || medicine === void 0 ? void 0 : medicine.length) !== 0) {\n      setForm(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (appoinment_form.medications == 0) {\n      if (patient_data !== null && patient_data !== void 0 && patient_data.hasOwnProperty(\"medications\")) {\n        if (Array.isArray(patient_data === null || patient_data === void 0 ? void 0 : patient_data.medications)) {\n          var _patient_data$medicat;\n\n          if ((patient_data === null || patient_data === void 0 ? void 0 : (_patient_data$medicat = patient_data.medications) === null || _patient_data$medicat === void 0 ? void 0 : _patient_data$medicat.length) !== 0) {\n            setMedicine(patient_data === null || patient_data === void 0 ? void 0 : patient_data.medications);\n          }\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n\n      if (medicineForm.medication == \"\") {\n        errorTemp = { ...errorTemp,\n          medication: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.quantity == \"\") {\n        errorTemp = { ...errorTemp,\n          quantity: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.measurement == \"\") {\n        errorTemp = { ...errorTemp,\n          measurement: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.frequency == \"\") {\n        errorTemp = { ...errorTemp,\n          frequency: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.status == \"\") {\n        errorTemp = { ...errorTemp,\n          status: true,\n          error: true\n        };\n      }\n\n      setError({ ...errorTemp,\n        error: true\n      });\n    }\n  }, [medicineForm]);\n\n  const Continue = () => {\n    let errorTemp = errorInit;\n\n    if (medicineForm.medication == \"\") {\n      errorTemp = { ...errorTemp,\n        medication: true,\n        error: true\n      };\n    }\n\n    if (medicineForm.quantity == \"\") {\n      errorTemp = { ...errorTemp,\n        quantity: true,\n        error: true\n      };\n    }\n\n    if (medicineForm.measurement == \"\") {\n      errorTemp = { ...errorTemp,\n        measurement: true,\n        error: true\n      };\n    }\n\n    if (medicineForm.frequency == \"\") {\n      errorTemp = { ...errorTemp,\n        frequency: true,\n        error: true\n      };\n    }\n\n    if (medicineForm.status == \"\") {\n      errorTemp = { ...errorTemp,\n        status: true,\n        error: true\n      };\n    }\n\n    setError(errorTemp);\n\n    if (!errorTemp.error || medicine.length > 0 && errorTemp.medication && errorTemp.quantity && errorTemp.measurement && errorTemp.frequency && errorTemp.status) {\n      setForm(false); // setMedicine(medicineForm?[medicineForm]:[...medicine,medicineForm])\n\n      if (medicineForm.medication != \"\") {\n        dispatch(Store_formData({ ...appoinment_form,\n          medications: [...medicine, medicineForm]\n        }));\n      } else {\n        dispatch(Store_formData({ ...appoinment_form,\n          medications: [...medicine]\n        }));\n      } // dispatch(Store_formData({ ...appoinment_form, medications: [...medicine,medicineForm]}));\n\n\n      progressIncrementer();\n    }\n  };\n\n  const AddMore = () => {\n    let errorTemp = errorInit;\n\n    if (showForm) {\n      if (medicineForm.medication == \"\") {\n        errorTemp = { ...errorTemp,\n          medication: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.quantity == \"\") {\n        errorTemp = { ...errorTemp,\n          quantity: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.measurement == \"\") {\n        errorTemp = { ...errorTemp,\n          measurement: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.frequency == \"\") {\n        errorTemp = { ...errorTemp,\n          frequency: true,\n          error: true\n        };\n      }\n\n      if (medicineForm.status == \"\") {\n        errorTemp = { ...errorTemp,\n          status: true,\n          error: true\n        };\n      }\n\n      setError(errorTemp);\n\n      if (!errorTemp.error) {\n        setMedicine([...medicine, medicineForm]);\n        setMedicineForm(medicineFormInit);\n      }\n    } else {\n      setForm(true);\n    }\n  };\n\n  const yes_btn_Change = () => {\n    // setIsAllergies(true)\n    setIsMedication(\"Yes\");\n  };\n\n  const No_btn_Change = () => {\n    // setIsAllergies(false)\n    setIsMedication(\"No\");\n    progressIncrementer();\n  };\n\n  const deleteMedication = (item, index) => {\n    setShowModal(true);\n    setDeleteItem(item);\n  };\n\n  const onCancel = item => {\n    let filter1 = medicine.filter(obj => {\n      return obj.medication != (item === null || item === void 0 ? void 0 : item.medication);\n    });\n    dispatch(Store_formData({ ...appoinment_form,\n      medications: filter1\n    }));\n    setMedicine(filter1);\n    setShowModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: Style.add_medicine_main_heading,\n      children: \"Are you taking any medicines?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YesNoButton, {\n      yes_btn_Change: yes_btn_Change,\n      flag: isMedication,\n      No_btn_Change: No_btn_Change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), isMedication && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion, {\n        className: Style.medications_accordion_align,\n        children: medicine === null || medicine === void 0 ? void 0 : medicine.map((med, index) => {\n          return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: index,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.medication_accordion_repeat,\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: Style.medication_accordion_main_heading,\n                  children: med.medication\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Assets.symtomsClose,\n                alt: \"\",\n                onClick: () => deleteMedication(med, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.add_medicine_medicine_details,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: Style.add_medicine_label,\n                    children: \"Medicine Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"medication\",\n                    className: Style.add_medicine_input_field,\n                    placeholder: \"Enter Medicine Name\",\n                    value: med.medication,\n                    onChange: e => {\n                      let newMedicine = [...medicine];\n                      newMedicine[index].medication = e.target.value;\n                      setMedicine(newMedicine);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.add_medicine_align_contents,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: Style.add_medicine_align_col1,\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: Style.add_medicine_label,\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      name: \"quantity\",\n                      min: \"0\",\n                      className: Style.add_medicine_input_field,\n                      placeholder: \"Enter Quantity\",\n                      value: med.quantity,\n                      onChange: e => {\n                        let newMedicine = [...medicine];\n                        newMedicine[index].quantity = e.target.value;\n                        setMedicine(newMedicine);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: Style.add_medicine_align_col2,\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: Style.add_medicine_label,\n                      children: \"Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n                      error: false,\n                      DataItem: unit,\n                      onClick: e => {\n                        let newMedicine = [...medicine];\n                        newMedicine[index].measurement = e;\n                        setMedicine(newMedicine);\n                      },\n                      defaultPlaceH: med.measurement != \"\",\n                      selectedData: med.measurement != \"\" ? med.measurement : \"Select Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group  mb-spce\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: Style.add_medicine_label,\n                    children: \"Frequency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n                    error: false,\n                    DataItem: feq,\n                    onClick: e => {\n                      let newMedicine = [...medicine];\n                      newMedicine[index].frequency = e;\n                      setMedicine(newMedicine);\n                    },\n                    defaultPlaceH: med.frequency != \"\",\n                    selectedData: med.frequency != \"\" ? med.frequency : \"Select Frequency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: Style.add_medicine_label,\n                    children: \"Current Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n                    error: false,\n                    DataItem: status,\n                    onClick: e => {\n                      let newMedicine = [...medicine];\n                      newMedicine[index].status = e;\n                      setMedicine(newMedicine);\n                    },\n                    defaultPlaceH: med.status != \"\",\n                    selectedData: med.status != \"\" ? med.status : \"Current Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.add_medicine_medicine_details,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: Style.add_medicine_label,\n            children: [\"Medicine Name \", medicine.length + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"medication\",\n            className: `${Style.add_medicine_input_field} ${error.medication && Style.inputError}`,\n            placeholder: \"Enter Medicine Name\",\n            value: medicineForm.medication,\n            onChange: e => {\n              setMedicineForm({ ...medicineForm,\n                medication: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this), error.medication && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.error,\n            children: \"Enter name of the medicine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.add_medicine_align_contents,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.add_medicine_align_col1,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: Style.add_medicine_label,\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"quantity\",\n              min: \"0\",\n              className: `${Style.add_medicine_input_field} ${error.quantity && Style.inputError}`,\n              placeholder: \"Enter Quantity\",\n              value: medicineForm.quantity,\n              onChange: e => {\n                setMedicineForm({ ...medicineForm,\n                  quantity: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), error.quantity && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: Style.error,\n              children: \"Enter how much of the medicine do you take/use\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.add_medicine_align_col2,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: Style.add_medicine_label,\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n              error: error.measurement,\n              DataItem: (_medicationData$ = medicationData[2]) === null || _medicationData$ === void 0 ? void 0 : _medicationData$.Unit,\n              onClick: e => {\n                setMedicineForm({ ...medicineForm,\n                  measurement: e\n                });\n              },\n              defaultPlaceH: medicineForm.measurement != \"\",\n              selectedData: medicineForm.measurement != \"\" ? medicineForm.measurement : \"Select Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), error.measurement && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: Style.error,\n              children: \"Select Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group  mb-spce\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: Style.add_medicine_label,\n            children: \"Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n            error: error.frequency,\n            DataItem: (_medicationData$2 = medicationData[0]) === null || _medicationData$2 === void 0 ? void 0 : _medicationData$2.Frequency,\n            onClick: e => {\n              setMedicineForm({ ...medicineForm,\n                frequency: e\n              });\n            },\n            defaultPlaceH: medicineForm.frequency != \"\",\n            selectedData: medicineForm.frequency != \"\" ? medicineForm.frequency : \"Select Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this), error.frequency && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.error,\n            children: \"Enter how often do you take/use the medicine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group  mb-spce\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: Style.add_medicine_label,\n            children: \"Current Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n            error: error.status,\n            DataItem: (_medicationData$3 = medicationData[3]) === null || _medicationData$3 === void 0 ? void 0 : _medicationData$3.Status,\n            onClick: e => {\n              setMedicineForm({ ...medicineForm,\n                status: e\n              });\n            },\n            defaultPlaceH: medicineForm.status != \"\",\n            selectedData: medicineForm.status != \"\" ? medicineForm.status : \"Current Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), error.status && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.error,\n            children: \"Do you still take/use the medicine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddMoreContinue, {\n        progressIncrementer: progressIncrementer,\n        Continue: Continue,\n        AddMore: AddMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Custommodal, {\n        showModal: showModal,\n        setShowModal: setShowModal,\n        onCancel: onCancel,\n        deleteItems: deleteItems,\n        modalItem: modalItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(AddMedicine, \"s10RJRNlEFuvoEUsE5X1QH1tMoI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddMedicine;\nexport default AddMedicine;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMedicine\");","map":{"version":3,"sources":["/home/veena/Downloads/c2md-web_react/src/components/AddMedicine/index.js"],"names":["React","useState","useEffect","Style","YesNoButton","PeriodAccordion","AddMoreContinue","useDispatch","useSelector","Accordion","CustomDropDown","Custommodal","Assets","AddMedicine","progressIncrementer","settingsdata","appoinment_form","Store_formData","document","querySelector","scrollTo","showModal","setShowModal","modalItem","setItem","patient_data","state","bookAppoinment","deleteItems","setDeleteItem","showForm","setForm","dispatch","medicationData","Medication","console","log","feq","status","unit","isMedication","setIsMedication","medications","length","medicine","setMedicine","medicineFormInit","medication","quantity","measurement","frequency","medicineForm","setMedicineForm","errorInit","error","setError","hasOwnProperty","Array","isArray","errorTemp","Continue","AddMore","yes_btn_Change","No_btn_Change","deleteMedication","item","index","onCancel","filter1","filter","obj","add_medicine_main_heading","medications_accordion_align","map","med","medication_accordion_repeat","medication_accordion_main_heading","symtomsClose","add_medicine_medicine_details","add_medicine_label","add_medicine_input_field","e","newMedicine","target","value","add_medicine_align_contents","add_medicine_align_col1","add_medicine_align_col2","inputError","Unit","Frequency","Status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Style from \"./AddMedicine.module.scss\";\nimport YesNoButton from \"../YesNoButton\";\nimport PeriodAccordion from \"../PeriodAccordion\";\nimport AddMoreContinue from \"../AddContinueButtons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Accordion } from \"react-bootstrap\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport Custommodal from \"../Layout/Custommodal\";\nimport Assets from \"../Layout/Assets\";\nfunction AddMedicine({\n  progressIncrementer,\n  settingsdata,\n  appoinment_form,\n  Store_formData,\n}) {\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const [showModal, setShowModal] = useState(false);\n  const [modalItem, setItem] = useState(\n    \"Do you really want to delete this medicine ?\"\n  );\n  const patient_data = useSelector(\n    (state) => state.bookAppoinment.patient_data\n  );\n  const [deleteItems, setDeleteItem] = useState(\"\");\n  const [showForm, setForm] = useState(true);\n  const dispatch = useDispatch();\n\n  let medicationData = []\n  medicationData = settingsdata[1] && settingsdata[1]?.Medication;\n\n  console.log(medicationData);\n\n  const feq = medicationData?[0]:null;\n  const status = medicationData?[3]:null;\n  const unit = medicationData?[2]:null;\n\n  const [isMedication, setIsMedication] = useState(\n    appoinment_form.medications?.length > 0 ? \"Yes\" : \"\"\n  );\n  const [medicine, setMedicine] = useState(appoinment_form.medications);\n  const medicineFormInit = {\n    medication: \"\",\n    quantity: \"\",\n    measurement: \"\",\n    frequency: \"\",\n    status: \"\",\n  };\n  const [medicineForm, setMedicineForm] = useState(medicineFormInit);\n\n  const errorInit = {\n    medication: false,\n    quantity: false,\n    measurement: false,\n    frequency: false,\n    error: false,\n  };\n  const [error, setError] = useState(errorInit);\n  useEffect(() => {\n    if (medicine?.length !== 0) {\n      setForm(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (appoinment_form.medications == 0) {\n      if (patient_data?.hasOwnProperty(\"medications\")) {\n        if (Array.isArray(patient_data?.medications)) {\n          if (patient_data?.medications?.length !== 0) {\n            setMedicine(patient_data?.medications);\n          }\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n      if (medicineForm.medication == \"\") {\n        errorTemp = { ...errorTemp, medication: true, error: true };\n      }\n      if (medicineForm.quantity == \"\") {\n        errorTemp = { ...errorTemp, quantity: true, error: true };\n      }\n      if (medicineForm.measurement == \"\") {\n        errorTemp = { ...errorTemp, measurement: true, error: true };\n      }\n      if (medicineForm.frequency == \"\") {\n        errorTemp = { ...errorTemp, frequency: true, error: true };\n      }\n      if (medicineForm.status == \"\") {\n        errorTemp = { ...errorTemp, status: true, error: true };\n      }\n      setError({ ...errorTemp, error: true });\n    }\n  }, [medicineForm]);\n\n  const Continue = () => {\n    let errorTemp = errorInit;\n    if (medicineForm.medication == \"\") {\n      errorTemp = { ...errorTemp, medication: true, error: true };\n    }\n    if (medicineForm.quantity == \"\") {\n      errorTemp = { ...errorTemp, quantity: true, error: true };\n    }\n    if (medicineForm.measurement == \"\") {\n      errorTemp = { ...errorTemp, measurement: true, error: true };\n    }\n    if (medicineForm.frequency == \"\") {\n      errorTemp = { ...errorTemp, frequency: true, error: true };\n    }\n    if (medicineForm.status == \"\") {\n      errorTemp = { ...errorTemp, status: true, error: true };\n    }\n    setError(errorTemp);\n\n    if (!errorTemp.error || (medicine.length > 0 && (errorTemp.medication && errorTemp.quantity && errorTemp.measurement && errorTemp.frequency && errorTemp.status))) {\n      setForm(false);\n      // setMedicine(medicineForm?[medicineForm]:[...medicine,medicineForm])\n      if (medicineForm.medication != \"\") {\n        dispatch(\n          Store_formData({\n            ...appoinment_form,\n            medications: [...medicine, medicineForm],\n          })\n        );\n      } else {\n        dispatch(\n          Store_formData({ ...appoinment_form, medications: [...medicine] })\n        );\n      }\n      // dispatch(Store_formData({ ...appoinment_form, medications: [...medicine,medicineForm]}));\n      progressIncrementer();\n    }\n  };\n\n  const AddMore = () => {\n    let errorTemp = errorInit;\n    if (showForm) {\n      if (medicineForm.medication == \"\") {\n        errorTemp = { ...errorTemp, medication: true, error: true };\n      }\n      if (medicineForm.quantity == \"\") {\n        errorTemp = { ...errorTemp, quantity: true, error: true };\n      }\n      if (medicineForm.measurement == \"\") {\n        errorTemp = { ...errorTemp, measurement: true, error: true };\n      }\n      if (medicineForm.frequency == \"\") {\n        errorTemp = { ...errorTemp, frequency: true, error: true };\n      }\n      if (medicineForm.status == \"\") {\n        errorTemp = { ...errorTemp, status: true, error: true };\n      }\n      setError(errorTemp);\n\n      if (!errorTemp.error) {\n        setMedicine([...medicine, medicineForm]);\n        setMedicineForm(medicineFormInit);\n      }\n    } else {\n      setForm(true);\n    }\n  };\n\n  const yes_btn_Change = () => {\n    // setIsAllergies(true)\n    setIsMedication(\"Yes\");\n  };\n\n  const No_btn_Change = () => {\n    // setIsAllergies(false)\n    setIsMedication(\"No\");\n    progressIncrementer();\n  };\n  const deleteMedication = (item, index) => {\n    setShowModal(true);\n    setDeleteItem(item);\n  };\n  const onCancel = (item) => {\n    let filter1 = medicine.filter((obj) => {\n      return obj.medication != item?.medication;\n    });\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        medications: filter1,\n      })\n    );\n    setMedicine(filter1);\n    setShowModal(false);\n  };\n  return (\n    <>\n      <h3 className={Style.add_medicine_main_heading}>Are you taking any medicines?</h3>\n      <YesNoButton\n        yes_btn_Change={yes_btn_Change}\n        flag={isMedication}\n        No_btn_Change={No_btn_Change}\n      />\n      {isMedication && (\n        <>\n          <Accordion className={Style.medications_accordion_align}>\n          \n            {medicine?.map((med, index) => {\n              return (\n                <Accordion.Item key={index} eventKey={index}>\n                  <div className={Style.medication_accordion_repeat}>\n                    <Accordion.Header>\n                      <span className={Style.medication_accordion_main_heading}>\n                        {med.medication}\n                      </span>\n                    </Accordion.Header>\n                    <img\n                      src={Assets.symtomsClose}\n                      alt=\"\"\n                      onClick={() => deleteMedication(med, index)}\n                    />\n                  </div>\n                  <Accordion.Body>\n                    <div className={Style.add_medicine_medicine_details}>\n                      <div className=\"form-group\">\n                        <label className={Style.add_medicine_label}>\n                          Medicine Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"medication\"\n                          className={Style.add_medicine_input_field}\n                          placeholder=\"Enter Medicine Name\"\n                          value={med.medication}\n                          onChange={(e) => {\n                            let newMedicine = [...medicine];\n                            newMedicine[index].medication = e.target.value;\n                            setMedicine(newMedicine);\n                          }}\n                        />\n                      </div>\n                      <div className={Style.add_medicine_align_contents}>\n                        <div className={Style.add_medicine_align_col1}>\n                          <label className={Style.add_medicine_label}>\n                            Quantity\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"quantity\"\n                            min=\"0\"\n                            className={Style.add_medicine_input_field}\n                            placeholder=\"Enter Quantity\"\n                            value={med.quantity}\n                            onChange={(e) => {\n                              let newMedicine = [...medicine];\n                              newMedicine[index].quantity = e.target.value;\n                              setMedicine(newMedicine);\n                            }}\n                          />\n                        </div>\n                        <div className={Style.add_medicine_align_col2}>\n                          <label className={Style.add_medicine_label}>\n                            Unit\n                          </label>\n                          <CustomDropDown\n                            error={false}\n                            DataItem={unit}\n                            onClick={(e) => {\n                              let newMedicine = [...medicine];\n                              newMedicine[index].measurement = e;\n                              setMedicine(newMedicine);\n                            }}\n                            defaultPlaceH={med.measurement != \"\"}\n                            selectedData={\n                              med.measurement != \"\"\n                                ? med.measurement\n                                : \"Select Unit\"\n                            }\n                          />\n                        </div>\n                      </div>\n                      <div className=\"form-group  mb-spce\">\n                        <label className={Style.add_medicine_label}>\n                          Frequency\n                        </label>\n                        <CustomDropDown\n                          error={false}\n                          DataItem={feq}\n                          onClick={(e) => {\n                            let newMedicine = [...medicine];\n                            newMedicine[index].frequency = e;\n                            setMedicine(newMedicine);\n                          }}\n                          defaultPlaceH={med.frequency != \"\"}\n                          selectedData={\n                            med.frequency != \"\"\n                              ? med.frequency\n                              : \"Select Frequency\"\n                          }\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label className={Style.add_medicine_label}>\n                          Current Status\n                        </label>\n                        <CustomDropDown\n                          error={false}\n                          DataItem={status}\n                          onClick={(e) => {\n                            let newMedicine = [...medicine];\n                            newMedicine[index].status = e;\n                            setMedicine(newMedicine);\n                          }}\n                          defaultPlaceH={med.status != \"\"}\n                          selectedData={\n                            med.status != \"\" ? med.status : \"Current Status\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  </Accordion.Body>\n                </Accordion.Item>\n              );\n            })}\n          </Accordion>\n          {showForm && (\n            <div className={Style.add_medicine_medicine_details}>\n              <div className=\"form-group\">\n                <label className={Style.add_medicine_label}>\n                  Medicine Name {medicine.length + 1}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"medication\"\n                  className={`${Style.add_medicine_input_field} ${error.medication && Style.inputError\n                    }`}\n                  placeholder=\"Enter Medicine Name\"\n                  value={medicineForm.medication}\n                  onChange={(e) => {\n                    setMedicineForm({\n                      ...medicineForm,\n                      medication: e.target.value,\n                    });\n                  }}\n                />\n                {error.medication && (\n                  <p className={Style.error}>Enter name of the medicine</p>\n                )}\n              </div>\n              <div className={Style.add_medicine_align_contents}>\n                <div className={Style.add_medicine_align_col1}>\n                  <label className={Style.add_medicine_label}>Quantity</label>\n                  <input\n                    type=\"number\"\n                    name=\"quantity\"\n                    min=\"0\"\n                    className={`${Style.add_medicine_input_field} ${error.quantity && Style.inputError\n                      }`}\n                    placeholder=\"Enter Quantity\"\n                    value={medicineForm.quantity}\n                    onChange={(e) => {\n                      setMedicineForm({\n                        ...medicineForm,\n                        quantity: e.target.value,\n                      });\n                    }}\n                  />\n                  {error.quantity && (\n                    <p className={Style.error}>\n                      Enter how much of the medicine do you take/use\n                    </p>\n                  )}\n                </div>\n                <div className={Style.add_medicine_align_col2}>\n                  <label className={Style.add_medicine_label}>Unit</label>\n\n                  <CustomDropDown\n                    error={error.measurement}\n                    DataItem={medicationData[2]?.Unit}\n                    onClick={(e) => {\n                      setMedicineForm({ ...medicineForm, measurement: e });\n                    }}\n                    defaultPlaceH={medicineForm.measurement != \"\"}\n                    selectedData={\n                      medicineForm.measurement != \"\"\n                        ? medicineForm.measurement\n                        : \"Select Unit\"\n                    }\n                  />\n\n                  {error.measurement && (\n                    <p className={Style.error}>Select Unit</p>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group  mb-spce\">\n                <label className={Style.add_medicine_label}>Frequency</label>\n                <CustomDropDown\n                  error={error.frequency}\n                  DataItem={medicationData[0]?.Frequency}\n                  onClick={(e) => {\n                    setMedicineForm({ ...medicineForm, frequency: e });\n                  }}\n                  defaultPlaceH={medicineForm.frequency != \"\"}\n                  selectedData={\n                    medicineForm.frequency != \"\"\n                      ? medicineForm.frequency\n                      : \"Select Frequency\"\n                  }\n                />\n\n                {error.frequency && (\n                  <p className={Style.error}>\n                    Enter how often do you take/use the medicine\n                  </p>\n                )}\n              </div>\n              <div className=\"form-group  mb-spce\">\n                <label className={Style.add_medicine_label}>\n                  Current Status\n                </label>\n                <CustomDropDown\n                  error={error.status}\n                  DataItem={medicationData[3]?.Status}\n                  onClick={(e) => {\n                    setMedicineForm({ ...medicineForm, status: e });\n                  }}\n                  defaultPlaceH={medicineForm.status != \"\"}\n                  selectedData={\n                    medicineForm.status != \"\"\n                      ? medicineForm.status\n                      : \"Current Status\"\n                  }\n                />\n                {error.status && (\n                  <p className={Style.error}>\n                    Do you still take/use the medicine\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n          <AddMoreContinue\n            progressIncrementer={progressIncrementer}\n            Continue={Continue}\n            AddMore={AddMore}\n          />\n          <Custommodal\n            showModal={showModal}\n            setShowModal={setShowModal}\n            onCancel={onCancel}\n            deleteItems={deleteItems}\n            modalItem={modalItem}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default AddMedicine;\n"]},"metadata":{},"sourceType":"module"}