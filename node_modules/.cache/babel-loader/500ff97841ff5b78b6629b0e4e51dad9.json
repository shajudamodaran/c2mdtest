{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSession;\n\nfunction createSession() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      apiKey = _ref.apiKey,\n      sessionId = _ref.sessionId,\n      token = _ref.token,\n      onStreamsUpdated = _ref.onStreamsUpdated,\n      onConnect = _ref.onConnect,\n      onError = _ref.onError,\n      options = _ref.options;\n\n  if (!apiKey) {\n    throw new Error('Missing apiKey');\n  }\n\n  if (!sessionId) {\n    throw new Error('Missing sessionId');\n  }\n\n  if (!token) {\n    throw new Error('Missing token');\n  }\n\n  var streams = [];\n\n  var onStreamCreated = function onStreamCreated(event) {\n    var index = streams.findIndex(function (stream) {\n      return stream.id === event.stream.id;\n    });\n\n    if (index < 0) {\n      streams.push(event.stream);\n      onStreamsUpdated(streams);\n    }\n  };\n\n  var onStreamDestroyed = function onStreamDestroyed(event) {\n    var index = streams.findIndex(function (stream) {\n      return stream.id === event.stream.id;\n    });\n\n    if (index >= 0) {\n      streams.splice(index, 1);\n      onStreamsUpdated(streams);\n    }\n  };\n\n  var eventHandlers = {\n    streamCreated: onStreamCreated,\n    streamDestroyed: onStreamDestroyed\n  };\n  var session = OT.initSession(apiKey, sessionId, options);\n  session.on(eventHandlers);\n  session.connect(token, function (err) {\n    if (!session) {\n      // Either this session has been disconnected or OTSession\n      // has been unmounted so don't invoke any callbacks\n      return;\n    }\n\n    if (err && typeof onError === 'function') {\n      onError(err);\n    } else if (!err && typeof onConnect === 'function') {\n      onConnect();\n    }\n  });\n  return {\n    session: session,\n    streams: streams,\n    disconnect: function disconnect() {\n      if (session) {\n        session.off(eventHandlers);\n        session.disconnect();\n      }\n\n      streams = null;\n      onStreamCreated = null;\n      onStreamDestroyed = null;\n      eventHandlers = null;\n      session = null;\n      this.session = null;\n      this.streams = null;\n    }\n  };\n}","map":{"version":3,"sources":["/home/veena/Downloads/WEB_PUSH/c2md-web_react/node_modules/opentok-react/dist/createSession.js"],"names":["Object","defineProperty","exports","value","default","createSession","_ref","arguments","length","undefined","apiKey","sessionId","token","onStreamsUpdated","onConnect","onError","options","Error","streams","onStreamCreated","event","index","findIndex","stream","id","push","onStreamDestroyed","splice","eventHandlers","streamCreated","streamDestroyed","session","OT","initSession","on","connect","err","disconnect","off"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSession;\nfunction createSession() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      apiKey = _ref.apiKey,\n      sessionId = _ref.sessionId,\n      token = _ref.token,\n      onStreamsUpdated = _ref.onStreamsUpdated,\n      onConnect = _ref.onConnect,\n      onError = _ref.onError,\n      options = _ref.options;\n\n  if (!apiKey) {\n    throw new Error('Missing apiKey');\n  }\n\n  if (!sessionId) {\n    throw new Error('Missing sessionId');\n  }\n\n  if (!token) {\n    throw new Error('Missing token');\n  }\n\n  var streams = [];\n\n  var onStreamCreated = function onStreamCreated(event) {\n    var index = streams.findIndex(function (stream) {\n      return stream.id === event.stream.id;\n    });\n    if (index < 0) {\n      streams.push(event.stream);\n      onStreamsUpdated(streams);\n    }\n  };\n\n  var onStreamDestroyed = function onStreamDestroyed(event) {\n    var index = streams.findIndex(function (stream) {\n      return stream.id === event.stream.id;\n    });\n    if (index >= 0) {\n      streams.splice(index, 1);\n      onStreamsUpdated(streams);\n    }\n  };\n\n  var eventHandlers = {\n    streamCreated: onStreamCreated,\n    streamDestroyed: onStreamDestroyed\n  };\n\n  var session = OT.initSession(apiKey, sessionId, options);\n  session.on(eventHandlers);\n  session.connect(token, function (err) {\n    if (!session) {\n      // Either this session has been disconnected or OTSession\n      // has been unmounted so don't invoke any callbacks\n      return;\n    }\n    if (err && typeof onError === 'function') {\n      onError(err);\n    } else if (!err && typeof onConnect === 'function') {\n      onConnect();\n    }\n  });\n\n  return {\n    session: session,\n    streams: streams,\n    disconnect: function disconnect() {\n      if (session) {\n        session.off(eventHandlers);\n        session.disconnect();\n      }\n\n      streams = null;\n      onStreamCreated = null;\n      onStreamDestroyed = null;\n      eventHandlers = null;\n      session = null;\n\n      this.session = null;\n      this.streams = null;\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}