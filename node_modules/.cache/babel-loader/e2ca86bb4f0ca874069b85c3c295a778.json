{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V11/c2md-web_react/src/components/Surgeries/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Style from \"./Surgeries.module.scss\";\nimport YesNoButton from \"../YesNoButton\";\nimport CustomAccordion from \"../CustomAccordion\";\nimport AddMoreContinue from \"../AddContinueButtons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Accordion } from \"react-bootstrap\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport { toast } from \"react-toastify\";\nimport Custommodal from \"../Layout/Custommodal\";\nimport Assets from \"../Layout/Assets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Surgeries(_ref) {\n  _s();\n\n  var _appoinment_form$surg;\n\n  let {\n    progressIncrementer,\n    appoinment_form,\n    Store_formData,\n    settingsdata\n  } = _ref;\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const [showModal, setShowModal] = useState(false);\n  const [modalItem, setItem] = useState(\"Do you really want to delete this surgeries ?\");\n  const patient_data = useSelector(state => state.bookAppoinment.patient_data);\n  const [deleteItems, setDeleteItem] = useState(\"\");\n  const [showForm, setForm] = useState(true);\n  const DataItem = settingsdata[0] && settingsdata[0].SurgeyDetails[0].surgerylist;\n  const surgeryDuration = settingsdata[0] && settingsdata[0].SurgeyDetails[1].Surgeryduration;\n  const dispatch = useDispatch();\n  const [flag, setFlag] = useState((appoinment_form === null || appoinment_form === void 0 ? void 0 : (_appoinment_form$surg = appoinment_form.surgeries) === null || _appoinment_form$surg === void 0 ? void 0 : _appoinment_form$surg.length) > 0 ? \"Yes\" : \"\");\n  const surgeriesFormInit = {\n    surgery: \"\",\n    date: \"\",\n    note: \"\"\n  };\n  const [surgeriesForm, setSurgeriesForm] = useState(surgeriesFormInit);\n  const [surgeries, setsurgeries] = useState(appoinment_form.surgeries ? appoinment_form.surgeries : []);\n  const errorInit = {\n    surgery: false,\n    date: false,\n    note: false,\n    error: false\n  };\n  const [error, setError] = useState(errorInit);\n  useEffect(() => {\n    if ((surgeries === null || surgeries === void 0 ? void 0 : surgeries.length) !== 0) {\n      setForm(false);\n    }\n  }, []);\n  useEffect(() => {\n    var _appoinment_form$surg2;\n\n    if (((_appoinment_form$surg2 = appoinment_form.surgeries) === null || _appoinment_form$surg2 === void 0 ? void 0 : _appoinment_form$surg2.length) == 0) {\n      if (patient_data !== null && patient_data !== void 0 && patient_data.hasOwnProperty(\"Surgery\")) {\n        if (Array.isArray(patient_data === null || patient_data === void 0 ? void 0 : patient_data.Surgery)) {\n          var _patient_data$Surgery;\n\n          if ((patient_data === null || patient_data === void 0 ? void 0 : (_patient_data$Surgery = patient_data.Surgery) === null || _patient_data$Surgery === void 0 ? void 0 : _patient_data$Surgery.length) !== 0) {\n            setsurgeries(patient_data === null || patient_data === void 0 ? void 0 : patient_data.Surgery);\n          }\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n\n      if (surgeriesForm.surgery == \"\") {\n        errorTemp = { ...errorTemp,\n          surgery: true,\n          error: true\n        };\n      }\n\n      if (surgeriesForm.date == \"\") {\n        errorTemp = { ...errorTemp,\n          date: true,\n          error: true\n        };\n      }\n\n      setError({ ...errorTemp,\n        error: true\n      });\n    }\n  }, [surgeriesForm]);\n\n  const Continue = () => {\n    let errorTemp = errorInit;\n\n    if (surgeriesForm.surgery == \"\") {\n      errorTemp = { ...errorTemp,\n        surgery: true,\n        error: true\n      };\n    }\n\n    if (surgeriesForm.date == \"\") {\n      errorTemp = { ...errorTemp,\n        date: true,\n        error: true\n      };\n    }\n\n    setError(errorTemp);\n\n    if (!errorTemp.error || surgeries.length > 0 && errorTemp.surgery && errorTemp.date) {\n      setForm(false);\n      setsurgeries(surgeriesForm ? [surgeriesForm] : [...surgeries, surgeriesForm]);\n\n      if (surgeriesForm.surgery != \"\") {\n        dispatch(Store_formData({ ...appoinment_form,\n          surgeries: [...surgeries, surgeriesForm]\n        }));\n      } else {\n        dispatch(Store_formData({ ...appoinment_form,\n          surgeries: [...surgeries]\n        }));\n      }\n\n      progressIncrementer();\n    }\n  };\n\n  const yes_btn_Change = () => {\n    setFlag(\"Yes\");\n  };\n\n  const No_btn_Change = () => {\n    setFlag(\"No\");\n    progressIncrementer();\n  };\n\n  const AddMore = () => {\n    let errorTemp = errorInit;\n\n    if (showForm) {\n      if (surgeriesForm.surgery == \"\") {\n        errorTemp = { ...errorTemp,\n          surgery: true,\n          error: true\n        };\n      }\n\n      if (surgeriesForm.date == \"\") {\n        errorTemp = { ...errorTemp,\n          date: true,\n          error: true\n        };\n      }\n\n      setError(errorTemp);\n\n      if (!errorTemp.error) {\n        setsurgeries([...surgeries, surgeriesForm]);\n        setSurgeriesForm(surgeriesFormInit);\n      }\n    } else {\n      setForm(true);\n    }\n  };\n\n  const onsurgeryChange = e => {\n    let foundItem = surgeries.some(el => el.surgery === e);\n\n    if (foundItem) {\n      toast.error(`${e}  already added`, {\n        position: toast.POSITION.TOP_CENTER\n      });\n    } else {\n      setSurgeriesForm({ ...surgeriesForm,\n        surgery: e\n      });\n    }\n  };\n\n  const deleteSurgeries = (item, index) => {\n    setShowModal(true);\n    setDeleteItem(item);\n  };\n\n  const onCancel = item => {\n    let filter1 = surgeries.filter(obj => {\n      return obj.surgery != (item === null || item === void 0 ? void 0 : item.surgery);\n    });\n    dispatch(Store_formData({ ...appoinment_form,\n      surgeries: filter1\n    }));\n    setsurgeries(filter1);\n    setShowModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: Style.symptoms_main_heading,\n      children: \"Have you undergone any recent surgeries?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YesNoButton, {\n      yes_btn_Change: yes_btn_Change,\n      No_btn_Change: No_btn_Change,\n      flag: flag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), flag === \"Yes\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion, {\n        className: Style.medications_accordion_align,\n        children: surgeries === null || surgeries === void 0 ? void 0 : surgeries.map((sur, index) => {\n          return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: index,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.medication_accordion_repeat,\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: Style.medication_accordion_main_heading,\n                  children: sur.surgery\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Assets.symtomsClose,\n                alt: \"\",\n                onClick: () => deleteSurgeries(sur, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.add_medicine_medicine_details,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group  mb-spce\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: Style.add_medicine_label,\n                    children: \"Surgeries type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n                    error: false,\n                    DataItem: DataItem,\n                    onClick: e => {\n                      let newSur = [...surgeries];\n                      newSur[index].surgery = e;\n                      setsurgeries(newSur);\n                    },\n                    defaultPlaceH: sur.surgery != \"\",\n                    selectedData: sur.surgery != \"\" ? sur.surgery : \"Select Surgery\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group  mb-spce\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: Style.add_medicine_label,\n                    children: \"Period (When Did You Have It?)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n                    error: false,\n                    DataItem: surgeryDuration,\n                    onClick: e => {\n                      let newSur = [...surgeries];\n                      newSur[index].date = e;\n                      setsurgeries(newSur);\n                    },\n                    defaultPlaceH: sur.date != \"\",\n                    selectedData: sur.date != \"\" ? sur.date : \"Select Frequency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: Style.add_medicine_label,\n                    children: \"Optional Notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    name: \"medication\",\n                    className: `${Style.add_medicine_input_field}`,\n                    placeholder: \"Optional Notes\",\n                    value: sur.note,\n                    onChange: e => {\n                      let newSur = [...surgeries];\n                      newSur[index].note = e.target.value;\n                      setsurgeries(newSur);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.add_medicine_medicine_details,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-spce\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: Style.add_medicine_label,\n            children: [\"Surgeries \", surgeries.length + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n            error: error.surgery,\n            DataItem: DataItem,\n            onClick: e => {\n              onsurgeryChange(e);\n            },\n            defaultPlaceH: surgeriesForm.surgery != \"\",\n            selectedData: surgeriesForm.surgery != \"\" ? surgeriesForm.surgery : \"Select Surgery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), error.surgery && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.error,\n            children: \"Select a surgery from the list below that you would like your practitioner to know\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group  mb-spce\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: Style.add_medicine_label,\n            children: \"Period (When Did You Have It?)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n            error: error.surgery,\n            DataItem: surgeryDuration,\n            onClick: e => {\n              setSurgeriesForm({ ...surgeriesForm,\n                date: e\n              });\n            },\n            defaultPlaceH: surgeriesForm.date != \"\",\n            selectedData: surgeriesForm.date != \"\" ? surgeriesForm.date : \"Surgery Occurs in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), error.date && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.error,\n            children: \"It would be appropriate to let the practitioner know when you had this procedure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: Style.add_medicine_label,\n            children: \"Optional Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"medication\",\n            className: `${Style.add_medicine_input_field}`,\n            placeholder: \"Optional Notes\",\n            value: surgeriesForm.note,\n            onChange: e => {\n              setSurgeriesForm({ ...surgeriesForm,\n                note: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddMoreContinue, {\n        progressIncrementer: progressIncrementer,\n        Continue: Continue,\n        AddMore: AddMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Custommodal, {\n        showModal: showModal,\n        setShowModal: setShowModal,\n        onCancel: onCancel,\n        deleteItems: deleteItems,\n        modalItem: modalItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(Surgeries, \"qUkLHsnBFB5+ZWBtM3KGoWxPEUg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Surgeries;\nexport default Surgeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Surgeries\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V11/c2md-web_react/src/components/Surgeries/index.js"],"names":["React","useState","useEffect","Style","YesNoButton","CustomAccordion","AddMoreContinue","useSelector","useDispatch","Accordion","CustomDropDown","toast","Custommodal","Assets","Surgeries","progressIncrementer","appoinment_form","Store_formData","settingsdata","document","querySelector","scrollTo","showModal","setShowModal","modalItem","setItem","patient_data","state","bookAppoinment","deleteItems","setDeleteItem","showForm","setForm","DataItem","SurgeyDetails","surgerylist","surgeryDuration","Surgeryduration","dispatch","flag","setFlag","surgeries","length","surgeriesFormInit","surgery","date","note","surgeriesForm","setSurgeriesForm","setsurgeries","errorInit","error","setError","hasOwnProperty","Array","isArray","Surgery","errorTemp","Continue","yes_btn_Change","No_btn_Change","AddMore","onsurgeryChange","e","foundItem","some","el","position","POSITION","TOP_CENTER","deleteSurgeries","item","index","onCancel","filter1","filter","obj","symptoms_main_heading","medications_accordion_align","map","sur","medication_accordion_repeat","medication_accordion_main_heading","symtomsClose","add_medicine_medicine_details","add_medicine_label","newSur","add_medicine_input_field","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AACA,SAASC,SAAT,OAKG;AAAA;;AAAA;;AAAA,MALgB;AACjBC,IAAAA,mBADiB;AAEjBC,IAAAA,eAFiB;AAGjBC,IAAAA,cAHiB;AAIjBC,IAAAA;AAJiB,GAKhB;AACDhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,QAA/B,CAAwC,CAAxC,EAA2C,CAA3C;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACuB,SAAD,EAAYC,OAAZ,IAAuBxB,QAAQ,CACnC,+CADmC,CAArC;AAGA,QAAMyB,YAAY,GAAGnB,WAAW,CAC7BoB,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBF,YADF,CAAhC;AAGA,QAAM,CAACG,WAAD,EAAcC,aAAd,IAA+B7B,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC8B,QAAD,EAAWC,OAAX,IAAsB/B,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMgC,QAAQ,GACZf,YAAY,CAAC,CAAD,CAAZ,IAAmBA,YAAY,CAAC,CAAD,CAAZ,CAAgBgB,aAAhB,CAA8B,CAA9B,EAAiCC,WADtD;AAEA,QAAMC,eAAe,GACnBlB,YAAY,CAAC,CAAD,CAAZ,IAAmBA,YAAY,CAAC,CAAD,CAAZ,CAAgBgB,aAAhB,CAA8B,CAA9B,EAAiCG,eADtD;AAEA,QAAMC,QAAQ,GAAG9B,WAAW,EAA5B;AACA,QAAM,CAAC+B,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAC9B,CAAAe,eAAe,SAAf,IAAAA,eAAe,WAAf,qCAAAA,eAAe,CAAEyB,SAAjB,gFAA4BC,MAA5B,IAAqC,CAArC,GAAyC,KAAzC,GAAiD,EADnB,CAAhC;AAGA,QAAMC,iBAAiB,GAAG;AACxBC,IAAAA,OAAO,EAAE,EADe;AAExBC,IAAAA,IAAI,EAAE,EAFkB;AAGxBC,IAAAA,IAAI,EAAE;AAHkB,GAA1B;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC/C,QAAQ,CAAC0C,iBAAD,CAAlD;AACA,QAAM,CAACF,SAAD,EAAYQ,YAAZ,IAA4BhD,QAAQ,CACxCe,eAAe,CAACyB,SAAhB,GAA4BzB,eAAe,CAACyB,SAA5C,GAAwD,EADhB,CAA1C;AAGA,QAAMS,SAAS,GAAG;AAChBN,IAAAA,OAAO,EAAE,KADO;AAEhBC,IAAAA,IAAI,EAAE,KAFU;AAGhBC,IAAAA,IAAI,EAAE,KAHU;AAIhBK,IAAAA,KAAK,EAAE;AAJS,GAAlB;AAMA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBnD,QAAQ,CAACiD,SAAD,CAAlC;AACAhD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAAuC,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,MAAX,MAAsB,CAA1B,EAA6B;AAC3BV,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAI,2BAAAc,eAAe,CAACyB,SAAhB,kFAA2BC,MAA3B,KAAqC,CAAzC,EAA4C;AAC1C,UAAIhB,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAE2B,cAAd,CAA6B,SAA7B,CAAJ,EAA6C;AAC3C,YAAIC,KAAK,CAACC,OAAN,CAAc7B,YAAd,aAAcA,YAAd,uBAAcA,YAAY,CAAE8B,OAA5B,CAAJ,EAA0C;AAAA;;AACxC,cAAI,CAAA9B,YAAY,SAAZ,IAAAA,YAAY,WAAZ,qCAAAA,YAAY,CAAE8B,OAAd,gFAAuBd,MAAvB,MAAkC,CAAtC,EAAyC;AACvCO,YAAAA,YAAY,CAACvB,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAE8B,OAAf,CAAZ;AACD;AACF;AACF;AACF;AACF,GAVQ,EAUN,EAVM,CAAT;AAWAtD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiD,KAAK,CAACA,KAAV,EAAiB;AACf,UAAIM,SAAS,GAAGP,SAAhB;;AACA,UAAIH,aAAa,CAACH,OAAd,IAAyB,EAA7B,EAAiC;AAC/Ba,QAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBb,UAAAA,OAAO,EAAE,IAAzB;AAA+BO,UAAAA,KAAK,EAAE;AAAtC,SAAZ;AACD;;AACD,UAAIJ,aAAa,CAACF,IAAd,IAAsB,EAA1B,EAA8B;AAC5BY,QAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBZ,UAAAA,IAAI,EAAE,IAAtB;AAA4BM,UAAAA,KAAK,EAAE;AAAnC,SAAZ;AACD;;AAEDC,MAAAA,QAAQ,CAAC,EAAE,GAAGK,SAAL;AAAgBN,QAAAA,KAAK,EAAE;AAAvB,OAAD,CAAR;AACD;AACF,GAZQ,EAYN,CAACJ,aAAD,CAZM,CAAT;;AAcA,QAAMW,QAAQ,GAAG,MAAM;AACrB,QAAID,SAAS,GAAGP,SAAhB;;AACA,QAAIH,aAAa,CAACH,OAAd,IAAyB,EAA7B,EAAiC;AAC/Ba,MAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBb,QAAAA,OAAO,EAAE,IAAzB;AAA+BO,QAAAA,KAAK,EAAE;AAAtC,OAAZ;AACD;;AACD,QAAIJ,aAAa,CAACF,IAAd,IAAsB,EAA1B,EAA8B;AAC5BY,MAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBZ,QAAAA,IAAI,EAAE,IAAtB;AAA4BM,QAAAA,KAAK,EAAE;AAAnC,OAAZ;AACD;;AAEDC,IAAAA,QAAQ,CAACK,SAAD,CAAR;;AAEA,QACE,CAACA,SAAS,CAACN,KAAX,IACCV,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBe,SAAS,CAACb,OAAlC,IAA6Ca,SAAS,CAACZ,IAF1D,EAGE;AACAb,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAiB,MAAAA,YAAY,CACVF,aAAa,GAAG,CAACA,aAAD,CAAH,GAAqB,CAAC,GAAGN,SAAJ,EAAeM,aAAf,CADxB,CAAZ;;AAGA,UAAIA,aAAa,CAACH,OAAd,IAAyB,EAA7B,EAAiC;AAC/BN,QAAAA,QAAQ,CACNrB,cAAc,CAAC,EACb,GAAGD,eADU;AAEbyB,UAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ,EAAeM,aAAf;AAFE,SAAD,CADR,CAAR;AAMD,OAPD,MAOO;AACLT,QAAAA,QAAQ,CACNrB,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsByB,UAAAA,SAAS,EAAE,CAAC,GAAGA,SAAJ;AAAjC,SAAD,CADR,CAAR;AAGD;;AACD1B,MAAAA,mBAAmB;AACpB;AACF,GAjCD;;AAmCA,QAAM4C,cAAc,GAAG,MAAM;AAC3BnB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMoB,aAAa,GAAG,MAAM;AAC1BpB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAzB,IAAAA,mBAAmB;AACpB,GAHD;;AAKA,QAAM8C,OAAO,GAAG,MAAM;AACpB,QAAIJ,SAAS,GAAGP,SAAhB;;AACA,QAAInB,QAAJ,EAAc;AACZ,UAAIgB,aAAa,CAACH,OAAd,IAAyB,EAA7B,EAAiC;AAC/Ba,QAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBb,UAAAA,OAAO,EAAE,IAAzB;AAA+BO,UAAAA,KAAK,EAAE;AAAtC,SAAZ;AACD;;AACD,UAAIJ,aAAa,CAACF,IAAd,IAAsB,EAA1B,EAA8B;AAC5BY,QAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBZ,UAAAA,IAAI,EAAE,IAAtB;AAA4BM,UAAAA,KAAK,EAAE;AAAnC,SAAZ;AACD;;AAEDC,MAAAA,QAAQ,CAACK,SAAD,CAAR;;AAEA,UAAI,CAACA,SAAS,CAACN,KAAf,EAAsB;AACpBF,QAAAA,YAAY,CAAC,CAAC,GAAGR,SAAJ,EAAeM,aAAf,CAAD,CAAZ;AACAC,QAAAA,gBAAgB,CAACL,iBAAD,CAAhB;AACD;AACF,KAdD,MAcO;AACLX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAnBD;;AAoBA,QAAM8B,eAAe,GAAIC,CAAD,IAAO;AAC7B,QAAIC,SAAS,GAAGvB,SAAS,CAACwB,IAAV,CAAgBC,EAAD,IAAQA,EAAE,CAACtB,OAAH,KAAemB,CAAtC,CAAhB;;AAEA,QAAIC,SAAJ,EAAe;AACbrD,MAAAA,KAAK,CAACwC,KAAN,CAAa,GAAEY,CAAE,iBAAjB,EAAmC;AACjCI,QAAAA,QAAQ,EAAExD,KAAK,CAACyD,QAAN,CAAeC;AADQ,OAAnC;AAGD,KAJD,MAIO;AACLrB,MAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBH,QAAAA,OAAO,EAAEmB;AAA7B,OAAD,CAAhB;AACD;AACF,GAVD;;AAWA,QAAMO,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvCjD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAO,IAAAA,aAAa,CAACyC,IAAD,CAAb;AACD,GAHD;;AAIA,QAAME,QAAQ,GAAIF,IAAD,IAAU;AACzB,QAAIG,OAAO,GAAGjC,SAAS,CAACkC,MAAV,CAAkBC,GAAD,IAAS;AACtC,aAAOA,GAAG,CAAChC,OAAJ,KAAe2B,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAE3B,OAArB,CAAP;AACD,KAFa,CAAd;AAGAN,IAAAA,QAAQ,CAACrB,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsByB,MAAAA,SAAS,EAAEiC;AAAjC,KAAD,CAAf,CAAR;AACAzB,IAAAA,YAAY,CAACyB,OAAD,CAAZ;AACAnD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAPD;;AAQA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEpB,KAAK,CAAC0E,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AACE,MAAA,cAAc,EAAElB,cADlB;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,IAAI,EAAErB;AAHR;AAAA;AAAA;AAAA;AAAA,YAJF,EASGA,IAAI,KAAK,KAAT,iBACC;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEpC,KAAK,CAAC2E,2BAA5B;AAAA,kBACGrC,SADH,aACGA,SADH,uBACGA,SAAS,CAAEsC,GAAX,CAAe,CAACC,GAAD,EAAMR,KAAN,KAAgB;AAC9B,8BACE,QAAC,SAAD,CAAW,IAAX;AAA4B,YAAA,QAAQ,EAAEA,KAAtC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAErE,KAAK,CAAC8E,2BAAtB;AAAA,sCACE,QAAC,SAAD,CAAW,MAAX;AAAA,uCACE;AAAM,kBAAA,SAAS,EAAE9E,KAAK,CAAC+E,iCAAvB;AAAA,4BACGF,GAAG,CAACpC;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AACE,gBAAA,GAAG,EAAE/B,MAAM,CAACsE,YADd;AAEE,gBAAA,GAAG,EAAC,EAFN;AAGE,gBAAA,OAAO,EAAE,MAAMb,eAAe,CAACU,GAAD,EAAMR,KAAN;AAHhC;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,QAAC,SAAD,CAAW,IAAX;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAErE,KAAK,CAACiF,6BAAtB;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,qBAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAEjF,KAAK,CAACkF,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,cAAD;AACE,oBAAA,KAAK,EAAE,KADT;AAEE,oBAAA,QAAQ,EAAEpD,QAFZ;AAGE,oBAAA,OAAO,EAAG8B,CAAD,IAAO;AACd,0BAAIuB,MAAM,GAAG,CAAC,GAAG7C,SAAJ,CAAb;AACA6C,sBAAAA,MAAM,CAACd,KAAD,CAAN,CAAc5B,OAAd,GAAwBmB,CAAxB;AACAd,sBAAAA,YAAY,CAACqC,MAAD,CAAZ;AACD,qBAPH;AAQE,oBAAA,aAAa,EAAEN,GAAG,CAACpC,OAAJ,IAAe,EARhC;AASE,oBAAA,YAAY,EACVoC,GAAG,CAACpC,OAAJ,IAAe,EAAf,GAAoBoC,GAAG,CAACpC,OAAxB,GAAkC;AAVtC;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAmBE;AAAK,kBAAA,SAAS,EAAC,qBAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAEzC,KAAK,CAACkF,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,cAAD;AACE,oBAAA,KAAK,EAAE,KADT;AAEE,oBAAA,QAAQ,EAAEjD,eAFZ;AAGE,oBAAA,OAAO,EAAG2B,CAAD,IAAO;AACd,0BAAIuB,MAAM,GAAG,CAAC,GAAG7C,SAAJ,CAAb;AACA6C,sBAAAA,MAAM,CAACd,KAAD,CAAN,CAAc3B,IAAd,GAAqBkB,CAArB;AACAd,sBAAAA,YAAY,CAACqC,MAAD,CAAZ;AACD,qBAPH;AAQE,oBAAA,aAAa,EAAEN,GAAG,CAACnC,IAAJ,IAAY,EAR7B;AASE,oBAAA,YAAY,EACVmC,GAAG,CAACnC,IAAJ,IAAY,EAAZ,GAAiBmC,GAAG,CAACnC,IAArB,GAA4B;AAVhC;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF,eAqCE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAE1C,KAAK,CAACkF,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,IAAI,EAAC,YADP;AAEE,oBAAA,SAAS,EAAG,GAAElF,KAAK,CAACoF,wBAAyB,EAF/C;AAGE,oBAAA,WAAW,EAAC,gBAHd;AAIE,oBAAA,KAAK,EAAEP,GAAG,CAAClC,IAJb;AAKE,oBAAA,QAAQ,EAAGiB,CAAD,IAAO;AACf,0BAAIuB,MAAM,GAAG,CAAC,GAAG7C,SAAJ,CAAb;AACA6C,sBAAAA,MAAM,CAACd,KAAD,CAAN,CAAc1B,IAAd,GAAqBiB,CAAC,CAACyB,MAAF,CAASC,KAA9B;AACAxC,sBAAAA,YAAY,CAACqC,MAAD,CAAZ;AACD;AATH;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA,aAAqBd,KAArB;AAAA;AAAA;AAAA;AAAA,kBADF;AAwED,SAzEA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EA6EGzC,QAAQ,iBACP;AAAK,QAAA,SAAS,EAAE5B,KAAK,CAACiF,6BAAtB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAEjF,KAAK,CAACkF,kBAAxB;AAAA,qCACa5C,SAAS,CAACC,MAAV,GAAmB,CADhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,cAAD;AACE,YAAA,KAAK,EAAES,KAAK,CAACP,OADf;AAEE,YAAA,QAAQ,EAAEX,QAFZ;AAGE,YAAA,OAAO,EAAG8B,CAAD,IAAO;AACdD,cAAAA,eAAe,CAACC,CAAD,CAAf;AACD,aALH;AAME,YAAA,aAAa,EAAEhB,aAAa,CAACH,OAAd,IAAyB,EAN1C;AAOE,YAAA,YAAY,EACVG,aAAa,CAACH,OAAd,IAAyB,EAAzB,GACIG,aAAa,CAACH,OADlB,GAEI;AAVR;AAAA;AAAA;AAAA;AAAA,kBAJF,EAiBGO,KAAK,CAACP,OAAN,iBACC;AAAG,YAAA,SAAS,EAAEzC,KAAK,CAACgD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyBE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAEhD,KAAK,CAACkF,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,cAAD;AACE,YAAA,KAAK,EAAElC,KAAK,CAACP,OADf;AAEE,YAAA,QAAQ,EAAER,eAFZ;AAGE,YAAA,OAAO,EAAG2B,CAAD,IAAO;AACdf,cAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBF,gBAAAA,IAAI,EAAEkB;AAA1B,eAAD,CAAhB;AACD,aALH;AAME,YAAA,aAAa,EAAEhB,aAAa,CAACF,IAAd,IAAsB,EANvC;AAOE,YAAA,YAAY,EACVE,aAAa,CAACF,IAAd,IAAsB,EAAtB,GACIE,aAAa,CAACF,IADlB,GAEI;AAVR;AAAA;AAAA;AAAA;AAAA,kBAJF,EAiBGM,KAAK,CAACN,IAAN,iBACC;AAAG,YAAA,SAAS,EAAE1C,KAAK,CAACgD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eAiDE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAEhD,KAAK,CAACkF,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,IAAI,EAAC,YADP;AAEE,YAAA,SAAS,EAAG,GAAElF,KAAK,CAACoF,wBAAyB,EAF/C;AAGE,YAAA,WAAW,EAAC,gBAHd;AAIE,YAAA,KAAK,EAAExC,aAAa,CAACD,IAJvB;AAKE,YAAA,QAAQ,EAAGiB,CAAD,IAAO;AACff,cAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfD,gBAAAA,IAAI,EAAEiB,CAAC,CAACyB,MAAF,CAASC;AAFA,eAAD,CAAhB;AAID;AAVH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9EJ,eAkJE,QAAC,eAAD;AACE,QAAA,mBAAmB,EAAE1E,mBADvB;AAEE,QAAA,QAAQ,EAAE2C,QAFZ;AAGE,QAAA,OAAO,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA,cAlJF,eAuJE,QAAC,WAAD;AACE,QAAA,SAAS,EAAEvC,SADb;AAEE,QAAA,YAAY,EAAEC,YAFhB;AAGE,QAAA,QAAQ,EAAEkD,QAHZ;AAIE,QAAA,WAAW,EAAE5C,WAJf;AAKE,QAAA,SAAS,EAAEL;AALb;AAAA;AAAA;AAAA;AAAA,cAvJF;AAAA,oBAVJ;AAAA,kBADF;AA6KD;;GA5UQV,S;UAacP,W,EASJC,W;;;KAtBVM,S;AA8UT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Style from \"./Surgeries.module.scss\";\nimport YesNoButton from \"../YesNoButton\";\nimport CustomAccordion from \"../CustomAccordion\";\nimport AddMoreContinue from \"../AddContinueButtons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Accordion } from \"react-bootstrap\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport { toast } from \"react-toastify\";\nimport Custommodal from \"../Layout/Custommodal\";\nimport Assets from \"../Layout/Assets\";\nfunction Surgeries({\n  progressIncrementer,\n  appoinment_form,\n  Store_formData,\n  settingsdata,\n}) {\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const [showModal, setShowModal] = useState(false);\n  const [modalItem, setItem] = useState(\n    \"Do you really want to delete this surgeries ?\"\n  );\n  const patient_data = useSelector(\n    (state) => state.bookAppoinment.patient_data\n  );\n  const [deleteItems, setDeleteItem] = useState(\"\");\n  const [showForm, setForm] = useState(true);\n  const DataItem =\n    settingsdata[0] && settingsdata[0].SurgeyDetails[0].surgerylist;\n  const surgeryDuration =\n    settingsdata[0] && settingsdata[0].SurgeyDetails[1].Surgeryduration;\n  const dispatch = useDispatch();\n  const [flag, setFlag] = useState(\n    appoinment_form?.surgeries?.length > 0 ? \"Yes\" : \"\"\n  );\n  const surgeriesFormInit = {\n    surgery: \"\",\n    date: \"\",\n    note: \"\",\n  };\n  const [surgeriesForm, setSurgeriesForm] = useState(surgeriesFormInit);\n  const [surgeries, setsurgeries] = useState(\n    appoinment_form.surgeries ? appoinment_form.surgeries : []\n  );\n  const errorInit = {\n    surgery: false,\n    date: false,\n    note: false,\n    error: false,\n  };\n  const [error, setError] = useState(errorInit);\n  useEffect(() => {\n    if (surgeries?.length !== 0) {\n      setForm(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (appoinment_form.surgeries?.length == 0) {\n      if (patient_data?.hasOwnProperty(\"Surgery\")) {\n        if (Array.isArray(patient_data?.Surgery)) {\n          if (patient_data?.Surgery?.length !== 0) {\n            setsurgeries(patient_data?.Surgery);\n          }\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n      if (surgeriesForm.surgery == \"\") {\n        errorTemp = { ...errorTemp, surgery: true, error: true };\n      }\n      if (surgeriesForm.date == \"\") {\n        errorTemp = { ...errorTemp, date: true, error: true };\n      }\n\n      setError({ ...errorTemp, error: true });\n    }\n  }, [surgeriesForm]);\n\n  const Continue = () => {\n    let errorTemp = errorInit;\n    if (surgeriesForm.surgery == \"\") {\n      errorTemp = { ...errorTemp, surgery: true, error: true };\n    }\n    if (surgeriesForm.date == \"\") {\n      errorTemp = { ...errorTemp, date: true, error: true };\n    }\n\n    setError(errorTemp);\n\n    if (\n      !errorTemp.error ||\n      (surgeries.length > 0 && errorTemp.surgery && errorTemp.date)\n    ) {\n      setForm(false);\n      setsurgeries(\n        surgeriesForm ? [surgeriesForm] : [...surgeries, surgeriesForm]\n      );\n      if (surgeriesForm.surgery != \"\") {\n        dispatch(\n          Store_formData({\n            ...appoinment_form,\n            surgeries: [...surgeries, surgeriesForm],\n          })\n        );\n      } else {\n        dispatch(\n          Store_formData({ ...appoinment_form, surgeries: [...surgeries] })\n        );\n      }\n      progressIncrementer();\n    }\n  };\n\n  const yes_btn_Change = () => {\n    setFlag(\"Yes\");\n  };\n\n  const No_btn_Change = () => {\n    setFlag(\"No\");\n    progressIncrementer();\n  };\n\n  const AddMore = () => {\n    let errorTemp = errorInit;\n    if (showForm) {\n      if (surgeriesForm.surgery == \"\") {\n        errorTemp = { ...errorTemp, surgery: true, error: true };\n      }\n      if (surgeriesForm.date == \"\") {\n        errorTemp = { ...errorTemp, date: true, error: true };\n      }\n\n      setError(errorTemp);\n\n      if (!errorTemp.error) {\n        setsurgeries([...surgeries, surgeriesForm]);\n        setSurgeriesForm(surgeriesFormInit);\n      }\n    } else {\n      setForm(true);\n    }\n  };\n  const onsurgeryChange = (e) => {\n    let foundItem = surgeries.some((el) => el.surgery === e);\n\n    if (foundItem) {\n      toast.error(`${e}  already added`, {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    } else {\n      setSurgeriesForm({ ...surgeriesForm, surgery: e });\n    }\n  };\n  const deleteSurgeries = (item, index) => {\n    setShowModal(true);\n    setDeleteItem(item);\n  };\n  const onCancel = (item) => {\n    let filter1 = surgeries.filter((obj) => {\n      return obj.surgery != item?.surgery;\n    });\n    dispatch(Store_formData({ ...appoinment_form, surgeries: filter1 }));\n    setsurgeries(filter1);\n    setShowModal(false);\n  };\n  return (\n    <>\n      <h3 className={Style.symptoms_main_heading}>\n        Have you undergone any recent surgeries?\n      </h3>\n      <YesNoButton\n        yes_btn_Change={yes_btn_Change}\n        No_btn_Change={No_btn_Change}\n        flag={flag}\n      />\n      {flag === \"Yes\" && (\n        <>\n          <Accordion className={Style.medications_accordion_align}>\n            {surgeries?.map((sur, index) => {\n              return (\n                <Accordion.Item key={index} eventKey={index}>\n                  <div className={Style.medication_accordion_repeat}>\n                    <Accordion.Header>\n                      <span className={Style.medication_accordion_main_heading}>\n                        {sur.surgery}\n                      </span>\n                    </Accordion.Header>\n                    <img\n                      src={Assets.symtomsClose}\n                      alt=\"\"\n                      onClick={() => deleteSurgeries(sur, index)}\n                    />\n                  </div>\n                  <Accordion.Body>\n                    <div className={Style.add_medicine_medicine_details}>\n                      <div className=\"form-group  mb-spce\">\n                        <label className={Style.add_medicine_label}>\n                          Surgeries type\n                        </label>\n                        <CustomDropDown\n                          error={false}\n                          DataItem={DataItem}\n                          onClick={(e) => {\n                            let newSur = [...surgeries];\n                            newSur[index].surgery = e;\n                            setsurgeries(newSur);\n                          }}\n                          defaultPlaceH={sur.surgery != \"\"}\n                          selectedData={\n                            sur.surgery != \"\" ? sur.surgery : \"Select Surgery\"\n                          }\n                        />\n                      </div>\n                      <div className=\"form-group  mb-spce\">\n                        <label className={Style.add_medicine_label}>\n                          Period (When Did You Have It?)\n                        </label>\n                        <CustomDropDown\n                          error={false}\n                          DataItem={surgeryDuration}\n                          onClick={(e) => {\n                            let newSur = [...surgeries];\n                            newSur[index].date = e;\n                            setsurgeries(newSur);\n                          }}\n                          defaultPlaceH={sur.date != \"\"}\n                          selectedData={\n                            sur.date != \"\" ? sur.date : \"Select Frequency\"\n                          }\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label className={Style.add_medicine_label}>\n                          Optional Notes\n                        </label>\n                        <textarea\n                          name=\"medication\"\n                          className={`${Style.add_medicine_input_field}`}\n                          placeholder=\"Optional Notes\"\n                          value={sur.note}\n                          onChange={(e) => {\n                            let newSur = [...surgeries];\n                            newSur[index].note = e.target.value;\n                            setsurgeries(newSur);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </Accordion.Body>\n                </Accordion.Item>\n              );\n            })}\n          </Accordion>\n          {showForm && (\n            <div className={Style.add_medicine_medicine_details}>\n              <div className=\"form-group mb-spce\">\n                <label className={Style.add_medicine_label}>\n                  Surgeries {surgeries.length + 1}\n                </label>\n                <CustomDropDown\n                  error={error.surgery}\n                  DataItem={DataItem}\n                  onClick={(e) => {\n                    onsurgeryChange(e);\n                  }}\n                  defaultPlaceH={surgeriesForm.surgery != \"\"}\n                  selectedData={\n                    surgeriesForm.surgery != \"\"\n                      ? surgeriesForm.surgery\n                      : \"Select Surgery\"\n                  }\n                />\n                {error.surgery && (\n                  <p className={Style.error}>\n                    Select a surgery from the list below that you would like\n                    your practitioner to know\n                  </p>\n                )}\n              </div>\n              <div className=\"form-group  mb-spce\">\n                <label className={Style.add_medicine_label}>\n                  Period (When Did You Have It?)\n                </label>\n                <CustomDropDown\n                  error={error.surgery}\n                  DataItem={surgeryDuration}\n                  onClick={(e) => {\n                    setSurgeriesForm({ ...surgeriesForm, date: e });\n                  }}\n                  defaultPlaceH={surgeriesForm.date != \"\"}\n                  selectedData={\n                    surgeriesForm.date != \"\"\n                      ? surgeriesForm.date\n                      : \"Surgery Occurs in\"\n                  }\n                />\n                {error.date && (\n                  <p className={Style.error}>\n                    It would be appropriate to let the practitioner know when\n                    you had this procedure\n                  </p>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label className={Style.add_medicine_label}>\n                  Optional Notes\n                </label>\n                <textarea\n                  name=\"medication\"\n                  className={`${Style.add_medicine_input_field}`}\n                  placeholder=\"Optional Notes\"\n                  value={surgeriesForm.note}\n                  onChange={(e) => {\n                    setSurgeriesForm({\n                      ...surgeriesForm,\n                      note: e.target.value,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          )}\n          <AddMoreContinue\n            progressIncrementer={progressIncrementer}\n            Continue={Continue}\n            AddMore={AddMore}\n          />\n          <Custommodal\n            showModal={showModal}\n            setShowModal={setShowModal}\n            onCancel={onCancel}\n            deleteItems={deleteItems}\n            modalItem={modalItem}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Surgeries;\n"]},"metadata":{},"sourceType":"module"}