{"ast":null,"code":"import loginedApi from \"../apis/index\";\nimport { DOCTOR_LISTING } from \"./type\";\n\nconst publicIp = require(\"public-ip\");\n\nlet IP = publicIp.v4();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nexport const fetch_doctors = (speciality, clinicId, pagination) => async dispatch => {\n  console.log(\"Fetching Doctors..........................\", speciality);\n  let params = {\n    data: {\n      clinicId: clinicId,\n      Ipaddress: IP,\n      useragent: userAgent,\n      todayRate: \"74.27006\",\n      currency: \"INR\",\n      searchName: \"\",\n      browserTimeZone: \"GMT%2B05:30\",\n      Os: platform,\n      City: \"\",\n      accessCountry: \"IN\",\n      speciality: speciality\n    },\n    requestType: \"604\",\n    token: \"C2MDVerificationToken\"\n  };\n  let dummyParams = {\n    \"requestType\": \"259\",\n    \"token\": \"C2MDVerificationToken\",\n    \"data\": {\n      \"browserTimeZone\": \"GMT%2B05:30\",\n      \"currency\": \"INR\",\n      \"accessCountry\": \"IN\",\n      \"todayRate\": \"\",\n      \"clinicId\": \"babymemorial\",\n      \"searchName\": \"\",\n      \"City\": \"\",\n      \"count\": pagination\n    }\n  };\n\n  if (clinicId != \"\") {\n    params.data.clinicId = clinicId;\n  }\n\n  let res = null;\n\n  if (speciality) {\n    res = await loginedApi.post(\"searchDoctor\", params);\n  } else {\n    res = await loginedApi.post(\"getdoctors\", dummyParams);\n  } // const res = await loginedApi.post(\"searchDoctor\", params);\n  //  const res = await loginedApi.post(\"getdoctors\", dummyParams);\n\n\n  if (res.status === 200) {\n    const doctors = res.data.data;\n    let location = [{\n      value: \"All\",\n      checked: false\n    }];\n    let hospitals = [{\n      value: \"All\",\n      checked: false\n    }];\n    let languagesSet = [{\n      value: \"All\",\n      checked: false\n    }, {\n      value: \"English\",\n      checked: false\n    }, {\n      value: \"Hindi\",\n      checked: false\n    }, {\n      value: \"Tamil\",\n      checked: false\n    }];\n    doctors.Hospitals.map(item => {\n      item && hospitals.push({\n        value: item,\n        checked: false\n      });\n    });\n    doctors.citiesSet.map(item => {\n      item && location.push({\n        value: item,\n        checked: false\n      });\n    });\n    doctors.languagesSet.map(item => {\n      item && location.push({\n        value: item,\n        checked: false\n      });\n    });\n    dispatch({\n      type: DOCTOR_LISTING,\n      payload: {\n        speciality,\n        doctors: doctors,\n        location: location,\n        hospitals: hospitals,\n        languagesSet: languagesSet,\n        indexCharacters: doctors === null || doctors === void 0 ? void 0 : doctors.indexCharacters\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V4/c2md-web_react/src/actions/DoctorListingAction.js"],"names":["loginedApi","DOCTOR_LISTING","publicIp","require","IP","v4","platform","window","navigator","userAgent","fetch_doctors","speciality","clinicId","pagination","dispatch","console","log","params","data","Ipaddress","useragent","todayRate","currency","searchName","browserTimeZone","Os","City","accessCountry","requestType","token","dummyParams","res","post","status","doctors","location","value","checked","hospitals","languagesSet","Hospitals","map","item","push","citiesSet","type","payload","indexCharacters"],"mappings":"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","sourcesContent":["import loginedApi from \"../apis/index\";\nimport { DOCTOR_LISTING } from \"./type\";\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\n\nexport const fetch_doctors = (speciality, clinicId, pagination) => async (dispatch) => {\n\n  console.log(\"Fetching Doctors..........................\",speciality);\n\n  let params = {\n    data: {\n      clinicId: clinicId,\n      Ipaddress: IP,\n      useragent: userAgent,\n      todayRate: \"74.27006\",\n      currency: \"INR\",\n      searchName: \"\",\n      browserTimeZone: \"GMT%2B05:30\",\n      Os: platform,\n      City: \"\",\n      accessCountry: \"IN\",\n      speciality: speciality,\n    },\n    requestType: \"604\",\n    token: \"C2MDVerificationToken\",\n  };\n\n\n  let dummyParams={\n    \"requestType\": \"259\",\n    \"token\": \"C2MDVerificationToken\",\n    \"data\": {\n        \"browserTimeZone\": \"GMT%2B05:30\",\n        \"currency\": \"INR\",\n        \"accessCountry\": \"IN\",\n        \"todayRate\": \"\",\n        \"clinicId\": \"babymemorial\",\n        \"searchName\": \"\",\n        \"City\": \"\",\n        \"count\":pagination\n    }\n}\n\n  if (clinicId != \"\") {\n    params.data.clinicId = clinicId;\n  }\n\n  let res=null\n\n  if(speciality)\n  {\n    res = await loginedApi.post(\"searchDoctor\", params);\n  }\n  else{\n    res = await loginedApi.post(\"getdoctors\", dummyParams);\n  }\n\n  // const res = await loginedApi.post(\"searchDoctor\", params);\n  \n  //  const res = await loginedApi.post(\"getdoctors\", dummyParams);\n\n  if (res.status === 200) {\n    const doctors = res.data.data;\n\n    let location = [{ value: \"All\", checked: false }];\n    let hospitals = [{ value: \"All\", checked: false }];\n    let languagesSet = [\n      { value: \"All\", checked: false },\n      { value: \"English\", checked: false },\n      { value: \"Hindi\", checked: false },\n      { value: \"Tamil\", checked: false },\n    ];\n\n    doctors.Hospitals.map((item) => {\n      item && hospitals.push({ value: item, checked: false });\n    });\n    doctors.citiesSet.map((item) => {\n      item && location.push({ value: item, checked: false });\n    });\n    doctors.languagesSet.map((item) => {\n      item && location.push({ value: item, checked: false });\n    });\n\n    dispatch({\n      type: DOCTOR_LISTING,\n      payload: {\n        speciality,\n        doctors: doctors,\n        location: location,\n        hospitals: hospitals,\n        languagesSet: languagesSet,\n        indexCharacters: doctors?.indexCharacters,\n      },\n    });\n\n\n  }\n};\n"]},"metadata":{},"sourceType":"module"}