{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V6/c2md-web_react/src/components/DoctorListingFilters/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Style from \"./DoctorListingFilters.module.scss\";\nimport Assets from \"../Layout/Assets\";\nimport classNames from \"classnames\";\nimport { useSelector } from \"react-redux\";\nimport { CharacterSet } from \"../Constants/characterSet\";\nimport { object } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DoctorListingFilters({\n  filterForm,\n  setFilter,\n  setFilterkey,\n  filterKey,\n  ResetFilter,\n  clientDetails\n}) {\n  _s();\n\n  var _filterForm$hospital;\n\n  const locationData = useSelector(state => state.doctorListing.location);\n  const languageData = useSelector(state => state.doctorListing.languagesSet);\n  const hospitalData = useSelector(state => state.doctorListing.hospitals);\n  const indexCharacters = useSelector(state => state.doctorListing.indexCharacters);\n  const [showSelect, setSelect] = useState({\n    byname: false,\n    byGender: false,\n    hospital: false,\n    location: false,\n    language: false\n  });\n  document.addEventListener(\"click\", function (event) {\n    var ignoreClickOnMeElement = document.getElementById(\"filterList\");\n\n    if (ignoreClickOnMeElement != null) {\n      var isClickInsideElement = ignoreClickOnMeElement.contains(event.target);\n\n      if (!isClickInsideElement && (showSelect.byname || showSelect.byGender || showSelect.hospital || showSelect.location || showSelect.language)) {\n        //Do something click is outside specified element\n        setSelect({\n          byname: false,\n          byGender: false,\n          hospital: false,\n          location: false,\n          language: false\n        });\n      }\n    }\n  });\n  const colDetailsDiv = classNames(Style.doctor_listing_details_div);\n  const dropdownClassGender = classNames(Style.doctor_listing_byname, Style.doctor_listing_gender);\n  const dropdownClassHospital = classNames(Style.doctor_listing_byname, Style.doctor_listing_hospital);\n  const dropdownClassLocation = classNames(Style.doctor_listing_byname, Style.doctor_listing_location);\n  const dropdownClassLanguage = classNames(Style.doctor_listing_byname, Style.doctor_listing_language);\n  const [submenu, setSubmenu] = useState({\n    byname: false,\n    byGender: false,\n    hospital: false,\n    location: false,\n    language: false\n  });\n\n  const handlechange = (item, position, e) => {\n    if (item.value === \"All\") {\n      locationData.map(data => {\n        data.checked = e.target.checked;\n      });\n      filterKey === null || filterKey === void 0 ? true : delete filterKey.city;\n\n      if (e.target.checked) {\n        setFilter({ ...filterForm,\n          location: [\"All\"]\n        });\n      } else {\n        setFilter({ ...filterForm,\n          location: []\n        });\n      }\n    } else {\n      locationData.map(data => {\n        if (data.value == item.value) {\n          data.checked = e.target.checked;\n        }\n\n        if (data.value == \"All\") {\n          data.checked = false;\n        }\n      });\n      let selectedItem = [];\n      locationData.map(obj => {\n        if (obj.checked == true && object.value !== \"All\") {\n          return selectedItem.push(obj.value.toLowerCase());\n        }\n      });\n      setFilter({ ...filterForm,\n        location: selectedItem\n      });\n\n      if (selectedItem.includes(\"all\") || selectedItem.length == 0) {\n        delete filterKey.city;\n      } else {\n        setFilterkey({ ...filterKey,\n          city: selectedItem\n        });\n      }\n    }\n\n    setSelect({\n      location: !showSelect.location\n    });\n  };\n\n  const hospitalchange = (item, e) => {\n    if (item.value === \"All\") {\n      hospitalData.map(data => {\n        data.checked = e.target.checked;\n      });\n      filterKey === null || filterKey === void 0 ? true : delete filterKey.hospitalname;\n\n      if (e.target.checked) {\n        setFilter({ ...filterForm,\n          hospital: [\"All\"]\n        });\n      } else {\n        setFilter({ ...filterForm,\n          hospital: []\n        });\n      }\n    } else {\n      hospitalData.map(data => {\n        if (data.value == item.value) {\n          data.checked = e.target.checked;\n        }\n\n        if (data.value == \"All\") {\n          data.checked = false;\n        }\n      });\n      let selectedItem = [];\n      hospitalData.map(obj => {\n        if (obj.checked == true && object.value !== \"All\") {\n          return selectedItem.push(obj.value.toLowerCase());\n        }\n      });\n      setFilter({ ...filterForm,\n        hospital: selectedItem\n      });\n\n      if (selectedItem.includes(\"all\") || selectedItem.length == 0) {\n        delete filterKey.hospitalname;\n      } else {\n        setFilterkey({ ...filterKey,\n          hospitalname: selectedItem\n        });\n      }\n    }\n\n    setSelect({\n      hospital: !showSelect.hospital\n    });\n  };\n\n  const languagechange = (item, e) => {\n    if (item.value === \"All\") {\n      languageData.map(data => {\n        data.checked = e.target.checked;\n      });\n      filterKey === null || filterKey === void 0 ? true : delete filterKey.languages;\n\n      if (e.target.checked) {\n        setFilter({ ...filterForm,\n          language: [\"All\"]\n        });\n      } else {\n        setFilter({ ...filterForm,\n          language: []\n        });\n      }\n    } else {\n      languageData.map(data => {\n        if (data.value == item.value) {\n          data.checked = e.target.checked;\n        }\n\n        if (data.value == \"All\") {\n          data.checked = false;\n        }\n      });\n      let selectedItem = [];\n      languageData.map(obj => {\n        if (obj.checked == true && object.value !== \"All\") {\n          return selectedItem.push(obj.value);\n        }\n      });\n      setFilter({ ...filterForm,\n        language: selectedItem\n      });\n\n      if (selectedItem.includes(\"all\") || selectedItem.length == 0) {\n        delete filterKey.languages;\n      } else {\n        setFilterkey({ ...filterKey,\n          languages: selectedItem\n        });\n      }\n    }\n\n    setSelect({\n      language: !showSelect.language\n    });\n  };\n\n  const change_gender = e => {\n    setFilter({ ...filterForm,\n      gender: e.target.value\n    });\n    setFilterkey({ ...filterKey,\n      gender: e.target.value\n    });\n    setSelect({\n      byGender: !showSelect.byGender\n    });\n  };\n\n  const Change_name = e => {\n    setFilter({ ...filterForm,\n      doctorName: e.target.value\n    });\n    setFilterkey({ ...filterKey,\n      doctorName: e.target.value\n    });\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      setSelect({\n        byname: !showSelect.byname\n      });\n    }\n  }; // const ResetFilter = () => {\n  //   setFilter({\n  //     location: [],\n  //     hospital: [],\n  //     language: [],\n  //     gender: \"Gender\",\n  //     doctorName: \"\",\n  //   });\n  //   setFilterkey(null);\n  //   hospitalData.map((data) => {\n  //     data.checked = false;\n  //   });\n  //   locationData.map((data) => {\n  //     data.checked = false;\n  //   });\n  //   languageData.map((data) => {\n  //     data.checked = false;\n  //   });\n  // };\n\n\n  const handleStarts = name => {\n    setFilter({ ...filterForm,\n      doctorName: name\n    });\n    setFilterkey({ ...filterKey,\n      doctorName: name\n    });\n  };\n\n  const getSample = (item, index) => {\n    if (indexCharacters.includes(item)) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: filterKey.doctorName == item ? Style.selecetdIndex : \"not-selected\",\n        onClick: () => handleStarts(item),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: Style.ActiveIndex,\n        style: {\n          color: \"#D1D1D1\",\n          cursor: \"not-allowed\"\n        },\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: colDetailsDiv,\n    id: \"filterList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.doctor_listing_byname,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: Style.filterNamelabelBox,\n        onClick: () => setSelect({\n          byname: !showSelect.byname\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: Style.filterNamelabel,\n          children: [\"By Name\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.down_arrow,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), showSelect.byname && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.doctor_listing_byname_content,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autocomplete: \"off\",\n          id: \"search\",\n          placeholder: \"Search by Name\",\n          className: Style.doctor_listing_search_by_name,\n          value: filterKey === null || filterKey === void 0 ? void 0 : filterKey.doctorName,\n          onChange: Change_name,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: CharacterSet && CharacterSet.map((item, index) => {\n            if (indexCharacters.includes(item)) {\n              {\n                console.log(filterKey.doctorName == item ? true : null);\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: filterKey.doctorName == item ? Style.selecetdIndex : \"not-selected\",\n                onClick: () => handleStarts(item),\n                children: [item, filterKey.doctorName == item ? \"y\" : \"n\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 25\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: Style.ActiveIndex,\n                style: {\n                  color: \"#D1D1D1\",\n                  cursor: \"not-allowed\"\n                },\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 25\n              }, this);\n            }\n          } // return (\n          //   <li key={index} onClick={() => handleStarts(item)}>\n          //     {item}\n          //   </li>\n          // );\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.close_icon,\n          alt: \"\",\n          onClick: () => setSelect({\n            byname: !showSelect.byname\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dropdownClassGender,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: Style.filterNamelabelBox,\n        onClick: () => setSelect({\n          byGender: !showSelect.byGender\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: Style.filterNamelabel,\n          children: filterForm.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.down_arrow,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), showSelect.byGender && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.doctor_listing_gender_content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.doctor_listing_gender_content_male,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Male\",\n            name: \"gender\",\n            checked: filterForm.gender === \"Male\",\n            onChange: change_gender,\n            id: \"male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"male\",\n            children: \" Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.doctor_listing_gender_content_female,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Female\",\n            name: \"gender\",\n            checked: filterForm.gender === \"Female\",\n            onChange: change_gender,\n            id: \"female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"female\",\n            children: \" Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), (clientDetails === null || clientDetails === void 0 ? void 0 : clientDetails.clinicurl) === \"shalby\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dropdownClassHospital,\n      onClick: () => setSelect({\n        hospital: !showSelect.hospital\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: Style.filterNamelabelBox,\n        onClick: () => setSelect({\n          hospital: !showSelect.hospital\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: Style.filterNamelabel // onClick={() => setSelect({ hospital: !showSelect.hospital })}\n          ,\n          children: [\" \", ((_filterForm$hospital = filterForm.hospital) === null || _filterForm$hospital === void 0 ? void 0 : _filterForm$hospital.length) == 0 ? \"Hospital\" : filterForm.hospital[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.down_arrow,\n          alt: \"\" // onClick={() => setSelect({ hospital: !showSelect.hospital })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), showSelect.hospital && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.doctor_listing_hospital_content,\n        onClick: () => setSelect({\n          hospital: true\n        }),\n        children: hospitalData && hospitalData.length !== 0 && hospitalData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.checkboxList,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: item.value,\n              id: item.value // checked={filterForm.hospital === item.value}\n              ,\n              checked: item.checked,\n              onChange: e => hospitalchange(item, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: item.value,\n              children: item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.resetText,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: ResetFilter,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.reset_icon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Reset Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoctorListingFilters, \"xhaSNOdYgf5pIC7CcFHuQZQF2MM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DoctorListingFilters;\nexport default DoctorListingFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorListingFilters\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V6/c2md-web_react/src/components/DoctorListingFilters/index.js"],"names":["React","useEffect","useState","Style","Assets","classNames","useSelector","CharacterSet","object","DoctorListingFilters","filterForm","setFilter","setFilterkey","filterKey","ResetFilter","clientDetails","locationData","state","doctorListing","location","languageData","languagesSet","hospitalData","hospitals","indexCharacters","showSelect","setSelect","byname","byGender","hospital","language","document","addEventListener","event","ignoreClickOnMeElement","getElementById","isClickInsideElement","contains","target","colDetailsDiv","doctor_listing_details_div","dropdownClassGender","doctor_listing_byname","doctor_listing_gender","dropdownClassHospital","doctor_listing_hospital","dropdownClassLocation","doctor_listing_location","dropdownClassLanguage","doctor_listing_language","submenu","setSubmenu","handlechange","item","position","e","value","map","data","checked","city","selectedItem","obj","push","toLowerCase","includes","length","hospitalchange","hospitalname","languagechange","languages","change_gender","gender","Change_name","doctorName","handleKeyDown","key","handleStarts","name","getSample","index","selecetdIndex","ActiveIndex","color","cursor","filterNamelabelBox","filterNamelabel","down_arrow","doctor_listing_byname_content","doctor_listing_search_by_name","console","log","close_icon","doctor_listing_gender_content","doctor_listing_gender_content_male","doctor_listing_gender_content_female","clinicurl","doctor_listing_hospital_content","checkboxList","resetText","reset_icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Style from \"./DoctorListingFilters.module.scss\";\nimport Assets from \"../Layout/Assets\";\nimport classNames from \"classnames\";\nimport { useSelector } from \"react-redux\";\nimport { CharacterSet } from \"../Constants/characterSet\";\nimport { object } from \"yup\";\nfunction DoctorListingFilters({\n  filterForm,\n  setFilter,\n  setFilterkey,\n  filterKey,\n  ResetFilter,\n  clientDetails,\n}) {\n  const locationData = useSelector((state) => state.doctorListing.location);\n  const languageData = useSelector((state) => state.doctorListing.languagesSet);\n  const hospitalData = useSelector((state) => state.doctorListing.hospitals);\n  const indexCharacters = useSelector(\n    (state) => state.doctorListing.indexCharacters\n  );\n\n  const [showSelect, setSelect] = useState({\n    byname: false,\n    byGender: false,\n    hospital: false,\n    location: false,\n    language: false,\n  });\n\n  document.addEventListener(\"click\", function (event) {\n    var ignoreClickOnMeElement = document.getElementById(\"filterList\");\n    if (ignoreClickOnMeElement != null) {\n      var isClickInsideElement = ignoreClickOnMeElement.contains(event.target);\n\n      if (\n        !isClickInsideElement &&\n        (showSelect.byname ||\n          showSelect.byGender ||\n          showSelect.hospital ||\n          showSelect.location ||\n          showSelect.language)\n      ) {\n        //Do something click is outside specified element\n        setSelect({\n          byname: false,\n          byGender: false,\n          hospital: false,\n          location: false,\n          language: false,\n        });\n      }\n    }\n  });\n\n  const colDetailsDiv = classNames(Style.doctor_listing_details_div);\n  const dropdownClassGender = classNames(\n    Style.doctor_listing_byname,\n    Style.doctor_listing_gender\n  );\n  const dropdownClassHospital = classNames(\n    Style.doctor_listing_byname,\n    Style.doctor_listing_hospital\n  );\n  const dropdownClassLocation = classNames(\n    Style.doctor_listing_byname,\n    Style.doctor_listing_location\n  );\n  const dropdownClassLanguage = classNames(\n    Style.doctor_listing_byname,\n    Style.doctor_listing_language\n  );\n\n  const [submenu, setSubmenu] = useState({\n    byname: false,\n    byGender: false,\n    hospital: false,\n    location: false,\n    language: false,\n  });\n\n  const handlechange = (item, position, e) => {\n    if (item.value === \"All\") {\n      locationData.map((data) => {\n        data.checked = e.target.checked;\n      });\n\n      delete filterKey?.city;\n      if (e.target.checked) {\n        setFilter({\n          ...filterForm,\n          location: [\"All\"],\n        });\n      } else {\n        setFilter({\n          ...filterForm,\n          location: [],\n        });\n      }\n    } else {\n      locationData.map((data) => {\n        if (data.value == item.value) {\n          data.checked = e.target.checked;\n        }\n        if (data.value == \"All\") {\n          data.checked = false;\n        }\n      });\n      let selectedItem = [];\n      locationData.map((obj) => {\n        if (obj.checked == true && object.value !== \"All\") {\n          return selectedItem.push(obj.value.toLowerCase());\n        }\n      });\n\n      setFilter({\n        ...filterForm,\n        location: selectedItem,\n      });\n      if (selectedItem.includes(\"all\") || selectedItem.length == 0) {\n        delete filterKey.city;\n      } else {\n        setFilterkey({\n          ...filterKey,\n          city: selectedItem,\n        });\n      }\n    }\n\n    setSelect({ location: !showSelect.location });\n  };\n\n  const hospitalchange = (item, e) => {\n    if (item.value === \"All\") {\n      hospitalData.map((data) => {\n        data.checked = e.target.checked;\n      });\n      delete filterKey?.hospitalname;\n      if (e.target.checked) {\n        setFilter({\n          ...filterForm,\n          hospital: [\"All\"],\n        });\n      } else {\n        setFilter({\n          ...filterForm,\n          hospital: [],\n        });\n      }\n    } else {\n      hospitalData.map((data) => {\n        if (data.value == item.value) {\n          data.checked = e.target.checked;\n        }\n        if (data.value == \"All\") {\n          data.checked = false;\n        }\n      });\n\n      let selectedItem = [];\n      hospitalData.map((obj) => {\n        if (obj.checked == true && object.value !== \"All\") {\n          return selectedItem.push(obj.value.toLowerCase());\n        }\n      });\n      setFilter({ ...filterForm, hospital: selectedItem });\n      if (selectedItem.includes(\"all\") || selectedItem.length == 0) {\n        delete filterKey.hospitalname;\n      } else {\n        setFilterkey({ ...filterKey, hospitalname: selectedItem });\n      }\n    }\n    setSelect({ hospital: !showSelect.hospital });\n  };\n\n  const languagechange = (item, e) => {\n    if (item.value === \"All\") {\n      languageData.map((data) => {\n        data.checked = e.target.checked;\n      });\n      delete filterKey?.languages;\n      if (e.target.checked) {\n        setFilter({\n          ...filterForm,\n          language: [\"All\"],\n        });\n      } else {\n        setFilter({\n          ...filterForm,\n          language: [],\n        });\n      }\n    } else {\n      languageData.map((data) => {\n        if (data.value == item.value) {\n          data.checked = e.target.checked;\n        }\n        if (data.value == \"All\") {\n          data.checked = false;\n        }\n      });\n      let selectedItem = [];\n      languageData.map((obj) => {\n        if (obj.checked == true && object.value !== \"All\") {\n          return selectedItem.push(obj.value);\n        }\n      });\n      setFilter({ ...filterForm, language: selectedItem });\n      if (selectedItem.includes(\"all\") || selectedItem.length == 0) {\n        delete filterKey.languages;\n      } else {\n        setFilterkey({ ...filterKey, languages: selectedItem });\n      }\n    }\n    setSelect({ language: !showSelect.language });\n  };\n\n  const change_gender = (e) => {\n    setFilter({ ...filterForm, gender: e.target.value });\n    setFilterkey({ ...filterKey, gender: e.target.value });\n    setSelect({ byGender: !showSelect.byGender });\n  };\n  const Change_name = (e) => {\n    setFilter({ ...filterForm, doctorName: e.target.value });\n    setFilterkey({ ...filterKey, doctorName: e.target.value });\n  };\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      setSelect({ byname: !showSelect.byname });\n    }\n  };\n\n  // const ResetFilter = () => {\n  //   setFilter({\n  //     location: [],\n  //     hospital: [],\n  //     language: [],\n  //     gender: \"Gender\",\n  //     doctorName: \"\",\n  //   });\n  //   setFilterkey(null);\n\n  //   hospitalData.map((data) => {\n  //     data.checked = false;\n  //   });\n  //   locationData.map((data) => {\n  //     data.checked = false;\n  //   });\n  //   languageData.map((data) => {\n  //     data.checked = false;\n  //   });\n  // };\n\n  const handleStarts = (name) => {\n    setFilter({ ...filterForm, doctorName: name });\n    setFilterkey({ ...filterKey, doctorName: name });\n  };\n\n  const getSample = (item, index) => {\n\n\n    if (indexCharacters.includes(item)) {\n      return (\n        <li className={filterKey.doctorName == item ? Style.selecetdIndex : \"not-selected\"} key={index} onClick={() => handleStarts(item)}>\n          {item}\n        </li>\n      );\n    } else {\n      return (\n        <li\n          key={index}\n          className={Style.ActiveIndex}\n          style={{ color: \"#D1D1D1\", cursor: \"not-allowed\" }}\n        >\n          {item}\n        </li>\n      );\n    }\n  };\n\n  return (\n    <div className={colDetailsDiv} id=\"filterList\">\n      <div className={Style.doctor_listing_byname}>\n        <span\n          className={Style.filterNamelabelBox}\n          onClick={() => setSelect({ byname: !showSelect.byname })}\n        >\n          <span className={Style.filterNamelabel}>\n            By Name\n            <img src={Assets.down_arrow} alt=\"\" />\n          </span>\n        </span>\n        {showSelect.byname && (\n          <div className={Style.doctor_listing_byname_content}>\n            <input\n              autocomplete=\"off\"\n              id=\"search\"\n              placeholder=\"Search by Name\"\n              className={Style.doctor_listing_search_by_name}\n              value={filterKey?.doctorName}\n              onChange={Change_name}\n              onKeyDown={handleKeyDown}\n            />\n            <ul>\n              {CharacterSet &&\n                CharacterSet.map(\n                  (item, index) => {\n\n\n                    if (indexCharacters.includes(item)) {\n\n                      {\n                       console.log( filterKey.doctorName == item ?true:null);\n                      }\n                      return (\n                        <li className={filterKey.doctorName == item ? Style.selecetdIndex : \"not-selected\"} key={index} onClick={() => handleStarts(item)}>\n                          {item}{filterKey.doctorName == item?\"y\":\"n\"}\n                        </li>\n                      );\n                    } else {\n                      return (\n                        <li\n                          key={index}\n                          className={Style.ActiveIndex}\n                          style={{ color: \"#D1D1D1\", cursor: \"not-allowed\" }}\n                        >\n                          {item}\n                        </li>\n                      );\n                    }\n                  }\n                  // return (\n                  //   <li key={index} onClick={() => handleStarts(item)}>\n                  //     {item}\n                  //   </li>\n                  // );\n                )}\n            </ul>\n            <img\n              src={Assets.close_icon}\n              alt=\"\"\n              onClick={() => setSelect({ byname: !showSelect.byname })}\n            />\n          </div>\n        )}\n      </div>\n      <div className={dropdownClassGender}>\n        <span\n          className={Style.filterNamelabelBox}\n          onClick={() => setSelect({ byGender: !showSelect.byGender })}\n        >\n          <span className={Style.filterNamelabel}>{filterForm.gender}</span>\n          <img src={Assets.down_arrow} alt=\"\" />\n        </span>\n        {showSelect.byGender && (\n          <div className={Style.doctor_listing_gender_content}>\n            <div className={Style.doctor_listing_gender_content_male}>\n              <input\n                type=\"radio\"\n                value=\"Male\"\n                name=\"gender\"\n                checked={filterForm.gender === \"Male\"}\n                onChange={change_gender}\n                id=\"male\"\n              />{\" \"}\n              <label htmlFor=\"male\"> Male</label>\n            </div>{\" \"}\n            <div className={Style.doctor_listing_gender_content_female}>\n              <input\n                type=\"radio\"\n                value=\"Female\"\n                name=\"gender\"\n                checked={filterForm.gender === \"Female\"}\n                onChange={change_gender}\n                id=\"female\"\n              />{\" \"}\n              <label htmlFor=\"female\"> Female</label>\n            </div>\n          </div>\n        )}\n      </div>\n\n\n      {clientDetails?.clinicurl === \"shalby\" && (\n        <div\n          className={dropdownClassHospital}\n          onClick={() => setSelect({ hospital: !showSelect.hospital })}\n        >\n          <span\n            className={Style.filterNamelabelBox}\n            onClick={() => setSelect({ hospital: !showSelect.hospital })}\n          >\n            <span\n              className={Style.filterNamelabel}\n            // onClick={() => setSelect({ hospital: !showSelect.hospital })}\n            >\n              {\" \"}\n              {filterForm.hospital?.length == 0\n                ? \"Hospital\"\n                : filterForm.hospital[0]}\n            </span>\n            <img\n              src={Assets.down_arrow}\n              alt=\"\"\n            // onClick={() => setSelect({ hospital: !showSelect.hospital })}\n            />\n          </span>\n          {showSelect.hospital && (\n            <div\n              className={Style.doctor_listing_hospital_content}\n              onClick={() => setSelect({ hospital: true })}\n            >\n              {hospitalData &&\n                hospitalData.length !== 0 &&\n                hospitalData.map((item, index) => {\n                  return (\n                    <div className={Style.checkboxList} key={index}>\n                      <input\n                        type=\"checkbox\"\n                        value={item.value}\n                        id={item.value}\n                        // checked={filterForm.hospital === item.value}\n                        checked={item.checked}\n                        onChange={(e) => hospitalchange(item, e)}\n                      />\n                      <label htmlFor={item.value}>{item.value}</label>\n                    </div>\n                  );\n                })}\n            </div>\n          )}\n        </div>\n      )}\n      {/* <div\n        className={dropdownClassLocation}\n        onClick={() => setSelect({ location: !showSelect.location })}\n      >\n        <span\n          className={Style.filterNamelabelBox}\n          onClick={() => setSelect({ location: !showSelect.location })}\n        >\n          <span\n            className={Style.filterNamelabel}\n            // onClick={() => setSelect({ location: !showSelect.location })}\n          >\n            {filterForm.location?.length == 0\n              ? \"Location\"\n              : filterForm.location[0]}\n          </span>\n          <img\n            src={Assets.down_arrow}\n            alt=\"\"\n            // onClick={() => setSelect({ location: !showSelect.location })}\n          />\n        </span>\n        {showSelect.location && (\n          <div className={Style.doctor_listing_location_content}>\n            {locationData &&\n              locationData.length !== 0 &&\n              locationData.map((item, index) => {\n                return (\n                  <div className={Style.checkboxList} key={index}>\n                    <input\n                      type=\"checkbox\"\n                      value={item.value}\n                      // checked={filterForm.location === item.value}\n                      checked={item.checked}\n                      onChange={(e) => handlechange(item, index, e)}\n                      name=\"location\"\n                      id={item.value}\n                    />\n                    <label htmlFor={item.value}>{item.value}</label>\n                  </div>\n                );\n              })}\n          </div>\n        )}\n      </div> */}\n\n      {/* <div className={dropdownClassLanguage}>\n        <span\n          className={Style.filterNamelabelBox}\n          onClick={() => setSelect({ language: !showSelect.language })}\n        >\n          <span\n            className={Style.filterNamelabel}\n            // onClick={() => setSelect({ language: !showSelect.language })}\n          >\n            {filterForm.language?.length == 0\n              ? \"Language\"\n              : filterForm.language[0]}\n          </span>\n          <img\n            src={Assets.down_arrow}\n            className={Style.doctor_listing_lang_img}\n            alt=\"\"\n            // onClick={() => setSelect({ language: !showSelect.language })}\n          />\n        </span>\n        {showSelect.language && (\n          <div className={Style.doctor_listing_language_content}>\n            {languageData &&\n              languageData.length !== 0 &&\n              languageData.map((item, index) => {\n                return (\n                  <div className={Style.checkboxList}>\n                    <input\n                      type=\"checkbox\"\n                      value={item.value}\n                      id={item.value}\n                      // checked={filterForm.language === item.value}\n                      checked={item.checked}\n                      onChange={(e) => languagechange(item, e)}\n                    />\n                    <label>{item.value}</label>\n                  </div>\n                );\n              })}\n          </div>\n        )}\n      </div>\n       */}\n      <div className={Style.resetText}>\n        <div onClick={ResetFilter}>\n          <img src={Assets.reset_icon} alt=\"\" />\n          <span>Reset Filter</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DoctorListingFilters;\n"]},"metadata":{},"sourceType":"module"}