{"ast":null,"code":"import loginedApi, { c2mdApi } from \"../apis\"; // import { USER_TOKEN } from \"../constants/const\";\n\nimport { convertDateToString } from \"../Helpers/dateFunctions\";\nimport { getFromLocalStorage } from \"../Helpers/localStorageHelper\";\nimport authHeader from \"./AuthHeader\";\nimport { INTERBRANCH_ADMIN_CONSOLIDATED, INTERBRANCH_ADMIN_DASHBOARD, INTERBRANCH_ADMIN_DASHBOARD_SELECTED, INTERBRANCH_ADMIN_DETAILED, INTERBRANCH_ADMIN_DETAILED_SELECTED } from \"./type\";\nexport const FETCH_ADMIN_DASHBOARD_REPORT = () => async dispatch => {\n  // let userToken = await getFromLocalStorage(USER_TOKEN)\n  let params = {\n    \"token\": \"token\",\n    \"requestType\": \"1040\",\n    \"version\": \"2.0\",\n    \"data\": {\n      \"operation\": \"find\",\n      \"browserTimeZone\": \"GMT+05:30\",\n      \"Type\": \"excel\",\n      \"startDate\": \"16-Mar-2022\",\n      \"endDate\": \"17-Mar-2022\",\n      \"clinic\": \"14\",\n      \"offset\": \"0\"\n    }\n  };\n  let responce = await loginedApi.post(\"getappointments\", params, {\n    headers: authHeader()\n  });\n  console.log(responce.data.data);\n\n  if (responce.status == 200) {\n    dispatch({\n      type: INTERBRANCH_ADMIN_DASHBOARD,\n      payload: responce.data.data\n    });\n  }\n};\nexport const FETCH_ADMIN_DETAILED_REPORT = _para => async dispatch => {\n  let fromDate = (_para === null || _para === void 0 ? void 0 : _para.fromDate) ? convertDateToString(_para.fromDate) : null;\n  let toDate = (_para === null || _para === void 0 ? void 0 : _para.toDate) ? convertDateToString(_para.toDate) : null;\n  console.log(fromDate, toDate);\n  let params = {\n    \"token\": \"token\",\n    \"requestType\": \"1040\",\n    \"version\": \"2.0\",\n    \"data\": {\n      \"operation\": \"find\",\n      \"browserTimeZone\": \"GMT+05:30\",\n      \"Type\": \"excel\",\n      \"startDate\": fromDate ? fromDate : \"16-Mar-2022\",\n      \"endDate\": toDate ? toDate : \"17-Mar-2022\",\n      \"clinic\": \"14\",\n      \"offset\": \"0\"\n    }\n  };\n  let responce = await loginedApi.post(\"getsummaryreport\", params, {\n    headers: authHeader()\n  });\n  console.log(responce.data.data);\n\n  if (responce.status == 200) {\n    dispatch({\n      type: INTERBRANCH_ADMIN_DETAILED,\n      payload: responce.data.data.data\n    });\n  }\n};\nexport const FETCH_DASHBOARD_MORE = _id => async dispatch => {\n  let params = {\n    \"token\": \"token\",\n    \"requestType\": \"1041\",\n    \"version\": \"2.0\",\n    \"data\": {\n      \"appointmentId\": _id,\n      \"browserTimeZone\": \"GMT+05:30\"\n    }\n  };\n  let responce = await c2mdApi.post(\"getdetailreport\", params, {\n    headers: authHeader()\n  });\n  console.log(responce.data.data);\n\n  if (responce.status == 200) {\n    dispatch({\n      type: INTERBRANCH_ADMIN_DASHBOARD_SELECTED,\n      payload: responce.data.data\n    }); //    console.log(responce.data.data);\n    //    dispatch(setSelectedDash(responce.data.data))\n  }\n};\nexport const FETCH_DETAILED_MORE = _id => async dispatch => {\n  let params = {\n    \"token\": \"token\",\n    \"requestType\": \"1041\",\n    \"data\": {\n      \"appointmentId\": _id,\n      \"browserTimeZone\": \"GMT+05:30\"\n    }\n  };\n  let responce = await c2mdApi.post(\"getdetailreport\", params);\n\n  if (responce.status == 200) {\n    dispatch({\n      type: INTERBRANCH_ADMIN_DETAILED_SELECTED,\n      payload: responce.data.data\n    }); //    console.log(responce.data.data);\n    //    dispatch(setSelectedDash(responce.data.data))\n  }\n};\nexport const FETCH_CONSOLIDATED_REPORTS = () => async dispatch => {\n  let params = {\n    \"token\": \"token\",\n    \"requestType\": \"1040\",\n    \"data\": {\n      \"operation\": \"find\",\n      \"browserTimeZone\": \"GMT+05:30\",\n      \"Type\": \"excel\",\n      \"startDate\": \"16-Mar-2022\",\n      \"endDate\": \"17-Mar-2022\",\n      \"clinic\": \"14\",\n      \"offset\": \"0\"\n    }\n  };\n  let responce = await c2mdApi.post(\"getconsolidatedreport\", params);\n\n  if (responce.status == 200) {\n    dispatch({\n      type: INTERBRANCH_ADMIN_CONSOLIDATED,\n      payload: responce.data.data.data\n    }); //    console.log(responce.data.data);\n    //    dispatch(setSelectedDash(responce.data.data))\n  }\n};\nexport const updateMisReportComment = (_id, value) => async dispatch => {\n  let params = {\n    \"requestType\": \"1046\",\n    \"data\": {\n      \"appointmentId\": _id,\n      \"notes\": value\n    }\n  };\n  let responce = await c2mdApi.post(\"updatereportdata\", params);\n\n  if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n    return true;\n  }\n};\nexport const updateConsolodatedReportComment = (_id, value) => async dispatch => {\n  let params = {\n    \"requestType\": \"1046\",\n    // \"version\": 2,\n    \"data\": {\n      \"consolReportId\": _id,\n      \"adjustments\": value\n    }\n  };\n  let responce = await c2mdApi.post(\"updateconsolreport\", params);\n\n  if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n    return true;\n  }\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/BITBUCKET/New/c2md-web_react/src/actions/InterbranchAdminActions.js"],"names":["loginedApi","c2mdApi","convertDateToString","getFromLocalStorage","authHeader","INTERBRANCH_ADMIN_CONSOLIDATED","INTERBRANCH_ADMIN_DASHBOARD","INTERBRANCH_ADMIN_DASHBOARD_SELECTED","INTERBRANCH_ADMIN_DETAILED","INTERBRANCH_ADMIN_DETAILED_SELECTED","FETCH_ADMIN_DASHBOARD_REPORT","dispatch","params","responce","post","headers","console","log","data","status","type","payload","FETCH_ADMIN_DETAILED_REPORT","_para","fromDate","toDate","FETCH_DASHBOARD_MORE","_id","FETCH_DETAILED_MORE","FETCH_CONSOLIDATED_REPORTS","updateMisReportComment","value","info","updateConsolodatedReportComment"],"mappings":"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","sourcesContent":["import loginedApi, { c2mdApi } from \"../apis\"\n// import { USER_TOKEN } from \"../constants/const\";\nimport { convertDateToString } from \"../Helpers/dateFunctions\";\nimport { getFromLocalStorage } from \"../Helpers/localStorageHelper\";\nimport authHeader from \"./AuthHeader\";\nimport { INTERBRANCH_ADMIN_CONSOLIDATED, INTERBRANCH_ADMIN_DASHBOARD, INTERBRANCH_ADMIN_DASHBOARD_SELECTED, INTERBRANCH_ADMIN_DETAILED, INTERBRANCH_ADMIN_DETAILED_SELECTED } from \"./type\";\n\nexport const FETCH_ADMIN_DASHBOARD_REPORT = () => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n    \n\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"startDate\": \"16-Mar-2022\",\n            \"endDate\": \"17-Mar-2022\",\n            \"clinic\": \"14\",\n            \"offset\": \"0\"\n        }\n    }\n\n\n\n\n   let responce = await loginedApi.post(\"getappointments\", params, { headers: authHeader() })\n\n    console.log(responce.data.data);\n\n    if (responce.status == 200) {\n\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DASHBOARD,\n            payload: responce.data.data\n        });\n\n\n    }\n\n\n}\n\n\nexport const FETCH_ADMIN_DETAILED_REPORT = (_para) => async (dispatch) => {\n\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : null\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : null\n\n    console.log(fromDate, toDate);\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"startDate\": fromDate ? fromDate : \"16-Mar-2022\",\n            \"endDate\": toDate ? toDate : \"17-Mar-2022\",\n            \"clinic\": \"14\",\n            \"offset\": \"0\"\n        }\n    }\n\n    let responce = await loginedApi.post(\"getsummaryreport\", params, { headers: authHeader() })\n\n    console.log(responce.data.data);\n\n    if (responce.status == 200) {\n\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DETAILED,\n            payload: responce.data.data.data\n        });\n\n\n    }\n\n\n}\n\n\nexport const FETCH_DASHBOARD_MORE = (_id) => async dispatch => {\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1041\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"browserTimeZone\": \"GMT+05:30\"\n        }\n    }\n\n    let responce = await c2mdApi.post(\"getdetailreport\", params, { headers: authHeader() })\n\n    console.log(responce.data.data);\n\n\n    if (responce.status == 200) {\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DASHBOARD_SELECTED,\n            payload: responce.data.data\n        });\n\n        //    console.log(responce.data.data);\n        //    dispatch(setSelectedDash(responce.data.data))\n\n    }\n\n\n}\n\nexport const FETCH_DETAILED_MORE = (_id) => async dispatch => {\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1041\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"browserTimeZone\": \"GMT+05:30\"\n        }\n    }\n\n    let responce = await c2mdApi.post(\"getdetailreport\", params)\n\n\n\n    if (responce.status == 200) {\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DETAILED_SELECTED,\n            payload: responce.data.data\n        });\n\n        //    console.log(responce.data.data);\n        //    dispatch(setSelectedDash(responce.data.data))\n\n    }\n\n\n}\n\n\n\nexport const FETCH_CONSOLIDATED_REPORTS = () => async dispatch => {\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"startDate\": \"16-Mar-2022\",\n            \"endDate\": \"17-Mar-2022\",\n            \"clinic\": \"14\",\n            \"offset\": \"0\"\n        }\n    }\n\n    let responce = await c2mdApi.post(\"getconsolidatedreport\", params)\n\n\n\n    if (responce.status == 200) {\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_CONSOLIDATED,\n            payload: responce.data.data.data\n        });\n\n        //    console.log(responce.data.data);\n        //    dispatch(setSelectedDash(responce.data.data))\n\n    }\n\n\n}\n\n\nexport const updateMisReportComment = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"notes\": value\n        }\n    }\n\n    let responce = await c2mdApi.post(\"updatereportdata\", params)\n\n    if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n\n        return true\n\n    }\n\n\n}\n\n\nexport const updateConsolodatedReportComment = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        // \"version\": 2,\n        \"data\": {\n            \"consolReportId\": _id,\n            \"adjustments\": value\n        }\n    }\n\n    let responce = await c2mdApi.post(\"updateconsolreport\", params)\n\n    if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n\n        return true\n\n    }\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}