{"ast":null,"code":"'use strict';\n\nconst isIp = require('is-ip');\n\nclass CancelError extends Error {\n  constructor() {\n    super('Request was cancelled');\n    this.name = 'CancelError';\n  }\n\n  get isCanceled() {\n    return true;\n  }\n\n}\n\nconst defaults = {\n  timeout: 5000\n};\nconst urls = {\n  v4: ['https://ipv4.icanhazip.com/', 'https://api.ipify.org/'],\n  v6: ['https://ipv6.icanhazip.com/', 'https://api6.ipify.org/']\n};\n\nconst sendXhr = (url, options, version) => {\n  const xhr = new XMLHttpRequest();\n\n  let _reject;\n\n  const promise = new Promise((resolve, reject) => {\n    _reject = reject;\n    xhr.addEventListener('error', reject, {\n      once: true\n    });\n    xhr.addEventListener('timeout', reject, {\n      once: true\n    });\n    xhr.addEventListener('load', () => {\n      const ip = xhr.responseText.trim();\n\n      if (!ip || !isIp[version](ip)) {\n        reject();\n        return;\n      }\n\n      resolve(ip);\n    }, {\n      once: true\n    });\n    xhr.open('GET', url);\n    xhr.timeout = options.timeout;\n    xhr.send();\n  });\n\n  promise.cancel = () => {\n    xhr.abort();\n\n    _reject(new CancelError());\n  };\n\n  return promise;\n};\n\nconst queryHttps = (version, options) => {\n  let request;\n\n  const promise = async function () {\n    const urls_ = [].concat.apply(urls[version], options.fallbackUrls || []);\n\n    for (const url of urls_) {\n      try {\n        request = sendXhr(url, options, version); // eslint-disable-next-line no-await-in-loop\n\n        const ip = await request;\n        return ip;\n      } catch (error) {\n        if (error instanceof CancelError) {\n          throw error;\n        }\n      }\n    }\n\n    throw new Error('Couldn\\'t find your IP');\n  }();\n\n  promise.cancel = () => {\n    request.cancel();\n  };\n\n  return promise;\n};\n\nmodule.exports.v4 = options => queryHttps('v4', { ...defaults,\n  ...options\n});\n\nmodule.exports.v6 = options => queryHttps('v6', { ...defaults,\n  ...options\n});","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V2/connect2mydoctor-phase1/connect2mydoctor-phase1/node_modules/public-ip/browser.js"],"names":["isIp","require","CancelError","Error","constructor","name","isCanceled","defaults","timeout","urls","v4","v6","sendXhr","url","options","version","xhr","XMLHttpRequest","_reject","promise","Promise","resolve","reject","addEventListener","once","ip","responseText","trim","open","send","cancel","abort","queryHttps","request","urls_","concat","apply","fallbackUrls","error","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst isIp = require('is-ip');\n\nclass CancelError extends Error {\n\tconstructor() {\n\t\tsuper('Request was cancelled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nconst defaults = {\n\ttimeout: 5000\n};\n\nconst urls = {\n\tv4: [\n\t\t'https://ipv4.icanhazip.com/',\n\t\t'https://api.ipify.org/'\n\t],\n\tv6: [\n\t\t'https://ipv6.icanhazip.com/',\n\t\t'https://api6.ipify.org/'\n\t]\n};\n\nconst sendXhr = (url, options, version) => {\n\tconst xhr = new XMLHttpRequest();\n\n\tlet _reject;\n\tconst promise = new Promise((resolve, reject) => {\n\t\t_reject = reject;\n\t\txhr.addEventListener('error', reject, {once: true});\n\t\txhr.addEventListener('timeout', reject, {once: true});\n\n\t\txhr.addEventListener('load', () => {\n\t\t\tconst ip = xhr.responseText.trim();\n\n\t\t\tif (!ip || !isIp[version](ip)) {\n\t\t\t\treject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(ip);\n\t\t}, {once: true});\n\n\t\txhr.open('GET', url);\n\t\txhr.timeout = options.timeout;\n\t\txhr.send();\n\t});\n\n\tpromise.cancel = () => {\n\t\txhr.abort();\n\t\t_reject(new CancelError());\n\t};\n\n\treturn promise;\n};\n\nconst queryHttps = (version, options) => {\n\tlet request;\n\tconst promise = (async function () {\n\t\tconst urls_ = [].concat.apply(urls[version], options.fallbackUrls || []);\n\t\tfor (const url of urls_) {\n\t\t\ttry {\n\t\t\t\trequest = sendXhr(url, options, version);\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst ip = await request;\n\t\t\t\treturn ip;\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof CancelError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Couldn\\'t find your IP');\n\t})();\n\n\tpromise.cancel = () => {\n\t\trequest.cancel();\n\t};\n\n\treturn promise;\n};\n\nmodule.exports.v4 = options => queryHttps('v4', {...defaults, ...options});\n\nmodule.exports.v6 = options => queryHttps('v6', {...defaults, ...options});\n"]},"metadata":{},"sourceType":"script"}