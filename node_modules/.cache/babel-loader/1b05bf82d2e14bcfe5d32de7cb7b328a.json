{"ast":null,"code":"var _formatTime;\n\nimport loginedApi from \"../apis\";\nimport { REASONFOR_VISIT, TYPE_OF_APPOINMENT, INSURANCE_LIST, BOOKING_RELATED_DATA } from \"./type\";\n\nconst {\n  detect\n} = require('detect-browser');\n\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = (_formatTime = formatTime) === null || _formatTime === void 0 ? void 0 : _formatTime.slice(1);\n\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nexport const fetchReasonforVisit = doctorId => async dispatch => {\n  const res = await loginedApi.post(\"getreasonforvisit\", {\n    requestType: 183,\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      isfrommobile: true,\n      useragent: \"Simulator iPhone13,4 - CDD71058-AA65-40EB-8B50-61115DDD07C4\",\n      browserTimeZone: \"GMT%2B05:30\",\n      currency: \"INR\",\n      todayRate: \"74.27006\",\n      accessCountry: \"IN\",\n      Ipaddress: \"192.168.1.43\",\n      Os: \"iOS14.4\"\n    }\n  });\n\n  if (res.status === 200) {\n    const reasons = res.data.data.Reasons;\n    dispatch({\n      type: REASONFOR_VISIT,\n      payload: reasons\n    });\n  }\n};\nexport const fetchTypeofAppoinment = doctorId => async dispatch => {\n  let resp = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n  const res = await loginedApi.post(\"gettypeofconsultation\", {\n    requestType: \"182\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      browserTimeZone: `GMT${formatTime}`,\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      currency: doctorscountrycode.currency,\n      accessCountry: doctorscountrycode.Country,\n      todayRate: \"\"\n    }\n  });\n\n  if (res.status === 200) {\n    const typeofAppoinment = res.data.data.Details;\n    dispatch({\n      type: TYPE_OF_APPOINMENT,\n      payload: typeofAppoinment\n    });\n  }\n};\nexport const fetch_Insurance = patientId => async dispatch => {\n  const res = await loginedApi.post(\"gettinsurancelist\", {\n    requestType: \"923\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      patientId: patientId,\n      browserTimeZone: `GMT${formatTime}`,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      currency: \"INR\",\n      accessCountry: \"IN\",\n      todayRate: \"\"\n    }\n  });\n\n  if (res.status === 200) {\n    const insuranceList = res.data.data;\n    dispatch({\n      type: INSURANCE_LIST,\n      payload: insuranceList\n    });\n  }\n};\nexport const UploadImageUpload = () => async dispatch => {};\nexport const fetch_Symptoms = patientId => async dispatch => {\n  const res = await loginedApi.post(\"bookingrelateddata\", {\n    token: \"token\",\n    data: {\n      Ipaddress: \"\",\n      userId: patientId,\n      browserTimeZone: `GMT${formatTime}`,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      accessCountry: \"IN\"\n    },\n    requestType: 191\n  });\n\n  if (res.status === 200) {\n    const settingsdata = res.data.data.data;\n    dispatch({\n      type: BOOKING_RELATED_DATA,\n      payload: settingsdata\n    });\n  }\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V10/c2md-web_react/src/actions/ReasonforVisitAction.js"],"names":["loginedApi","REASONFOR_VISIT","TYPE_OF_APPOINMENT","INSURANCE_LIST","BOOKING_RELATED_DATA","detect","require","browser","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","result","slice","search","fetchReasonforVisit","doctorId","dispatch","res","post","requestType","token","data","isfrommobile","useragent","browserTimeZone","currency","todayRate","accessCountry","Ipaddress","Os","status","reasons","Reasons","type","payload","fetchTypeofAppoinment","resp","doctorscountrycode","Browser","name","version","appname","Country","typeofAppoinment","Details","fetch_Insurance","patientId","insuranceList","UploadImageUpload","fetch_Symptoms","userId","settingsdata"],"mappings":"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","sourcesContent":["import loginedApi from \"../apis\";\nimport {\n  REASONFOR_VISIT,\n  TYPE_OF_APPOINMENT,\n  INSURANCE_LIST,\n  BOOKING_RELATED_DATA,\n} from \"./type\";\nconst { detect } = require('detect-browser');\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\")\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\")\n}//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nexport const fetchReasonforVisit = (doctorId) => async (dispatch) => {\n  const res = await loginedApi.post(\"getreasonforvisit\", {\n    requestType: 183,\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      isfrommobile: true,\n      useragent: \"Simulator iPhone13,4 - CDD71058-AA65-40EB-8B50-61115DDD07C4\",\n      browserTimeZone: \"GMT%2B05:30\",\n      currency: \"INR\",\n      todayRate: \"74.27006\",\n      accessCountry: \"IN\",\n      Ipaddress: \"192.168.1.43\",\n      Os: \"iOS14.4\",\n    },\n  });\n\n  if (res.status === 200) {\n    const reasons = res.data.data.Reasons;\n    dispatch({ type: REASONFOR_VISIT, payload: reasons });\n  }\n};\n\nexport const fetchTypeofAppoinment = (doctorId) => async (dispatch) => {\n  let resp = await loginedApi.post(\"getcountrycode\", \n  {\n    \"token\": \"token\",\n    \"version\":\"2.0\",\n    \"data\": {browserTimeZone: `GMT${formatTime}`},\n    \"requestType\": 1058\n});\nconst doctorscountrycode = resp.data.data;\n\n\n  const res = await loginedApi.post(\"gettypeofconsultation\", {\n    requestType: \"182\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      browserTimeZone: `GMT${formatTime}`,\n\t\t\tIpaddress: doctorscountrycode.Ipaddress, \n            useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n            Os: platform ,\n            currency: doctorscountrycode.currency,\n            accessCountry: doctorscountrycode.Country,\n      todayRate: \"\",\n    },\n  });\n\n  if (res.status === 200) {\n    const typeofAppoinment = res.data.data.Details;\n    dispatch({ type: TYPE_OF_APPOINMENT, payload: typeofAppoinment });\n  }\n};\n\nexport const fetch_Insurance = (patientId) => async (dispatch) => {\n  const res = await loginedApi.post(\"gettinsurancelist\", {\n    requestType: \"923\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      patientId: patientId,\n      browserTimeZone: `GMT${formatTime}`,\n      useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n            Os: platform ,\n      currency: \"INR\",\n      accessCountry: \"IN\",\n      todayRate: \"\",\n    },\n  });\n\n  if (res.status === 200) {\n    const insuranceList = res.data.data;\n    dispatch({ type: INSURANCE_LIST, payload: insuranceList });\n  }\n};\n\nexport const UploadImageUpload = () => async (dispatch) => {};\n\nexport const fetch_Symptoms = (patientId) => async (dispatch) => {\n  const res = await loginedApi.post(\"bookingrelateddata\", {\n    token: \"token\",\n    data: {\n      Ipaddress: \"\",\n      userId: patientId,\n      browserTimeZone: `GMT${formatTime}`,\n      useragent: userAgent,\n      Browser: browser.name+\" \"+browser.version,\n      appname: \"C2MD Web\",\n      Os: platform ,\n      accessCountry: \"IN\",\n    },\n    requestType: 191,\n  });\n\n  if (res.status === 200) {\n    const settingsdata = res.data.data.data;\n\n    dispatch({ type: BOOKING_RELATED_DATA, payload: settingsdata });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}