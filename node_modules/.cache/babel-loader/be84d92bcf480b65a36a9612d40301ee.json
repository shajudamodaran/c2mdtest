{"ast":null,"code":"var _formatTime;\n\nimport loginedApi from \"../apis\";\nimport { toast } from \"react-toastify\";\nimport CryptoJS from \"crypto-js\";\nimport { FETCH_FAMILY_MEMBERS, FETCH_PATIENT_MEDICAL_DATA, FETCH_UPLOADED_DATA, FETCH_PATIENT_MEDICAL_DATA_INIT_ACTION, FETCH_PATIENT_MEDICAL_DATA_FAIL_ACTION } from \"./type\";\n\nconst publicIp = require(\"public-ip\");\n\nconst {\n  detect\n} = require(\"detect-browser\");\n\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = (_formatTime = formatTime) === null || _formatTime === void 0 ? void 0 : _formatTime.slice(1);\n\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nexport const fetch_family_members = ({\n  userid\n}) => async dispatch => {\n  var _res$data;\n\n  let resp = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n  const res = await loginedApi.post(\"profile\", {\n    token: \"C2MDVerificationToken\",\n    data: {\n      patientId: userid === null || userid === void 0 ? void 0 : userid.user.userId,\n      isfrommobile: true,\n      browserTimeZone: `GMT${formatTime}`,\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      currency: doctorscountrycode.currency,\n      accessCountry: doctorscountrycode.Country\n    },\n    requestType: \"66\"\n  });\n\n  if ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data) {\n    var _userid$user, _userid$user2;\n\n    dispatch({\n      type: FETCH_FAMILY_MEMBERS,\n      payload: [{\n        memberName: \"For myself\",\n        relationship: \"self\",\n        gender: userid === null || userid === void 0 ? void 0 : (_userid$user = userid.user) === null || _userid$user === void 0 ? void 0 : _userid$user.gender,\n        dob: userid === null || userid === void 0 ? void 0 : (_userid$user2 = userid.user) === null || _userid$user2 === void 0 ? void 0 : _userid$user2.dob\n      }, ...res.data.data]\n    });\n  }\n};\nexport const fetch_patient_medicalDetails = ({\n  userdata,\n  date,\n  userID\n}) => async dispatch => {\n  var _userdata$today_rate, _userdata$today_rate2, _res$data2;\n\n  let resp = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n  dispatch({\n    type: FETCH_PATIENT_MEDICAL_DATA_INIT_ACTION\n  });\n  const res = await loginedApi.post(\"profile\", {\n    requestType: \"68\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      patientId: date.relationship == \"rel-self\" ? userID : date.relationship,\n      patientEmail: userdata === null || userdata === void 0 ? void 0 : userdata.userId,\n      patientMobile: userdata === null || userdata === void 0 ? void 0 : userdata.mobileNumber,\n      todayRate: userdata === null || userdata === void 0 ? void 0 : (_userdata$today_rate = userdata.today_rate) === null || _userdata$today_rate === void 0 ? void 0 : _userdata$today_rate.todayRate,\n      currency: userdata === null || userdata === void 0 ? void 0 : (_userdata$today_rate2 = userdata.today_rate) === null || _userdata$today_rate2 === void 0 ? void 0 : _userdata$today_rate2.currency,\n      dayOfAppointment: date.appointmentDate,\n      appointmentNavigation: \"start\",\n      browserTimeZone: `GMT${formatTime}`,\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      currency: doctorscountrycode.currency,\n      accessCountry: doctorscountrycode.Country\n    }\n  });\n\n  if ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.data) {\n    dispatch({\n      type: FETCH_PATIENT_MEDICAL_DATA,\n      payload: res.data.data\n    });\n  }\n};\nexport const fetch_Uploaded_files = ({\n  userId\n}) => async dispatch => {\n  var _res$data3;\n\n  let resp = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n  const res = await loginedApi.post(\"profile\", {\n    requestType: \"60\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      patientId: userId,\n      reportData: {\n        type: \"All\",\n        limit: \"10\"\n      },\n      todayRate: \"73.81225\",\n      browserTimeZone: `GMT${formatTime}`,\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      currency: doctorscountrycode.currency,\n      accessCountry: doctorscountrycode.Country\n    }\n  });\n\n  if ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.data) {\n    var _res$data4;\n\n    let Item = (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.data;\n    dispatch({\n      type: FETCH_UPLOADED_DATA,\n      payload: Item\n    });\n  }\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/BITBUCKET/New/c2md-web_react/src/actions/FamilyMembersAction.js"],"names":["loginedApi","toast","CryptoJS","FETCH_FAMILY_MEMBERS","FETCH_PATIENT_MEDICAL_DATA","FETCH_UPLOADED_DATA","FETCH_PATIENT_MEDICAL_DATA_INIT_ACTION","FETCH_PATIENT_MEDICAL_DATA_FAIL_ACTION","publicIp","require","detect","browser","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","result","slice","search","fetch_family_members","userid","dispatch","resp","post","browserTimeZone","doctorscountrycode","data","res","token","patientId","user","userId","isfrommobile","Ipaddress","useragent","Browser","name","version","appname","Os","currency","accessCountry","Country","requestType","type","payload","memberName","relationship","gender","dob","fetch_patient_medicalDetails","userdata","date","userID","patientEmail","patientMobile","mobileNumber","todayRate","today_rate","dayOfAppointment","appointmentDate","appointmentNavigation","fetch_Uploaded_files","reportData","limit","Item"],"mappings":"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","sourcesContent":["import loginedApi from \"../apis\";\nimport { toast } from \"react-toastify\";\nimport CryptoJS from \"crypto-js\";\nimport {\n  FETCH_FAMILY_MEMBERS,\n  FETCH_PATIENT_MEDICAL_DATA,\n  FETCH_UPLOADED_DATA,\n  FETCH_PATIENT_MEDICAL_DATA_INIT_ACTION,\n  FETCH_PATIENT_MEDICAL_DATA_FAIL_ACTION,\n} from \"./type\";\nconst publicIp = require(\"public-ip\");\nconst { detect } = require(\"detect-browser\");\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nexport const fetch_family_members =\n  ({ userid }) =>\n  async (dispatch) => {\n    let resp = await loginedApi.post(\"getcountrycode\", \n  {\n    \"token\": \"token\",\n    \"version\":\"2.0\",\n    \"data\": {browserTimeZone: `GMT${formatTime}`},\n    \"requestType\": 1058\n});\nconst doctorscountrycode = resp.data.data;\n\n    const res = await loginedApi.post(\"profile\", {\n      token: \"C2MDVerificationToken\",\n      data: {\n        patientId: userid?.user.userId,\n        isfrommobile: true,\n        browserTimeZone: `GMT${formatTime}`,\n        Ipaddress: doctorscountrycode.Ipaddress,\n        useragent: userAgent,\n        Browser: browser.name + \" \" + browser.version,\n        appname: \"C2MD Web\",\n        Os: platform,\n        currency: doctorscountrycode.currency,\n        accessCountry: doctorscountrycode.Country,\n      },\n      requestType: \"66\",\n    });\n\n    if (res.data?.data) {\n      dispatch({\n        type: FETCH_FAMILY_MEMBERS,\n        payload: [\n          {\n            memberName: \"For myself\",\n            relationship: \"self\",\n            gender: userid?.user?.gender,\n            dob: userid?.user?.dob,\n          },\n          ...res.data.data,\n        ],\n      });\n    }\n  };\n\nexport const fetch_patient_medicalDetails =\n  ({ userdata, date, userID }) =>\n  async (dispatch) => {\n    let resp = await loginedApi.post(\"getcountrycode\", \n  {\n    \"token\": \"token\",\n    \"version\":\"2.0\",\n    \"data\": {browserTimeZone: `GMT${formatTime}`},\n    \"requestType\": 1058\n});\nconst doctorscountrycode = resp.data.data;\n\n    dispatch({ type: FETCH_PATIENT_MEDICAL_DATA_INIT_ACTION });\n    const res = await loginedApi.post(\"profile\", {\n      requestType: \"68\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        patientId: date.relationship == \"rel-self\" ? userID : date.relationship,\n        patientEmail: userdata?.userId,\n        patientMobile: userdata?.mobileNumber,\n        \n        todayRate: userdata?.today_rate?.todayRate,\n        currency: userdata?.today_rate?.currency,\n        dayOfAppointment: date.appointmentDate,\n        appointmentNavigation: \"start\",\n        browserTimeZone: `GMT${formatTime}`,\n\t\t\tIpaddress: doctorscountrycode.Ipaddress, \n            useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n            Os: platform ,\n            currency: doctorscountrycode.currency,\n            accessCountry: doctorscountrycode.Country,\n        \n      },\n    });\n\n    if (res.data?.data) {\n      dispatch({ type: FETCH_PATIENT_MEDICAL_DATA, payload: res.data.data });\n    }\n  };\n\nexport const fetch_Uploaded_files =\n  ({ userId }) =>\n  async (dispatch) => {\n    let resp = await loginedApi.post(\"getcountrycode\", \n    {\n      \"token\": \"token\",\n      \"version\":\"2.0\",\n      \"data\": {browserTimeZone: `GMT${formatTime}`},\n      \"requestType\": 1058\n  });\n  const doctorscountrycode = resp.data.data;\n  \n    const res = await loginedApi.post(\"profile\", {\n      requestType: \"60\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        patientId: userId,\n        reportData: {\n          type: \"All\",\n          limit: \"10\",\n        },\n        \n        todayRate: \"73.81225\",\n        browserTimeZone: `GMT${formatTime}`,\n\t\t\tIpaddress: doctorscountrycode.Ipaddress, \n            useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n            Os: platform ,\n            currency: doctorscountrycode.currency,\n            accessCountry: doctorscountrycode.Country,\n      },\n    });\n\n    if (res.data?.data) {\n      let Item = res.data?.data;\n\n      dispatch({ type: FETCH_UPLOADED_DATA, payload: Item });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}