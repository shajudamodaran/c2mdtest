{"ast":null,"code":"var _formatTime;\n\nimport { APPOINTMENT_SLOT, APPOINTMENT_MORE_SLOT, APPOINTMENT_MORE_SLOT_RESET } from \"./type\";\nimport loginedApi from \"../apis\";\n\nconst {\n  detect\n} = require('detect-browser');\n\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = (_formatTime = formatTime) === null || _formatTime === void 0 ? void 0 : _formatTime.slice(1);\n\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nlet countrycoderes;\nlet doctorscountrycode;\nexport const fetch_appointmentSlot = ({\n  isStart,\n  isNext,\n  date,\n  typeofconsultation,\n  doctorId\n}) => async dispatch => {\n  countrycoderes = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  doctorscountrycode = countrycoderes.data.data;\n  const response = await loginedApi.post(\"doctortimeslots\", {\n    requestType: \"175\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      timeSlotCriteria: {\n        doctorId: doctorId,\n        date: date,\n        isStart: isStart,\n        isNext: isNext,\n        typeofconsultation: typeofconsultation\n      },\n      // browserTimeZone: \"GMT%2B05:30\",\n      browserTimeZone: `GMT${formatTime}`,\n      todayRate: \"73.49680\",\n      actualRate: \"73.49680\",\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      accessCountry: doctorscountrycode.Country,\n      currency: doctorscountrycode.currency\n    }\n  });\n\n  if (response.status === 200) {\n    dispatch({\n      type: APPOINTMENT_SLOT,\n      payload: response.data.data\n    });\n  }\n};\nexport const fetch_more_appointmentSlot = ({\n  isStart,\n  isNext,\n  date,\n  typeofconsultation,\n  doctorId,\n  isClear\n}) => async dispatch => {\n  countrycoderes = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  doctorscountrycode = countrycoderes.data.data;\n  const response = await loginedApi.post(\"doctortimeslots\", {\n    requestType: \"175\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      timeSlotCriteria: {\n        doctorId: doctorId,\n        date: date,\n        isStart: isStart,\n        isNext: isNext,\n        typeofconsultation: typeofconsultation\n      },\n      browserTimeZone: `GMT${formatTime}`,\n      todayRate: \"73.49680\",\n      actualRate: \"73.49680\",\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      accessCountry: doctorscountrycode.Country,\n      currency: doctorscountrycode.currency\n    }\n  });\n\n  if (response.status === 200) {\n    console.log(response);\n    dispatch({\n      type: isClear ? APPOINTMENT_MORE_SLOT_RESET : APPOINTMENT_MORE_SLOT,\n      payload: response.data.data\n    });\n  }\n};\nexport const fetch_appointmentTypes = doctorId => async dispatch => {\n  countrycoderes = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n  doctorscountrycode = countrycoderes.data.data;\n  const response = await loginedApi.post(\"gettypeofconsultation\", {\n    requestType: \"182\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      browserTimeZone: `GMT${formatTime}`,\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      Browser: browser.name + \" \" + browser.version,\n      appname: \"C2MD Web\",\n      Os: platform,\n      accessCountry: doctorscountrycode.Country,\n      currency: doctorscountrycode.currency,\n      todayRate: \"\"\n    }\n  });\n  return response.data.data.Details;\n};","map":{"version":3,"sources":["/home/veena/Downloads/WEB_PUSH/c2md-web_react/src/actions/AppointmentSlotAction.js"],"names":["APPOINTMENT_SLOT","APPOINTMENT_MORE_SLOT","APPOINTMENT_MORE_SLOT_RESET","loginedApi","detect","require","browser","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","result","slice","search","countrycoderes","doctorscountrycode","fetch_appointmentSlot","isStart","isNext","date","typeofconsultation","doctorId","dispatch","post","browserTimeZone","data","response","requestType","token","timeSlotCriteria","todayRate","actualRate","Ipaddress","useragent","Browser","name","version","appname","Os","accessCountry","Country","currency","status","type","payload","fetch_more_appointmentSlot","isClear","console","log","fetch_appointmentTypes","Details"],"mappings":"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","sourcesContent":["import { APPOINTMENT_SLOT, APPOINTMENT_MORE_SLOT, APPOINTMENT_MORE_SLOT_RESET } from \"./type\";\nimport loginedApi from \"../apis\";\n\nconst { detect } = require('detect-browser');\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif(formatTime.search(/\\+/g)!=null)\n  {\n    formatTime=formatTime.replace(/\\+/g,\"%2B\")\n  }else if(formatTime.search(/\\-/g)!=null)\n  {\n    formatTime=formatTime.replace(/\\-/g,\"%2D\")\n  }//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nlet countrycoderes;\nlet doctorscountrycode;\n\nexport const fetch_appointmentSlot =\n  ({ isStart, isNext, date, typeofconsultation, doctorId }) =>\n  async (dispatch) => {\n\n\n    countrycoderes = await loginedApi.post(\"getcountrycode\",\n    {\n      \"token\": \"token\",\n      \"version\": \"2.0\",\n      \"data\": { browserTimeZone: `GMT${formatTime}`, },\n      \"requestType\": 1058\n    });\n\n    doctorscountrycode = countrycoderes.data.data;\n      \n\n\n    const response = await loginedApi.post(\"doctortimeslots\", {\n      requestType: \"175\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        timeSlotCriteria: {\n          doctorId: doctorId,\n          date: date,\n          isStart: isStart,\n          isNext: isNext,\n          typeofconsultation: typeofconsultation,\n        },\n        // browserTimeZone: \"GMT%2B05:30\",\n        browserTimeZone: `GMT${formatTime}`,\n        todayRate: \"73.49680\",\n        actualRate: \"73.49680\",\n        Ipaddress: doctorscountrycode.Ipaddress, \n        useragent: userAgent,\n        Browser: browser.name+\" \"+browser.version,\n        appname: \"C2MD Web\",\n        Os: platform ,\n        accessCountry: doctorscountrycode.Country,\n        currency: doctorscountrycode.currency,\n      },\n    });\n\n    if (response.status === 200) {\n      dispatch({ type: APPOINTMENT_SLOT, payload: response.data.data });\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n  \n  export const fetch_more_appointmentSlot =\n  ({ isStart, isNext, date, typeofconsultation, doctorId, isClear }) =>\n    async (dispatch) => {\n\n      countrycoderes = await loginedApi.post(\"getcountrycode\",\n        {\n          \"token\": \"token\",\n          \"version\": \"2.0\",\n          \"data\": { browserTimeZone: `GMT${formatTime}`, },\n          \"requestType\": 1058\n        });\n\n      doctorscountrycode = countrycoderes.data.data;\n\n\n      const response = await loginedApi.post(\"doctortimeslots\", {\n        requestType: \"175\",\n        token: \"C2MDVerificationToken\",\n        data: {\n          timeSlotCriteria: {\n            doctorId: doctorId,\n            date: date,\n            isStart: isStart,\n            isNext: isNext,\n            typeofconsultation: typeofconsultation,\n          },\n          browserTimeZone: `GMT${formatTime}`,\n          todayRate: \"73.49680\",\n          actualRate: \"73.49680\",\n          Ipaddress: doctorscountrycode.Ipaddress, \n          useragent: userAgent,\n          Browser: browser.name+\" \"+browser.version,\n          appname: \"C2MD Web\",\n          Os: platform ,\n          accessCountry: doctorscountrycode.Country,\n          currency: doctorscountrycode.currency,\n        },\n      });\n      if (response.status === 200) {\n        console.log(response);\n        dispatch({ type: isClear ? APPOINTMENT_MORE_SLOT_RESET : APPOINTMENT_MORE_SLOT, payload: response.data.data });\n      }\n    };\n\n\n    export const fetch_appointmentTypes = (doctorId) => async (dispatch) => {\n      countrycoderes = await loginedApi.post(\"getcountrycode\",\n        {\n          \"token\": \"token\",\n          \"version\": \"2.0\",\n          \"data\": { browserTimeZone: `GMT${formatTime}`, },\n          \"requestType\": 1058\n        });\n    \n      doctorscountrycode = countrycoderes.data.data;\n      const response = await loginedApi.post(\"gettypeofconsultation\", {\n        requestType: \"182\",\n        token: \"C2MDVerificationToken\",\n        data: {\n          doctorId: doctorId,\n          browserTimeZone: `GMT${formatTime}`,\n          Ipaddress: doctorscountrycode.Ipaddress, \n          useragent: userAgent,\n          Browser: browser.name+\" \"+browser.version,\n          appname: \"C2MD Web\",\n          Os: platform ,\n          accessCountry: doctorscountrycode.Country,\n          currency: doctorscountrycode.currency,\n          todayRate: \"\",\n        },\n      });\n    \n      return response.data.data.Details;\n    };\n    "]},"metadata":{},"sourceType":"module"}