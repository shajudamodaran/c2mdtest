{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V3/c2md-web_react/src/components/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Style from \"./signup.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Assets from \"../Layout/Assets\";\nimport classNames from \"classnames\";\nimport SignupLayout from \"../Layout/SignupLayout\";\nimport { useFormik } from \"formik\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchSpeciality } from \"../../actions/SpecialityListingAction\";\nimport { signup_action } from \"../../actions/SignupAction\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\nimport CountryJson from \"../../constants/country.json\";\nimport * as Yup from \"yup\";\nimport { loginwithotp } from \"../../actions/LoginAction\";\nimport { signup_with_Google, checkUser } from \"../../actions/SignupAction\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const location = useLocation();\n  let backBtnData = location.state;\n  const re = /^[0-9\\b]+$/;\n  let history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchSpeciality());\n  }, []);\n  const speciality = useSelector(state => state.specialityList.specialityList);\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [ShowError, setShowError] = useState({\n    emailError: false,\n    mobileError: false,\n    mobileerrorMsg: \"\",\n    mailerrorMsg: \"\"\n  });\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [userType, setUerType] = useState(\"Patient\");\n  const buttonSelection = classNames(Style.signup_form_button_type, \"col-md-6\");\n  const activeButton = classNames(Style.signup_form_button_type, \"col-md-6\", Style.active);\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const nameRegExp = /^[a-zA-Z0-9]+$/;\n  const validationSchema = Yup.object().shape({\n    userType: Yup.string(),\n    fullName: Yup.string().required(\"It would be nice to address you with your full name. Please enter your full name\"),\n    email: Yup.string().email(\"There seems to be some issue with your email id. Please check \").required(\"An email id is required to keep you updated on any appointment related information\"),\n    mobileNumber: Yup.string().required(\"A mobile number is required to keep you updated on any appointment related information\").matches(phoneRegExp, \"There seems to be some issue with your mobile number. Please check\").min(4, \"Mobile number must be at least 10 characters\").max(15, \"Mobile number must be at most 15 characters\"),\n    password: Yup.string().required(\"You need to keep your account secure with a password\").min(8, \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\").matches(/[a-z]+/, \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\").matches(/[A-Z]+/, \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\").matches(/[@$!%*#?&]+/, \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\"),\n    specialityType: Yup.string().when(\"userType\", {\n      is: \"Doctor\",\n      then: Yup.string().required(\"Speciality is required.\")\n    })\n  });\n  const formik = useFormik({\n    initialValues: {\n      userType: \"Patient\",\n      fullName: \"\",\n      email: \"\",\n      specialityType: \"Ayurveda\",\n      mobileNumber: \"\",\n      password: \"\",\n      accessCountry: \"0\",\n      dial_code: \"91\",\n      countryCode: \"IN\",\n      code: {\n        name: \"India\",\n        flag: \"ðŸ‡®ðŸ‡³\",\n        code: \"IN\",\n        dial_code: \"+91\"\n      }\n    },\n    validationSchema,\n    onSubmit: values => {\n      if (!ShowError.emailError && !ShowError.mobileError) {\n        history.push({\n          pathname: \"/signup/verify\",\n          state: {\n            detail: values,\n            userType: userType,\n            page: \"signup\"\n          }\n        });\n      }\n    }\n  });\n\n  const responseGoogle = response => {\n    let Obj = response.profileObj;\n\n    if (Obj) {\n      dispatch(signup_with_Google({\n        userType: userType,\n        Data: response.profileObj,\n        history: history\n      })).then(response => {\n        if (response.info) {\n          setErrorMsg(response.info);\n        }\n      });\n    }\n  };\n\n  const handleBlurAction1 = (event, type, fieldName) => {\n    let searchKey = type == \"Mobile\" ? `%2B${formik.values.code.dial_code.substring(1)} ${formik.values.mobileNumber}` : formik.values.email;\n    formik.handleBlur(event);\n\n    if (formik.values.email !== \"\") {\n      dispatch(checkUser({\n        searchtype: type,\n        searchKey: searchKey\n      })).then(res => {\n        if ((res === null || res === void 0 ? void 0 : res.info) === \"New User\") {} else {\n          setShowError({ ...ShowError,\n            emailError: true,\n            mailerrorMsg: res === null || res === void 0 ? void 0 : res.info\n          });\n        }\n      }).catch(() => {});\n    }\n  };\n\n  const handleBlurAction2 = (event, type, fieldName) => {\n    var _formik$values, _formik$values$dial_c, _formik$values2, _formik$values2$mobil, _formik$values3;\n\n    let limit = (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : (_formik$values$dial_c = _formik$values.dial_code) === null || _formik$values$dial_c === void 0 ? void 0 : _formik$values$dial_c.length;\n    let mobNo = (_formik$values2 = formik.values) === null || _formik$values2 === void 0 ? void 0 : (_formik$values2$mobil = _formik$values2.mobileNumber) === null || _formik$values2$mobil === void 0 ? void 0 : _formik$values2$mobil.slice(limit);\n    let searchKey = type == \"Mobile\" ? `%2B${(_formik$values3 = formik.values) === null || _formik$values3 === void 0 ? void 0 : _formik$values3.dial_code} ${mobNo}` : formik.values.email;\n    formik.handleBlur(event);\n\n    if (formik.values.mobileNumber !== \"\") {\n      dispatch(checkUser({\n        searchtype: type,\n        searchKey: searchKey\n      })).then(res => {\n        if ((res === null || res === void 0 ? void 0 : res.info) === \"New User\") {} else {\n          setShowError({ ...ShowError,\n            mobileError: true,\n            mobileerrorMsg: res === null || res === void 0 ? void 0 : res.info\n          });\n        }\n      }).catch(() => {});\n    }\n  };\n\n  const handleOnChange = (value, data, event, formattedValue) => {};\n\n  return /*#__PURE__*/_jsxDEV(SignupLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: Style.signup_form_align,\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: Style.signup_header_align,\n        children: \"Create your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.signup_button_type_selection,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: `${buttonSelection}${userType == \"Doctor\" && activeButton}`,\n          style: {\n            \"margin-right\": \"2%\"\n          },\n          onClick: () => {\n            formik.resetForm();\n            setUerType(\"Doctor\");\n            formik.setFieldValue(\"userType\", \"Doctor\");\n            setShowError({\n              emailError: false,\n              mobileError: false,\n              mobileerrorMsg: \"\",\n              mailerrorMsg: \"\"\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.doctor_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), \"I'm Doctor\", userType == \"Doctor\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.signupTick,\n            alt: \"\",\n            className: Style.activeTick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          className: `${buttonSelection}${userType == \"Patient\" && activeButton}`,\n          onClick: () => {\n            formik.resetForm();\n            setUerType(\"Patient\");\n            formik.setFieldValue(\"userType\", \"Patient\");\n            setShowError({\n              emailError: false,\n              mobileError: false,\n              mobileerrorMsg: \"\",\n              mailerrorMsg: \"\"\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.patient_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), \"I'm Patient\", userType == \"Patient\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.signupTick,\n            alt: \"\",\n            className: Style.activeTick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group \",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.btn_google,\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: \"4919873164-em3btdice5bkpojvdgu0kenvgtl3or77.apps.googleusercontent.com\",\n            buttonText: \"Sign up with google\",\n            onSuccess: responseGoogle,\n            onFailure: responseGoogle,\n            cookiePolicy: \"single_host_origin\",\n            className: Style.gBtn,\n            disabled: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), errorMsg != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.errors,\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.signup_text_option,\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.signup_form_label,\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"fullName\",\n            placeholder: \"Enter Your Name\",\n            value: formik.values.fullName,\n            onChange: e => {\n              if (e.target.value === \"\" || nameRegExp.test(e.target.value)) {\n                formik.handleChange(e);\n              }\n            },\n            onBlur: formik.handleBlur,\n            autoComplete: \"off\",\n            className: Style.signup_input_field + \" \" + `${formik.touched.fullName && formik.errors.fullName ? \"is-invalid\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), formik.touched.fullName && formik.errors.fullName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.errors,\n            children: formik.errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.signup_form_label,\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            className: Style.signup_input_field,\n            placeholder: \"Enter Email Id\",\n            value: formik.values.email,\n            onChange: e => {\n              setShowError({ ...ShowError,\n                emailError: false\n              });\n              formik.handleChange(e);\n            },\n            onBlur: event => {\n              handleBlurAction1(event, \"email\", \"email\");\n            },\n            autoComplete: \"off\",\n            className: Style.signup_input_field + \" \" + `${formik.touched.email && formik.errors.email ? \"is-invalid\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), ShowError.emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.errors,\n            children: ShowError.mailerrorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.errors,\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.signup_form_label,\n          children: \"Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mob-flag-bx-wrp\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mob-flag-wrp\" + \" \" + `${Style.siginup_mobileInput}${\" \"}${formik.touched.mobileNumber && formik.errors.mobileNumber ? \"is-invalid\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n              country: \"in\",\n              value: formik.values.mobile,\n              name: \"mobile\",\n              autoFormat: false,\n              countryCodeEditable: false,\n              onBlur: event => {\n                // formik.handleBlur(event);\n                handleBlurAction2(event, \"Mobile\", \"mobileNumber\");\n              },\n              onChange: (value, data, event, formattedValue) => {\n                var _data$countryCode;\n\n                formik.setFieldValue(\"mobileNumber\", value);\n                formik.setFieldValue(\"dial_code\", data.dialCode);\n                formik.setFieldValue(\"countryCode\", (_data$countryCode = data.countryCode) === null || _data$countryCode === void 0 ? void 0 : _data$countryCode.toUpperCase());\n                setShowError({ ...ShowError,\n                  mobileError: false,\n                  mobileerrorMsg: \"\"\n                });\n                handleOnChange(value, data, event, formattedValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), ShowError.mobileError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Style.errors,\n            children: ShowError.mobileerrorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), formik.touched.mobileNumber && formik.errors.mobileNumber ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.errors,\n            children: formik.errors.mobileNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.signup_form_label,\n          children: \"Create Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.pswrd_input,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.signup_input_field + \" \" + `${formik.touched.password && formik.errors.password ? \"is-invalid\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: passwordShown ? \"text\" : \"password\",\n              name: \"password\",\n              placeholder: \"Enter Password\",\n              value: formik.values.password,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              autoComplete: \"off\",\n              className: Style.signupPasswordInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: Style.signupPasswordImg,\n              src: Assets.iconpassword,\n              alt: \"\",\n              onClick: togglePasswordVisiblity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.errors,\n            children: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), userType === \"Doctor\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.signup_form_label,\n          children: \"Speciality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"specialityType\",\n            value: formik.values.specialityType,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: Style.signup_input_field + \" \" + `${formik.touched.specialityType && formik.errors.specialityType ? \"is-invalid\" : \"\"}`,\n            children: speciality && speciality.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.specialityName,\n                label: item.specialityName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), formik.touched.specialityType && formik.errors.specialityType ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.errors,\n            children: formik.errors.specialityType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button // onClick={onSubmit}\n        , {\n          variant: \"outline-secondary\",\n          className: Style.signup_continue_btn,\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.signup_checkbox_text,\n          children: [\" \", \"I agree to our\", /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/termsofUse/terms\",\n              state: \"terms\"\n            },\n            target: \"_blank\",\n            children: \"Terms of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), \"and\", /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/termsofUse/privacy\",\n              state: \"privacy\"\n            },\n            target: \"_blank\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.signup_checkbox_text_signin,\n          children: [\"Already Signed up?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            children: \" Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"riOuKQbcJYpjgRw3Tnx2bIDLNTc=\", false, function () {\n  return [useLocation, useHistory, useDispatch, useSelector, useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V3/c2md-web_react/src/components/Signup/index.js"],"names":["React","useEffect","useState","Style","Button","Assets","classNames","SignupLayout","useFormik","GoogleLogin","useHistory","useDispatch","useSelector","fetchSpeciality","signup_action","NavLink","Link","useLocation","CountryJson","Yup","loginwithotp","signup_with_Google","checkUser","PhoneInput","Signup","location","backBtnData","state","re","history","dispatch","speciality","specialityList","passwordShown","setPasswordShown","ShowError","setShowError","emailError","mobileError","mobileerrorMsg","mailerrorMsg","togglePasswordVisiblity","errorMsg","setErrorMsg","userType","setUerType","buttonSelection","signup_form_button_type","activeButton","active","phoneRegExp","nameRegExp","validationSchema","object","shape","string","fullName","required","email","mobileNumber","matches","min","max","password","specialityType","when","is","then","formik","initialValues","accessCountry","dial_code","countryCode","code","name","flag","onSubmit","values","push","pathname","detail","page","responseGoogle","response","Obj","profileObj","Data","info","handleBlurAction1","event","type","fieldName","searchKey","substring","handleBlur","searchtype","res","catch","handleBlurAction2","limit","length","mobNo","slice","handleOnChange","value","data","formattedValue","signup_form_align","handleSubmit","signup_header_align","signup_button_type_selection","resetForm","setFieldValue","doctor_icon","signupTick","activeTick","patient_icon","btn_google","gBtn","errors","signup_text_option","form_group","signup_form_label","e","target","test","handleChange","signup_input_field","touched","siginup_mobileInput","mobile","dialCode","toUpperCase","pswrd_input","signupPasswordInput","signupPasswordImg","iconpassword","map","item","index","specialityName","signup_continue_btn","signup_checkbox_text","signup_checkbox_text_signin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Style from \"./signup.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Assets from \"../Layout/Assets\";\nimport classNames from \"classnames\";\nimport SignupLayout from \"../Layout/SignupLayout\";\nimport { useFormik } from \"formik\";\n\nimport { GoogleLogin } from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchSpeciality } from \"../../actions/SpecialityListingAction\";\nimport { signup_action } from \"../../actions/SignupAction\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\nimport CountryJson from \"../../constants/country.json\";\nimport * as Yup from \"yup\";\nimport { loginwithotp } from \"../../actions/LoginAction\";\nimport { signup_with_Google, checkUser } from \"../../actions/SignupAction\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nfunction Signup() {\n  const location = useLocation();\n\n  let backBtnData = location.state;\n  const re = /^[0-9\\b]+$/;\n  let history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchSpeciality());\n  }, []);\n  const speciality = useSelector(\n    (state) => state.specialityList.specialityList\n  );\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const [ShowError, setShowError] = useState({\n    emailError: false,\n    mobileError: false,\n    mobileerrorMsg: \"\",\n    mailerrorMsg: \"\",\n  });\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [userType, setUerType] = useState(\"Patient\");\n  const buttonSelection = classNames(Style.signup_form_button_type, \"col-md-6\");\n  const activeButton = classNames(\n    Style.signup_form_button_type,\n    \"col-md-6\",\n    Style.active\n  );\n  const phoneRegExp =\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const nameRegExp = /^[a-zA-Z0-9]+$/;\n  const validationSchema = Yup.object().shape({\n    userType: Yup.string(),\n    fullName: Yup.string().required(\n      \"It would be nice to address you with your full name. Please enter your full name\"\n    ),\n    email: Yup.string()\n      .email(\"There seems to be some issue with your email id. Please check \")\n      .required(\n        \"An email id is required to keep you updated on any appointment related information\"\n      ),\n    mobileNumber: Yup.string()\n      .required(\n        \"A mobile number is required to keep you updated on any appointment related information\"\n      )\n      .matches(\n        phoneRegExp,\n        \"There seems to be some issue with your mobile number. Please check\"\n      )\n      .min(4, \"Mobile number must be at least 10 characters\")\n      .max(15, \"Mobile number must be at most 15 characters\"),\n    password: Yup.string()\n      .required(\"You need to keep your account secure with a password\")\n      .min(\n        8,\n        \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\"\n      )\n      .matches(\n        /[a-z]+/,\n        \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\"\n      )\n      .matches(\n        /[A-Z]+/,\n        \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\"\n      )\n      .matches(\n        /[@$!%*#?&]+/,\n        \"A secure password consists of minimum 8 characters including 1 special character, 1 CAPITAL letter and 1 small letter\"\n      ),\n    specialityType: Yup.string().when(\"userType\", {\n      is: \"Doctor\",\n      then: Yup.string().required(\"Speciality is required.\"),\n    }),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      userType: \"Patient\",\n      fullName: \"\",\n      email: \"\",\n      specialityType: \"Ayurveda\",\n      mobileNumber: \"\",\n      password: \"\",\n      accessCountry: \"0\",\n      dial_code: \"91\",\n      countryCode: \"IN\",\n      code: { name: \"India\", flag: \"ðŸ‡®ðŸ‡³\", code: \"IN\", dial_code: \"+91\" },\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      if (!ShowError.emailError && !ShowError.mobileError) {\n        history.push({\n          pathname: \"/signup/verify\",\n          state: { detail: values, userType: userType, page: \"signup\" },\n        });\n      }\n    },\n  });\n  const responseGoogle = (response) => {\n    let Obj = response.profileObj;\n\n    if (Obj) {\n      dispatch(\n        signup_with_Google({\n          userType: userType,\n          Data: response.profileObj,\n          history: history,\n        })\n      ).then((response) => {\n        if (response.info) {\n          setErrorMsg(response.info);\n        }\n      });\n    }\n  };\n  const handleBlurAction1 = (event, type, fieldName) => {\n    let searchKey =\n      type == \"Mobile\"\n        ? `%2B${formik.values.code.dial_code.substring(1)} ${\n            formik.values.mobileNumber\n          }`\n        : formik.values.email;\n    formik.handleBlur(event);\n    if (formik.values.email !== \"\") {\n      dispatch(\n        checkUser({\n          searchtype: type,\n          searchKey: searchKey,\n        })\n      )\n        .then((res) => {\n          if (res?.info === \"New User\") {\n          } else {\n            setShowError({\n              ...ShowError,\n              emailError: true,\n\n              mailerrorMsg: res?.info,\n            });\n          }\n        })\n        .catch(() => {});\n    }\n  };\n  const handleBlurAction2 = (event, type, fieldName) => {\n    let limit = formik.values?.dial_code?.length;\n    let mobNo = formik.values?.mobileNumber?.slice(limit);\n    let searchKey =\n      type == \"Mobile\"\n        ? `%2B${formik.values?.dial_code} ${mobNo}`\n        : formik.values.email;\n\n    formik.handleBlur(event);\n    if (formik.values.mobileNumber !== \"\") {\n      dispatch(\n        checkUser({\n          searchtype: type,\n          searchKey: searchKey,\n        })\n      )\n        .then((res) => {\n          if (res?.info === \"New User\") {\n          } else {\n            setShowError({\n              ...ShowError,\n\n              mobileError: true,\n              mobileerrorMsg: res?.info,\n            });\n          }\n        })\n        .catch(() => {});\n    }\n  };\n  const handleOnChange = (value, data, event, formattedValue) => {};\n  return (\n    <SignupLayout>\n      <form className={Style.signup_form_align} onSubmit={formik.handleSubmit}>\n        <h2 className={Style.signup_header_align}>Create your account</h2>\n        <div className={Style.signup_button_type_selection}>\n          <Button\n            variant=\"outline-secondary\"\n            className={`${buttonSelection}${\n              userType == \"Doctor\" && activeButton\n            }`}\n            style={{ \"margin-right\": \"2%\" }}\n            onClick={() => {\n              formik.resetForm();\n              setUerType(\"Doctor\");\n              formik.setFieldValue(\"userType\", \"Doctor\");\n              setShowError({\n                emailError: false,\n                mobileError: false,\n                mobileerrorMsg: \"\",\n                mailerrorMsg: \"\",\n              });\n            }}\n          >\n            <img src={Assets.doctor_icon} />\n            I'm Doctor\n            {userType == \"Doctor\" && (\n              <img\n                src={Assets.signupTick}\n                alt=\"\"\n                className={Style.activeTick}\n              />\n            )}\n          </Button>\n          <Button\n            variant=\"outline-secondary\"\n            className={`${buttonSelection}${\n              userType == \"Patient\" && activeButton\n            }`}\n            onClick={() => {\n              formik.resetForm();\n              setUerType(\"Patient\");\n              formik.setFieldValue(\"userType\", \"Patient\");\n              setShowError({\n                emailError: false,\n                mobileError: false,\n                mobileerrorMsg: \"\",\n                mailerrorMsg: \"\",\n              });\n            }}\n          >\n            <img src={Assets.patient_icon} />\n            I'm Patient\n            {userType == \"Patient\" && (\n              <img\n                src={Assets.signupTick}\n                alt=\"\"\n                className={Style.activeTick}\n              />\n            )}\n          </Button>\n        </div>\n        <div className=\"form-group \">\n          <p></p>\n          {/* <Button variant=\"outline-secondary\" className={Style.signup_google_btn} type=\"submit\">\n        Sign up with google\n      </Button> */}\n          <div className={Style.btn_google}>\n            <GoogleLogin\n              clientId=\"4919873164-em3btdice5bkpojvdgu0kenvgtl3or77.apps.googleusercontent.com\"\n              buttonText=\"Sign up with google\"\n              onSuccess={responseGoogle}\n              onFailure={responseGoogle}\n              cookiePolicy={\"single_host_origin\"}\n              className={Style.gBtn}\n              disabled={false}\n            />\n          </div>\n        </div>\n        {errorMsg != \"\" && <p className={Style.errors}>{errorMsg}</p>}\n        <div>\n          <p></p>\n          <p className={Style.signup_text_option}>Or</p>\n        </div>\n        <div className={Style.form_group}>\n          <label className={Style.signup_form_label}>Full Name</label>\n          <br />\n\n          <p>\n            <input\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"Enter Your Name\"\n              value={formik.values.fullName}\n              onChange={(e) => {\n                if (e.target.value === \"\" || nameRegExp.test(e.target.value)) {\n                  formik.handleChange(e);\n                }\n              }}\n              onBlur={formik.handleBlur}\n              autoComplete=\"off\"\n              className={\n                Style.signup_input_field +\n                \" \" +\n                `${\n                  formik.touched.fullName && formik.errors.fullName\n                    ? \"is-invalid\"\n                    : \"\"\n                }`\n              }\n            />\n            {formik.touched.fullName && formik.errors.fullName ? (\n              <div className={Style.errors}>{formik.errors.fullName}</div>\n            ) : null}\n          </p>\n        </div>\n        <div className={Style.form_group}>\n          <label className={Style.signup_form_label}>Email Address</label>\n          <br />\n\n          <p>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className={Style.signup_input_field}\n              placeholder=\"Enter Email Id\"\n              value={formik.values.email}\n              onChange={(e) => {\n                setShowError({\n                  ...ShowError,\n                  emailError: false,\n                });\n\n                formik.handleChange(e);\n              }}\n              onBlur={(event) => {\n                handleBlurAction1(event, \"email\", \"email\");\n              }}\n              autoComplete=\"off\"\n              className={\n                Style.signup_input_field +\n                \" \" +\n                `${\n                  formik.touched.email && formik.errors.email\n                    ? \"is-invalid\"\n                    : \"\"\n                }`\n              }\n            />\n            {ShowError.emailError && (\n              <p className={Style.errors}>{ShowError.mailerrorMsg}</p>\n            )}\n            {formik.touched.email && formik.errors.email ? (\n              <div className={Style.errors}>{formik.errors.email}</div>\n            ) : null}\n          </p>\n        </div>\n        <div className={Style.form_group}>\n          <label className={Style.signup_form_label}>Mobile Number</label>\n          <br />\n          <div className=\"mob-flag-bx-wrp\">\n            <div\n              className={\n                \"mob-flag-wrp\" +\n                \" \" +\n                `${Style.siginup_mobileInput}${\" \"}${\n                  formik.touched.mobileNumber && formik.errors.mobileNumber\n                    ? \"is-invalid\"\n                    : \"\"\n                }`\n              }\n            >\n              {/* <select\n                className={Style.signup_country_code}\n                value={formik.values.accessCountry}\n                name=\"accessCountry\"\n                onChange={(e) => {\n                  formik.setFieldValue(\"accessCountry\", e.target.value);\n                  formik.setFieldValue(\"code\", CountryJson[e.target.value]);\n                }}\n              >\n                {CountryJson.map((item, index) => {\n                  return (\n                    <option value={index}>\n                      {item.flag} {item.dial_code}\n                    </option>\n                  );\n                })}\n              </select> */}\n              <PhoneInput\n                country={\"in\"}\n                value={formik.values.mobile}\n                name=\"mobile\"\n                autoFormat={false}\n                countryCodeEditable={false}\n                onBlur={(event) => {\n                  // formik.handleBlur(event);\n                  handleBlurAction2(event, \"Mobile\", \"mobileNumber\");\n                }}\n                onChange={(value, data, event, formattedValue) => {\n                  formik.setFieldValue(\"mobileNumber\", value);\n                  formik.setFieldValue(\"dial_code\", data.dialCode);\n                  formik.setFieldValue(\n                    \"countryCode\",\n                    data.countryCode?.toUpperCase()\n                  );\n                  setShowError({\n                    ...ShowError,\n\n                    mobileError: false,\n                    mobileerrorMsg: \"\",\n                  });\n                  handleOnChange(value, data, event, formattedValue);\n                }}\n              />\n              {/* <input\n                type=\"text\"\n                name=\"mobileNumber\"\n                className={Style.signup_mobile_input_field}\n                placeholder=\"Enter Mobile Number\"\n                value={formik.values.mobileNumber}\n                onChange={(e) => {\n                  if (e.target.value === \"\" || re.test(e.target.value)) {\n                    setShowError({\n                      ...ShowError,\n\n                      mobileError: false,\n                      mobileerrorMsg: \"\",\n                    });\n                    formik.handleChange(e);\n                  }\n                }}\n                onBlur={(event) => {\n                  handleBlurAction2(event, \"Mobile\", \"mobileNumber\");\n                }}\n                autoComplete=\"off\"\n              /> */}\n            </div>\n            {ShowError.mobileError && (\n              <p className={Style.errors}>{ShowError.mobileerrorMsg}</p>\n            )}\n            {formik.touched.mobileNumber && formik.errors.mobileNumber ? (\n              <div className={Style.errors}>{formik.errors.mobileNumber}</div>\n            ) : null}\n          </div>\n        </div>\n        <div className={Style.form_group}>\n          <label className={Style.signup_form_label}>Create Password</label>\n          <br />\n\n          <p className={Style.pswrd_input}>\n            <div\n              className={\n                Style.signup_input_field +\n                \" \" +\n                `${\n                  formik.touched.password && formik.errors.password\n                    ? \"is-invalid\"\n                    : \"\"\n                }`\n              }\n            >\n              <input\n                type={passwordShown ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Enter Password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                autoComplete=\"off\"\n                className={Style.signupPasswordInput}\n              />\n              <img\n                className={Style.signupPasswordImg}\n                src={Assets.iconpassword}\n                alt=\"\"\n                onClick={togglePasswordVisiblity}\n              />\n            </div>\n            {formik.touched.password && formik.errors.password ? (\n              <div className={Style.errors}>{formik.errors.password}</div>\n            ) : null}\n          </p>\n        </div>\n        {userType === \"Doctor\" && (\n          <div className={Style.form_group}>\n            <label className={Style.signup_form_label}>Speciality</label>\n            <br />\n\n            <p>\n              <select\n                name=\"specialityType\"\n                value={formik.values.specialityType}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  Style.signup_input_field +\n                  \" \" +\n                  `${\n                    formik.touched.specialityType &&\n                    formik.errors.specialityType\n                      ? \"is-invalid\"\n                      : \"\"\n                  }`\n                }\n              >\n                {speciality &&\n                  speciality.map((item, index) => {\n                    return (\n                      <option\n                        value={item.specialityName}\n                        label={item.specialityName}\n                      />\n                    );\n                  })}\n              </select>\n              {formik.touched.specialityType && formik.errors.specialityType ? (\n                <div className={Style.errors}>\n                  {formik.errors.specialityType}\n                </div>\n              ) : null}\n            </p>\n          </div>\n        )}\n        <div className=\"col-md-12\">\n          <br />\n          <Button\n            // onClick={onSubmit}\n            variant=\"outline-secondary\"\n            className={Style.signup_continue_btn}\n            type=\"submit\"\n          >\n            Continue\n          </Button>\n        </div>\n        <div>\n          <p></p>\n          <p className={Style.signup_checkbox_text}>\n            {\" \"}\n            I agree to our\n            {/* <a href=\"\">Terms of service</a> */}\n            <Link\n              to={{\n                pathname: \"/termsofUse/terms\",\n                state: \"terms\",\n              }}\n              target=\"_blank\"\n            >\n              Terms of service\n            </Link>\n            and\n            {/* <a href=\"/\">Privacy Policy</a> */}\n            <Link\n              to={{\n                pathname: \"/termsofUse/privacy\",\n                state: \"privacy\",\n              }}\n              target=\"_blank\"\n            >\n              Privacy Policy\n            </Link>\n          </p>\n          <p className={Style.signup_checkbox_text_signin}>\n            Already Signed up?\n            <Link to=\"/signin\"> Sign in</Link>\n          </p>\n        </div>\n      </form>\n    </SignupLayout>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}