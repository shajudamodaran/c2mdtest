{"ast":null,"code":"var _formatTime;\n\nimport moment from \"moment\";\nimport loginedApi from \"../apis\";\nimport { check_consultation } from \"./MicrositeAction\";\nimport { DASHBOARD_DATA_PATIENT, FETCH_COUNTRYDATA } from \"./type\";\n\nconst publicIp = require(\"public-ip\");\n\nlet IP = publicIp.v4();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = (_formatTime = formatTime) === null || _formatTime === void 0 ? void 0 : _formatTime.slice(1);\n\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nexport const fetch_dashboardData = (patientId, email, phone) => async dispatch => {\n  let today = moment(new Date()).format(\"DD-MMM-YYYY\");\n  let data = {\n    patientId: patientId,\n    patientEmail: email,\n    patientMobile: phone,\n    browserTimeZone: `GMT${formatTime}`,\n    dayOfAppointment: moment(new Date()).format('DD-MMM-yyy'),\n    appointmentNavigation: \"start\",\n    currency: \"INR\",\n    accessCountry: \"IN\",\n    todayRate: \"74.45000\",\n    Ipaddress: IP,\n    useragent: userAgent,\n    Browser: \"Chrome-95.0.4638.69\",\n    Os: platform\n  };\n  const response = await loginedApi.post(\"profile\", {\n    requestType: \"51\",\n    token: \"C2MDVerificationToken\",\n    data\n  });\n\n  if (response.status === 200) {\n    dispatch({\n      type: DASHBOARD_DATA_PATIENT,\n      payload: response.data.data.data\n    });\n  } // return response.data.data.Details;\n\n};\nexport const uploadReports = ({\n  formData,\n  userData,\n  dashboardData\n}) => async dispatch => {\n  console.log({\n    formData,\n    userData,\n    dashboardData\n  });\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  const response = await loginedApi.post(\"updatereports\", {\n    body: formData\n  }, config);\n  console.log(\"File upload result==>\", response);\n\n  if (response.status === 200) {\n    dispatch(check_consultation(userData, dashboardData));\n  }\n};\nexport const getCountryData = () => async dispatch => {\n  const res = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      \"browserTimeZone\": \"GMT%2B05:30\"\n    },\n    \"requestType\": 1058\n  });\n\n  if (res.status === 200) {\n    dispatch({\n      type: FETCH_COUNTRYDATA,\n      payload: res.data.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V6/c2md-web_react/src/actions/DashboardActions.js"],"names":["moment","loginedApi","check_consultation","DASHBOARD_DATA_PATIENT","FETCH_COUNTRYDATA","publicIp","require","IP","v4","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","result","slice","search","fetch_dashboardData","patientId","email","phone","dispatch","today","format","data","patientEmail","patientMobile","browserTimeZone","dayOfAppointment","appointmentNavigation","currency","accessCountry","todayRate","Ipaddress","useragent","Browser","Os","response","post","requestType","token","status","type","payload","uploadReports","formData","userData","dashboardData","console","log","config","headers","body","getCountryData","res"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport loginedApi from \"../apis\";\nimport { check_consultation } from \"./MicrositeAction\";\nimport { DASHBOARD_DATA_PATIENT, FETCH_COUNTRYDATA } from \"./type\";\n\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\n\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\")\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\")\n}//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\n\nexport const fetch_dashboardData = (patientId, email, phone) => async (dispatch) => {\n\n  let today = moment(new Date()).format(\"DD-MMM-YYYY\")\n\n\n\n\n  let data = {\n    patientId: patientId,\n    patientEmail: email,\n    patientMobile: phone,\n    browserTimeZone: `GMT${formatTime}`,\n    dayOfAppointment: moment(new Date).format('DD-MMM-yyy'),\n    appointmentNavigation: \"start\",\n    currency: \"INR\",\n    accessCountry: \"IN\",\n    todayRate: \"74.45000\",\n    Ipaddress: IP, useragent: userAgent,\n    Browser: \"Chrome-95.0.4638.69\",\n    Os: platform\n  }\n\n\n  const response = await loginedApi.post(\"profile\", {\n    requestType: \"51\",\n    token: \"C2MDVerificationToken\",\n    data\n  });\n\n  if (response.status === 200) {\n\n    dispatch({ type: DASHBOARD_DATA_PATIENT, payload: response.data.data.data });\n  }\n\n\n  // return response.data.data.Details;\n};\n\n\nexport const uploadReports = ({ formData, userData, dashboardData }) => async (dispatch) => {\n\n  console.log({ formData, userData, dashboardData });\n\n  const config = {\n    headers: { 'content-type': 'multipart/form-data' }\n  }\n\n\n  const response = await loginedApi.post(\"updatereports\", {\n    body: formData\n  }, config);\n\n  console.log(\"File upload result==>\", response);\n\n  if (response.status === 200) {\n\n    dispatch(\n      check_consultation(userData, dashboardData)\n    );\n  }\n\n\n}\n\nexport const getCountryData = () => async (dispatch) => {\n \n \n\n  const res = await loginedApi.post(\"getcountrycode\", \n  {\n    \"token\": \"token\",\n    \"version\":\"2.0\",\n    \"data\": {\"browserTimeZone\":\"GMT%2B05:30\"},\n    \"requestType\": 1058\n});\n\n\n  if (res.status === 200) {\n\n\n    dispatch({ type: FETCH_COUNTRYDATA, payload: res.data.data });\n  }\n\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}