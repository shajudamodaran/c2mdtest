{"ast":null,"code":"import { APPOINTMENT_SLOT, APPOINTMENT_MORE_SLOT } from \"./type\";\nimport loginedApi from \"../apis\";\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime === null || formatTime === void 0 ? void 0 : formatTime.slice(1);\nexport const fetch_appointmentSlot = ({\n  isStart,\n  isNext,\n  date,\n  typeofconsultation,\n  doctorId\n}) => async dispatch => {\n  const response = await loginedApi.post(\"doctortimeslots\", {\n    requestType: \"175\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      timeSlotCriteria: {\n        doctorId: doctorId,\n        date: date,\n        isStart: isStart,\n        isNext: isNext,\n        typeofconsultation: typeofconsultation\n      },\n      // browserTimeZone: \"GMT%2B05:30\",\n      browserTimeZone: `GMT%2B${result}`,\n      todayRate: \"73.49680\",\n      actualRate: \"73.49680\",\n      currency: \"INR\",\n      accessCountry: \"IN\"\n    }\n  });\n\n  if (response.status === 200) {\n    dispatch({\n      type: APPOINTMENT_SLOT,\n      payload: response.data.data\n    });\n  }\n};\nexport const fetch_more_appointmentSlot = ({\n  isStart,\n  isNext,\n  date,\n  typeofconsultation,\n  doctorId\n}) => async dispatch => {\n  const response = await loginedApi.post(\"doctortimeslots\", {\n    requestType: \"175\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      timeSlotCriteria: {\n        doctorId: doctorId,\n        date: date,\n        isStart: isStart,\n        isNext: isNext,\n        typeofconsultation: typeofconsultation\n      },\n      browserTimeZone: `GMT%2B${result}`,\n      todayRate: \"73.49680\",\n      actualRate: \"73.49680\",\n      currency: \"INR\",\n      accessCountry: \"IN\"\n    }\n  });\n\n  if (response.status === 200) {\n    dispatch({\n      type: APPOINTMENT_MORE_SLOT,\n      payload: response.data.data\n    });\n  }\n};\nexport const fetch_appointmentTypes = doctorId => async dispatch => {\n  const response = await loginedApi.post(\"gettypeofconsultation\", {\n    requestType: \"182\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      browserTimeZone: \"GMT%2B05:30\",\n      currency: \"INR\",\n      accessCountry: \"IN\",\n      todayRate: \"\"\n    }\n  });\n  return response.data.data.Details;\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V2/connect2mydoctor-phase1/connect2mydoctor-phase1/src/actions/AppointmentSlotAction.js"],"names":["APPOINTMENT_SLOT","APPOINTMENT_MORE_SLOT","loginedApi","off","Date","toString","replace","formatTime","split","result","slice","fetch_appointmentSlot","isStart","isNext","date","typeofconsultation","doctorId","dispatch","response","post","requestType","token","data","timeSlotCriteria","browserTimeZone","todayRate","actualRate","currency","accessCountry","status","type","payload","fetch_more_appointmentSlot","fetch_appointmentTypes","Details"],"mappings":"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","sourcesContent":["import { APPOINTMENT_SLOT, APPOINTMENT_MORE_SLOT } from \"./type\";\nimport loginedApi from \"../apis\";\n\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\n\nexport const fetch_appointmentSlot =\n  ({ isStart, isNext, date, typeofconsultation, doctorId }) =>\n  async (dispatch) => {\n    const response = await loginedApi.post(\"doctortimeslots\", {\n      requestType: \"175\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        timeSlotCriteria: {\n          doctorId: doctorId,\n          date: date,\n          isStart: isStart,\n          isNext: isNext,\n          typeofconsultation: typeofconsultation,\n        },\n        // browserTimeZone: \"GMT%2B05:30\",\n        browserTimeZone: `GMT%2B${result}`,\n        todayRate: \"73.49680\",\n        actualRate: \"73.49680\",\n        currency: \"INR\",\n        accessCountry: \"IN\",\n      },\n    });\n\n    if (response.status === 200) {\n      dispatch({ type: APPOINTMENT_SLOT, payload: response.data.data });\n    }\n  };\n\nexport const fetch_more_appointmentSlot =\n  ({ isStart, isNext, date, typeofconsultation, doctorId }) =>\n  async (dispatch) => {\n    const response = await loginedApi.post(\"doctortimeslots\", {\n      requestType: \"175\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        timeSlotCriteria: {\n          doctorId: doctorId,\n          date: date,\n          isStart: isStart,\n          isNext: isNext,\n          typeofconsultation: typeofconsultation,\n        },\n        browserTimeZone: `GMT%2B${result}`,\n        todayRate: \"73.49680\",\n        actualRate: \"73.49680\",\n        currency: \"INR\",\n        accessCountry: \"IN\",\n      },\n    });\n    if (response.status === 200) {\n      dispatch({ type: APPOINTMENT_MORE_SLOT, payload: response.data.data });\n    }\n  };\n\nexport const fetch_appointmentTypes = (doctorId) => async (dispatch) => {\n  const response = await loginedApi.post(\"gettypeofconsultation\", {\n    requestType: \"182\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      doctorId: doctorId,\n      browserTimeZone: \"GMT%2B05:30\",\n      currency: \"INR\",\n      accessCountry: \"IN\",\n      todayRate: \"\",\n    },\n  });\n\n  return response.data.data.Details;\n};\n"]},"metadata":{},"sourceType":"module"}