{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V6/c2md-web_react/src/components/DoctorprofileSchedule/Schedule/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"react-multi-carousel\";\nimport { Button, Form, Dropdown } from \"react-bootstrap\";\nimport AppointmentOnRequest from \"../AppointmentOnRequest\";\nimport { fetch_appointmentSlot, fetch_appointmentTypes } from \"../../../actions/AppointmentSlotAction\";\nimport Assets from \"../../Layout/Assets\";\nimport { reset_booking, Store_formData } from \"../../../actions/BookAppoinmentAction\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Style from \"./Schedule.module.scss\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Schedule({\n  responsive,\n  Typeofappointment,\n  doctorId,\n  DayCounter\n}) {\n  _s();\n\n  var _ApponmtType$split, _ApponmtType$split2, _ApponmtType$split3;\n\n  const moment = require(\"moment\");\n\n  const [ApponmtType, SetAppmtType] = useState(\"\");\n  const [ShowRequest, setRequest] = useState(false);\n  const [ApponmtList, setApponmtList] = useState([]);\n  const [SelectedType, setSelectedType] = useState(\"\");\n  const [DoctorFee, setDoctorFee] = useState(1);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [toastOpen, setToastOpen] = useState(false);\n  const appoinment_form = useSelector(state => state.bookAppoinment.appoinment_form);\n  useEffect(() => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    dispatch(reset_booking());\n    dispatch(fetch_appointmentTypes(doctorId)).then(res => {\n      setApponmtList(res);\n      setSelectedType(res[0].Type);\n      setRequest(res[0].availableType == \"On Request\");\n      Onload(dateFrom, res[0].Type);\n      SetAppmtType(`${res[0].Type} (${res[0].Amount} for upto ${res[0].Duration} Min)`);\n      setDoctorFee(res[0].Amount);\n      dispatch(Store_formData({ ...appoinment_form,\n        typeofconsultation: res[0].Type,\n        doctorfees: res[0].doctorfees,\n        gstamount: res[0].Gst,\n        fees: res[0].Amount,\n        duration: res[0].Duration,\n        c2mdfees: res[0].c2mdFees,\n        basicFees: res[0].Amount\n      }));\n    });\n  }, []);\n\n  const Onload = (dateFrom, type) => {\n    dispatch(fetch_appointmentSlot({\n      isStart: true,\n      isNext: false,\n      date: dateFrom,\n      doctorId: doctorId,\n      typeofconsultation: type\n    }));\n  };\n\n  const Login = useSelector(state => state.login);\n  const TimeSlot = useSelector(state => state.doctorDetail.timeSlot);\n  const currentMonth = TimeSlot && TimeSlot.length > 0 && TimeSlot[0];\n\n  const handleChange = event => {\n    SetAppmtType(event.target.value);\n  };\n\n  const isCurrentDate = (timeSlot, time) => {\n    let givenDate = `${timeSlot.year}-${timeSlot.month + 1}-${timeSlot.dates} ${time}`;\n    let today = moment().format(\"YYYY-MM-DD hh:mm A\");\n    return moment(givenDate).isBefore(today);\n  };\n\n  const ButtonGroup = ({\n    next,\n    previous,\n    goToSlide,\n    ...rest\n  }) => {\n    var _TimeSlot$, _TimeSlot$2, _TimeSlot$3;\n\n    const {\n      carouselState: {\n        currentSlide\n      }\n    } = rest;\n\n    const Nextslide = () => {\n      // goToSlide(currentSlide + 7);\n      let day = `${TimeSlot[DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.next].dates} ${TimeSlot[DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.next].month + 1} ${TimeSlot[DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.next].year}`;\n      dispatch(fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: day,\n        doctorId: doctorId,\n        typeofconsultation: SelectedType\n      }));\n    };\n\n    const onBack = () => {\n      currentSlide !== 0 && goToSlide(currentSlide - (DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.back));\n      let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${TimeSlot[0].dates} `;\n      let dateFrom = moment(CurrentDay).subtract(DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.back, \"d\").format(\"DD MM YYYY\");\n      let today = moment().format(\"YYYY-MM-DD\");\n      let check = moment(today).isAfter(CurrentDay);\n      let CheckDay = moment(CurrentDay).isSame(moment().format(\"YYYY-M-DD\"));\n\n      if (!CheckDay) {\n        if (!check) {\n          dispatch(fetch_appointmentSlot({\n            isStart: true,\n            isNext: true,\n            date: dateFrom,\n            doctorId: doctorId,\n            typeofconsultation: SelectedType\n          }));\n        } else {}\n      } else {}\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-button-group\",\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            float: \"left\",\n            borderColor: \"#F5F6F8\"\n          },\n          variant: \"outline-primary\",\n          className: currentSlide === 0 ? \"disable\" : \"\",\n          onClick: onBack,\n          children: !moment(`${(_TimeSlot$ = TimeSlot[0]) === null || _TimeSlot$ === void 0 ? void 0 : _TimeSlot$.year}-${((_TimeSlot$2 = TimeSlot[0]) === null || _TimeSlot$2 === void 0 ? void 0 : _TimeSlot$2.month) + 1}-${(_TimeSlot$3 = TimeSlot[0]) === null || _TimeSlot$3 === void 0 ? void 0 : _TimeSlot$3.dates}`).isSame(moment().format(\"YYYY-M-DD\")) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.rightArrow,\n            alt: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\" // onClick={() => next()}\n          ,\n          onClick: Nextslide,\n          style: {\n            float: \"right\",\n            borderColor: \"#F5F6F8\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.rightArrow,\n            alt: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  };\n\n  const bookingApp = (time, date, bookingType, bookingFrom) => {\n    var _Login$user;\n\n    if ((Login === null || Login === void 0 ? void 0 : (_Login$user = Login.user) === null || _Login$user === void 0 ? void 0 : _Login$user.userType) === \"Doctor\") {\n      if (!toastOpen) {\n        toast.error(\"Sorry,This booking facility is allowed only for patients\", {\n          position: toast.POSITION.TOP_CENTER,\n          hideProgressBar: true,\n          onOpen: props => setToastOpen(true),\n          onClose: props => setToastOpen(false)\n        });\n      }\n    } else {\n      if (DoctorFee == 0) {\n        if (!toastOpen) {\n          toast.error(\"Please contact our support team \", {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            onOpen: props => setToastOpen(true),\n            onClose: props => setToastOpen(false)\n          });\n        }\n      } else {\n        let CurrentDay = `${date.year}-${date.month + 1}-${date.dates} `;\n        let DateVariable = moment(CurrentDay, \"YYYY-MM-DD\").format(\"DD-MMMM-YYYY\");\n        let dt = moment(time, [\"h:mm A\"]).format(\"HH:mm\");\n        let toTime = moment(time, [\"h:mm A\"]).add(15, \"minutes\").format(\"HH:mm\");\n        let dateTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${dt}`;\n        let ToTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${toTime}`;\n        let format2 = moment(dateTimeFormat, \"YYYY-MM-DD HH:mm\").format(\"YYYY-MM-DD HH:mm\");\n        localStorage.setItem(\"appinmentTime\", JSON.stringify({\n          appoinmentFromTime: format2,\n          appoinmentToTime: ToTimeFormat\n        }));\n        dispatch(Store_formData({ ...appoinment_form,\n          appointmentDate: DateVariable,\n          appointmentTime: time,\n          bookingFrom: bookingFrom,\n          bookingType: bookingType,\n          appoinmentFromTime: format2,\n          appoinmentToTime: ToTimeFormat,\n          doctorId: doctorId,\n          routing: true\n        }));\n\n        if (Login.login) {\n          history.push({\n            pathname: `/bookAppointment/${doctorId}`,\n            state: {\n              doctorId: doctorId\n            }\n          });\n        } else {\n          history.push({\n            // pathname:`/signin?redirection=/bookAppointment/${doctorId}`\n            pathname: `/signin`,\n            state: {\n              redirection: `/bookAppointment/${doctorId}`\n            }\n          });\n        }\n      }\n    }\n  };\n\n  const bookingAppOnRequest = () => {\n    localStorage.setItem(\"doctrID\", doctorId);\n    dispatch(Store_formData({ ...appoinment_form,\n      appointmentDate: \"\",\n      appointmentTime: \"\",\n      bookingFrom: \"Request\",\n      bookingType: \"Request\",\n      doctorId: doctorId,\n      routing: true\n    }));\n\n    if (DoctorFee == 0) {\n      if (!toastOpen) {\n        toast.error(\"Please contact our support team \", {\n          position: toast.POSITION.TOP_CENTER,\n          hideProgressBar: true,\n          onOpen: props => setToastOpen(true),\n          onClose: props => setToastOpen(false)\n        });\n      }\n    } else {\n      if (Login.login) {\n        history.push({\n          pathname: `/bookAppointment/${doctorId}`,\n          state: {\n            doctorId: doctorId\n          }\n        });\n      } else {\n        history.push({\n          pathname: `/signin`,\n          state: {\n            redirection: `/bookAppointment/${doctorId}`\n          }\n        });\n      }\n    }\n  };\n\n  const typeChange = item => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    SetAppmtType(`${item.Type} (${item.Amount} for upto ${item.Duration} Min)`);\n    setSelectedType(item.Type);\n    setRequest(item.availableType == \"On Request\");\n    dispatch(fetch_appointmentSlot({\n      isStart: false,\n      isNext: true,\n      date: dateFrom,\n      typeofconsultation: item.Type,\n      doctorId: doctorId\n    }));\n  };\n\n  const monthChange = () => {\n    let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-1`; // moment().add(1, 'months');\n\n    let dateFrom = moment(CurrentDay).endOf(\"month\").format(\"DD MM YYYY\");\n    dispatch(fetch_appointmentSlot({\n      isStart: false,\n      isNext: true,\n      date: dateFrom,\n      doctorId: doctorId,\n      typeofconsultation: SelectedType\n    }));\n  };\n\n  const previousMonthChange = () => {\n    let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-1`;\n    let today = moment().format(\"YYYY-MM-DD\");\n    let check = moment(today).isBefore(moment(CurrentDay).subtract(1, \"months\"));\n\n    if (!(CurrentDay <= moment().format(\"YYYY-M\") + \"-1\")) {\n      let dateFrom = \"\";\n\n      if (!check) {\n        dateFrom = moment(`${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${moment(today).format(\"DD\")}`).subtract(1, \"months\").subtract(1, \"day\").format(\"DD MM YYYY\");\n      } else {\n        dateFrom = moment(CurrentDay).subtract(1, \"months\").subtract(1, \"day\").format(\"DD MM YYYY\");\n      }\n\n      dispatch(fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: SelectedType\n      }));\n    }\n  };\n\n  const onTypeChange = item => {\n    var _item$Amount;\n\n    let doctorfees = (_item$Amount = item.Amount) === null || _item$Amount === void 0 ? void 0 : _item$Amount.split(item.Currency);\n    setDoctorFee(doctorfees[1]);\n    typeChange(item);\n    dispatch(Store_formData({ ...appoinment_form,\n      typeofconsultation: item.Type,\n      doctorfees: item.doctorfees,\n      gstamount: item.Gst,\n      fees: item.Amount,\n      duration: item.Duration,\n      c2mdfees: item.c2mdFees,\n      basicFees: item.Amount\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.Schedule,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.Select_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.appointmentTypeTxt,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.appointment,\n          alt: \"appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), \"Appointment type\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: [(_ApponmtType$split = ApponmtType.split(\"(\")) === null || _ApponmtType$split === void 0 ? void 0 : _ApponmtType$split[0], /*#__PURE__*/_jsxDEV(\"span\", {\n            className: Style.SubText,\n            children: ((_ApponmtType$split2 = ApponmtType.split(\"(\")) === null || _ApponmtType$split2 === void 0 ? void 0 : _ApponmtType$split2[1]) && \"(\" + ((_ApponmtType$split3 = ApponmtType.split(\"(\")) === null || _ApponmtType$split3 === void 0 ? void 0 : _ApponmtType$split3[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: ApponmtList.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                onTypeChange(item);\n              },\n              children: [item.Type, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: Style.SubText,\n                children: [\"(\", item.Amount, \" for upto \", item.Duration, \" Min)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Style.availableTimeTxt,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Assets.time,\n        alt: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), ShowRequest ? \"Request for an appointment\" : \"Select an available time\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), DoctorFee == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Style.errmsg,\n      children: \"You can't book appointment for this doctor. Please contact the support team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this), ShowRequest ? /*#__PURE__*/_jsxDEV(AppointmentOnRequest, {\n      bookingApp: bookingAppOnRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this) : TimeSlot && TimeSlot.length != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.Schedule_Bottom,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.BottomTop,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.left_Text,\n          onClick: previousMonthChange,\n          children: [!(moment(`${currentMonth.year}-${currentMonth.month + 1}-1`, \"YYYY-MM-D\").format(\"YYYY-M-D\") <= moment().format(\"YYYY-M\") + \"-1\") && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.nextArrow,\n            alt: \"\",\n            style: {\n              transform: \"rotate(180deg)\",\n              width: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 19\n          }, this), \" \", moment(`${currentMonth.year}-${currentMonth.month + 1}-${currentMonth.dates}`, \"YYYY-MM-DD\").format(\"MMMM\"), \" \", currentMonth.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.right_Text,\n          onClick: monthChange,\n          children: [\"Next Month\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.nextArrow,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        responsive: responsive,\n        showDots: false,\n        arrows: false,\n        customButtonGroup: /*#__PURE__*/_jsxDEV(ButtonGroup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 34\n        }, this),\n        renderButtonGroupOutside: true,\n        children: TimeSlot && TimeSlot.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.SliderItem,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: Style.Day_head,\n                children: item.dates\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: Style.Day_text,\n                children: moment(`${item.year}-${item.month + 1}-${item.dates}`, \"YYYY-MM-DD\").format(\"dddd\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.SliderItemInner,\n              children: item.requestSlot ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.TimeSlot_main_wrapper,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.timeSolt_wrapper,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: Style.noSoltsAvailable,\n                    children: \"No slots available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.TimeSlot_main_wrapper,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.timeSolt_wrapper,\n                  children: item.slots.length > 0 ? !isCurrentDate(item, item.slots[item.slots.length - 1].time) ? item.slots.map(data => {\n                    if (!isCurrentDate(item, data.time)) {\n                      return /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-primary\",\n                        className: Style.timeSlot_btn,\n                        onClick: () => bookingApp(data.time, item, \"Book\", \"AppointmentBooking\"),\n                        children: data.time\n                      }, data.time, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 511,\n                        columnNumber: 41\n                      }, this);\n                    }\n                  }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: Style.noSoltsAvailable,\n                    children: \"No slots available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 35\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: Style.noSoltsAvailable,\n                    children: \"No slots available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Schedule, \"EMlFRWR/oECROOT/lzK/OAWe62A=\", false, function () {\n  return [useDispatch, useHistory, useLocation, useSelector, useSelector, useSelector];\n});\n\n_c = Schedule;\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V6/c2md-web_react/src/components/DoctorprofileSchedule/Schedule/index.js"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","Carousel","Button","Form","Dropdown","AppointmentOnRequest","fetch_appointmentSlot","fetch_appointmentTypes","Assets","reset_booking","Store_formData","Style","useHistory","useParams","useLocation","toast","Schedule","responsive","Typeofappointment","doctorId","DayCounter","moment","require","ApponmtType","SetAppmtType","ShowRequest","setRequest","ApponmtList","setApponmtList","SelectedType","setSelectedType","DoctorFee","setDoctorFee","dispatch","history","location","toastOpen","setToastOpen","appoinment_form","state","bookAppoinment","dateFrom","subtract","format","then","res","Type","availableType","Onload","Amount","Duration","typeofconsultation","doctorfees","gstamount","Gst","fees","duration","c2mdfees","c2mdFees","basicFees","type","isStart","isNext","date","Login","login","TimeSlot","doctorDetail","timeSlot","currentMonth","length","handleChange","event","target","value","isCurrentDate","time","givenDate","year","month","dates","today","isBefore","ButtonGroup","next","previous","goToSlide","rest","carouselState","currentSlide","Nextslide","day","onBack","back","CurrentDay","check","isAfter","CheckDay","isSame","display","flex","float","borderColor","rightArrow","bookingApp","bookingType","bookingFrom","user","userType","error","position","POSITION","TOP_CENTER","hideProgressBar","onOpen","props","onClose","DateVariable","dt","toTime","add","dateTimeFormat","ToTimeFormat","format2","localStorage","setItem","JSON","stringify","appoinmentFromTime","appoinmentToTime","appointmentDate","appointmentTime","routing","push","pathname","redirection","bookingAppOnRequest","typeChange","item","monthChange","endOf","previousMonthChange","onTypeChange","split","Currency","Select_wrapper","appointmentTypeTxt","appointment","SubText","map","index","availableTimeTxt","errmsg","Schedule_Bottom","BottomTop","left_Text","nextArrow","transform","width","right_Text","SliderItem","Day_head","Day_text","SliderItemInner","requestSlot","TimeSlot_main_wrapper","timeSolt_wrapper","noSoltsAvailable","slots","data","timeSlot_btn"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"react-multi-carousel\";\nimport { Button, Form, Dropdown } from \"react-bootstrap\";\nimport AppointmentOnRequest from \"../AppointmentOnRequest\";\nimport {\n  fetch_appointmentSlot,\n  fetch_appointmentTypes,\n} from \"../../../actions/AppointmentSlotAction\";\nimport Assets from \"../../Layout/Assets\";\nimport {\n  reset_booking,\n  Store_formData,\n} from \"../../../actions/BookAppoinmentAction\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Style from \"./Schedule.module.scss\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nfunction Schedule({ responsive, Typeofappointment, doctorId, DayCounter }) {\n  const moment = require(\"moment\");\n  const [ApponmtType, SetAppmtType] = useState(\"\");\n  const [ShowRequest, setRequest] = useState(false);\n  const [ApponmtList, setApponmtList] = useState([]);\n  const [SelectedType, setSelectedType] = useState(\"\");\n  const [DoctorFee, setDoctorFee] = useState(1);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [toastOpen, setToastOpen] = useState(false);\n\n  const appoinment_form = useSelector(\n    (state) => state.bookAppoinment.appoinment_form\n  );\n  useEffect(() => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    dispatch(reset_booking());\n\n    dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n      setApponmtList(res);\n      setSelectedType(res[0].Type);\n      setRequest(res[0].availableType == \"On Request\");\n      Onload(dateFrom, res[0].Type);\n      SetAppmtType(\n        `${res[0].Type} (${res[0].Amount} for upto ${res[0].Duration} Min)`\n      );\n      setDoctorFee(res[0].Amount);\n      dispatch(\n        Store_formData({\n          ...appoinment_form,\n          typeofconsultation: res[0].Type,\n          doctorfees: res[0].doctorfees,\n          gstamount: res[0].Gst,\n          fees: res[0].Amount,\n          duration: res[0].Duration,\n          c2mdfees: res[0].c2mdFees,\n          basicFees: res[0].Amount,\n        })\n      );\n    });\n  }, []);\n\n  const Onload = (dateFrom, type) => {\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: true,\n        isNext: false,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: type,\n      })\n    );\n  };\n\n  const Login = useSelector((state) => state.login);\n  const TimeSlot = useSelector((state) => state.doctorDetail.timeSlot);\n  const currentMonth = TimeSlot && TimeSlot.length > 0 && TimeSlot[0];\n\n  const handleChange = (event) => {\n    SetAppmtType(event.target.value);\n  };\n\n  const isCurrentDate = (timeSlot, time) => {\n    let givenDate = `${timeSlot.year}-${timeSlot.month + 1}-${\n      timeSlot.dates\n    } ${time}`;\n    let today = moment().format(\"YYYY-MM-DD hh:mm A\");\n    return moment(givenDate).isBefore(today);\n  };\n\n  const ButtonGroup = ({ next, previous, goToSlide, ...rest }) => {\n    const {\n      carouselState: { currentSlide },\n    } = rest;\n    const Nextslide = () => {\n      // goToSlide(currentSlide + 7);\n\n      let day = `${TimeSlot[DayCounter?.next].dates} ${\n        TimeSlot[DayCounter?.next].month + 1\n      } ${TimeSlot[DayCounter?.next].year}`;\n\n      dispatch(\n        fetch_appointmentSlot({\n          isStart: false,\n          isNext: true,\n          date: day,\n          doctorId: doctorId,\n          typeofconsultation: SelectedType,\n        })\n      );\n    };\n\n    const onBack = () => {\n      currentSlide !== 0 && goToSlide(currentSlide - DayCounter?.back);\n\n      let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${\n        TimeSlot[0].dates\n      } `;\n\n      let dateFrom = moment(CurrentDay)\n        .subtract(DayCounter?.back, \"d\")\n        .format(\"DD MM YYYY\");\n\n      let today = moment().format(\"YYYY-MM-DD\");\n\n      let check = moment(today).isAfter(CurrentDay);\n\n      let CheckDay = moment(CurrentDay).isSame(moment().format(\"YYYY-M-DD\"));\n\n      if (!CheckDay) {\n        if (!check) {\n          dispatch(\n            fetch_appointmentSlot({\n              isStart: true,\n              isNext: true,\n              date: dateFrom,\n              doctorId: doctorId,\n              typeofconsultation: SelectedType,\n            })\n          );\n        } else {\n        }\n      } else {\n      }\n    };\n\n    return (\n      <div className=\"carousel-button-group\" style={{ display: \"flex\" }}>\n        <div style={{ flex: 1 }}>\n          <Button\n            style={{\n              float: \"left\",\n              borderColor: \"#F5F6F8\",\n            }}\n            variant=\"outline-primary\"\n            className={currentSlide === 0 ? \"disable\" : \"\"}\n            onClick={onBack}\n          >\n            {!moment(\n              `${TimeSlot[0]?.year}-${TimeSlot[0]?.month + 1}-${\n                TimeSlot[0]?.dates\n              }`\n            ).isSame(moment().format(\"YYYY-M-DD\")) && (\n              <img src={Assets.rightArrow} alt=\"<\" />\n            )}\n          </Button>\n        </div>\n        <div style={{ flex: 1 }}>\n          <Button\n            variant=\"outline-primary\"\n            // onClick={() => next()}\n            onClick={Nextslide}\n            style={{\n              float: \"right\",\n              borderColor: \"#F5F6F8\",\n            }}\n          >\n            <img src={Assets.rightArrow} alt=\">\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const bookingApp = (time, date, bookingType, bookingFrom) => {\n    if (Login?.user?.userType === \"Doctor\") {\n      if (!toastOpen) {\n        toast.error(\n          \"Sorry,This booking facility is allowed only for patients\",\n          {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            onOpen: (props) => setToastOpen(true),\n            onClose: (props) => setToastOpen(false),\n          }\n        );\n      }\n    } else {\n      if (DoctorFee == 0) {\n        if (!toastOpen) {\n          toast.error(\"Please contact our support team \", {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            onOpen: (props) => setToastOpen(true),\n            onClose: (props) => setToastOpen(false),\n          });\n        }\n      } else {\n        let CurrentDay = `${date.year}-${date.month + 1}-${date.dates} `;\n\n        let DateVariable = moment(CurrentDay, \"YYYY-MM-DD\").format(\n          \"DD-MMMM-YYYY\"\n        );\n        let dt = moment(time, [\"h:mm A\"]).format(\"HH:mm\");\n        let toTime = moment(time, [\"h:mm A\"])\n          .add(15, \"minutes\")\n          .format(\"HH:mm\");\n\n        let dateTimeFormat = `${date.year}-${date.month + 1}-${\n          date.dates\n        } ${dt}`;\n\n        let ToTimeFormat = `${date.year}-${date.month + 1}-${\n          date.dates\n        } ${toTime}`;\n\n        let format2 = moment(dateTimeFormat, \"YYYY-MM-DD HH:mm\").format(\n          \"YYYY-MM-DD HH:mm\"\n        );\n\n        localStorage.setItem(\n          \"appinmentTime\",\n          JSON.stringify({\n            appoinmentFromTime: format2,\n            appoinmentToTime: ToTimeFormat,\n          })\n        );\n        dispatch(\n          Store_formData({\n            ...appoinment_form,\n            appointmentDate: DateVariable,\n            appointmentTime: time,\n            bookingFrom: bookingFrom,\n            bookingType: bookingType,\n            appoinmentFromTime: format2,\n            appoinmentToTime: ToTimeFormat,\n            doctorId: doctorId,\n            routing: true,\n          })\n        );\n        if (Login.login) {\n          history.push({\n            pathname: `/bookAppointment/${doctorId}`,\n            state: { doctorId: doctorId },\n          });\n        } else {\n          history.push({\n            // pathname:`/signin?redirection=/bookAppointment/${doctorId}`\n            pathname: `/signin`,\n            state: { redirection: `/bookAppointment/${doctorId}` },\n          });\n        }\n      }\n    }\n  };\n\n  const bookingAppOnRequest = () => {\n    localStorage.setItem(\"doctrID\", doctorId);\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        appointmentDate: \"\",\n        appointmentTime: \"\",\n        bookingFrom: \"Request\",\n        bookingType: \"Request\",\n        doctorId: doctorId,\n        routing: true,\n      })\n    );\n    if (DoctorFee == 0) {\n      if (!toastOpen) {\n        toast.error(\"Please contact our support team \", {\n          position: toast.POSITION.TOP_CENTER,\n          hideProgressBar: true,\n          onOpen: (props) => setToastOpen(true),\n          onClose: (props) => setToastOpen(false),\n        });\n      }\n    } else {\n      if (Login.login) {\n        history.push({\n          pathname: `/bookAppointment/${doctorId}`,\n          state: { doctorId: doctorId },\n        });\n      } else {\n        history.push({\n          pathname: `/signin`,\n          state: { redirection: `/bookAppointment/${doctorId}` },\n        });\n      }\n    }\n  };\n\n  const typeChange = (item) => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    SetAppmtType(`${item.Type} (${item.Amount} for upto ${item.Duration} Min)`);\n    setSelectedType(item.Type);\n    setRequest(item.availableType == \"On Request\");\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        typeofconsultation: item.Type,\n        doctorId: doctorId,\n      })\n    );\n  };\n\n  const monthChange = () => {\n    let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-1`;\n    // moment().add(1, 'months');\n    let dateFrom = moment(CurrentDay).endOf(\"month\").format(\"DD MM YYYY\");\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: SelectedType,\n      })\n    );\n  };\n\n  const previousMonthChange = () => {\n    let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-1`;\n    let today = moment().format(\"YYYY-MM-DD\");\n\n    let check = moment(today).isBefore(\n      moment(CurrentDay).subtract(1, \"months\")\n    );\n    if (!(CurrentDay <= moment().format(\"YYYY-M\") + \"-1\")) {\n      let dateFrom = \"\";\n      if (!check) {\n        dateFrom = moment(\n          `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${moment(today).format(\n            \"DD\"\n          )}`\n        )\n          .subtract(1, \"months\")\n          .subtract(1, \"day\")\n          .format(\"DD MM YYYY\");\n      } else {\n        dateFrom = moment(CurrentDay)\n          .subtract(1, \"months\")\n          .subtract(1, \"day\")\n          .format(\"DD MM YYYY\");\n      }\n\n      dispatch(\n        fetch_appointmentSlot({\n          isStart: false,\n          isNext: true,\n          date: dateFrom,\n          doctorId: doctorId,\n          typeofconsultation: SelectedType,\n        })\n      );\n    }\n  };\n\n  const onTypeChange = (item) => {\n    let doctorfees = item.Amount?.split(item.Currency);\n\n    setDoctorFee(doctorfees[1]);\n    typeChange(item);\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        typeofconsultation: item.Type,\n        doctorfees: item.doctorfees,\n        gstamount: item.Gst,\n        fees: item.Amount,\n        duration: item.Duration,\n        c2mdfees: item.c2mdFees,\n        basicFees: item.Amount,\n      })\n    );\n  };\n  return (\n    <div className={Style.Schedule}>\n      <div className={Style.Select_wrapper}>\n        <p className={Style.appointmentTypeTxt}>\n          {\" \"}\n          <img src={Assets.appointment} alt=\"appointment\" />\n          Appointment type\n        </p>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            {ApponmtType.split(\"(\")?.[0]}\n            <span className={Style.SubText}>\n              {/* ( {ApponmtType.split(\"(\")?.[1]} */}\n              {ApponmtType.split(\"(\")?.[1] &&\n                \"(\" + ApponmtType.split(\"(\")?.[1]}\n            </span>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {ApponmtList.map((item, index) => {\n              return (\n                <Dropdown.Item\n                  onClick={() => {\n                    onTypeChange(item);\n                  }}\n                >\n                  {item.Type}{\" \"}\n                  <span className={Style.SubText}>\n                    ({item.Amount} for upto {item.Duration} Min)\n                  </span>\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n      <p className={Style.availableTimeTxt}>\n        <img src={Assets.time} alt=\"time\" />\n        {ShowRequest\n          ? \"Request for an appointment\"\n          : \"Select an available time\"}\n      </p>\n      {DoctorFee == 0 && (\n        <p className={Style.errmsg}>\n          You can't book appointment for this doctor. Please contact the support\n          team\n        </p>\n      )}\n      {ShowRequest ? (\n        <AppointmentOnRequest bookingApp={bookingAppOnRequest} />\n      ) : (\n        TimeSlot &&\n        TimeSlot.length != 0 && (\n          <div className={Style.Schedule_Bottom}>\n            <div className={Style.BottomTop}>\n              <p className={Style.left_Text} onClick={previousMonthChange}>\n                {!(\n                  moment(\n                    `${currentMonth.year}-${currentMonth.month + 1}-1`,\n                    \"YYYY-MM-D\"\n                  ).format(\"YYYY-M-D\") <=\n                  moment().format(\"YYYY-M\") + \"-1\"\n                ) && (\n                  <img\n                    src={Assets.nextArrow}\n                    alt=\"\"\n                    style={{ transform: \"rotate(180deg)\", width: \"8px\" }}\n                  />\n                )}{\" \"}\n                {moment(\n                  `${currentMonth.year}-${currentMonth.month + 1}-${\n                    currentMonth.dates\n                  }`,\n                  \"YYYY-MM-DD\"\n                ).format(\"MMMM\")}{\" \"}\n                {currentMonth.year}\n              </p>\n              <p className={Style.right_Text} onClick={monthChange}>\n                Next Month\n                <img src={Assets.nextArrow} alt=\"\" />\n              </p>\n            </div>\n\n            <Carousel\n              responsive={responsive}\n              showDots={false}\n              arrows={false}\n              customButtonGroup={<ButtonGroup />}\n              renderButtonGroupOutside={true}\n            >\n              {TimeSlot &&\n                TimeSlot.map((item, index) => {\n                  return (\n                    <div key={index}>\n                      <div className={Style.SliderItem}>\n                        <h2 className={Style.Day_head}>{item.dates}</h2>\n                        <p className={Style.Day_text}>\n                          {moment(\n                            `${item.year}-${item.month + 1}-${item.dates}`,\n                            \"YYYY-MM-DD\"\n                          ).format(\"dddd\")}\n                        </p>\n                      </div>\n                      <div className={Style.SliderItemInner}>\n                        {item.requestSlot ? (\n                          <div className={Style.TimeSlot_main_wrapper}>\n                            <div className={Style.timeSolt_wrapper}>\n                              <p className={Style.noSoltsAvailable}>\n                                No slots available\n                              </p>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className={Style.TimeSlot_main_wrapper}>\n                            <div className={Style.timeSolt_wrapper}>\n                              {item.slots.length > 0 ? (\n                                !isCurrentDate(\n                                  item,\n                                  item.slots[item.slots.length - 1].time\n                                ) ? (\n                                  item.slots.map((data) => {\n                                    if (!isCurrentDate(item, data.time)) {\n                                      return (\n                                        <Button\n                                          variant=\"outline-primary\"\n                                          className={Style.timeSlot_btn}\n                                          key={data.time}\n                                          onClick={() =>\n                                            bookingApp(\n                                              data.time,\n                                              item,\n                                              \"Book\",\n                                              \"AppointmentBooking\"\n                                            )\n                                          }\n                                        >\n                                          {data.time}\n                                        </Button>\n                                      );\n                                    }\n                                  })\n                                ) : (\n                                  <p className={Style.noSoltsAvailable}>\n                                    No slots available\n                                  </p>\n                                )\n                              ) : (\n                                <p className={Style.noSoltsAvailable}>\n                                  No slots available\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n            </Carousel>\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default Schedule;\n"]},"metadata":{},"sourceType":"module"}