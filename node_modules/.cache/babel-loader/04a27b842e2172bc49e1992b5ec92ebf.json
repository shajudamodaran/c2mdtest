{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaju Damodaran\\\\Documents\\\\V9\\\\c2md-web_react\\\\src\\\\components\\\\ResetPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Style from \"./Reset.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport SignupLayout from \"../Layout/SignupLayout\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, useFormik, Field, ErrorMessage } from \"formik\";\nimport CountryJson from \"../../constants/country.json\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { ArrowLeftBlue } from \"../../assets/Logos/Icons\";\nimport { useDispatch } from \"react-redux\";\nimport { checkUserAvailability } from \"../../actions/ForgotPasswordAction\";\nimport CustomPhoneInput from \"../CustomPhoneInput/CustomPhoneInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  const re = /^[0-9\\b]+$/;\n  const history = useHistory();\n  const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  const [emailform, SetForm] = useState(false);\n  let dispatch = useDispatch();\n  let [isEnabled, setEnabled] = useState(false);\n\n  const handleOnChange = (value, data, event, formattedValue) => {};\n\n  let onEmailChange = e => {\n    if (e.target.value.match(emailTest)) {\n      setEnabled(true);\n    } else {\n      setEnabled(false);\n    }\n  };\n\n  let onPhoneChange = e => {\n    var pattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    let phonenumber = e.slice(2);\n\n    if (phonenumber.match(pattern)) {\n      setEnabled(true);\n    } else {\n      setEnabled(false);\n    }\n  };\n\n  let onContinue = values => {\n    var _values$mobile;\n\n    let {\n      loginType,\n      email,\n      mobile\n    } = values;\n    console.log(loginType, (_values$mobile = values.mobile) === null || _values$mobile === void 0 ? void 0 : _values$mobile.slice(2));\n    dispatch(checkUserAvailability({\n      // type: values.loginType,\n      type: \"mail\",\n      searchkey: values.loginType == \"email\" ? values.email : values.mobile.slice(2)\n    })).then(res => {\n      console.log(res);\n\n      if (res === null || res === void 0 ? void 0 : res.data.info) {\n        let errors = {};\n        console.log(\"User not exist\");\n        errors.email = \"This mailid not registerd with Us please check the Email Id\";\n      } else {\n        SetForm(true);\n        console.log(\"User exist\", res === null || res === void 0 ? void 0 : res.data);\n        let params = {\n          \"detail\": {\n            \"email\": \"shaju123456@gmail.com\",\n            \"mobileNumber\": \"919074810155\",\n            \"accessCountry\": \"0\",\n            \"dial_code\": \"91\",\n            \"countryCode\": \"IN\",\n            \"code\": {\n              \"name\": \"India\",\n              \"flag\": \"ðŸ‡®ðŸ‡³\",\n              \"code\": \"IN\",\n              \"dial_code\": \"+91\"\n            }\n          },\n          \"userType\": \"Patient\",\n          \"page\": \"reset\"\n        };\n        history.push({\n          pathname: \"/signup/verify\",\n          state: {\n            \"detail\": {\n              \"email\": \"shaju123456@gmail.com\",\n              \"mobileNumber\": \"919074810155\",\n              \"accessCountry\": \"0\",\n              \"dial_code\": \"91\",\n              \"countryCode\": \"IN\",\n              \"code\": {\n                \"name\": \"India\",\n                \"flag\": \"ðŸ‡®ðŸ‡³\",\n                \"code\": \"IN\",\n                \"dial_code\": \"+91\"\n              }\n            },\n            \"userType\": \"Patient\",\n            \"page\": \"reset\"\n          }\n        });\n      } // if (res?.data.otpvalue == \"Email id not registerd\") \n      // {\n      //   console.log();\n      // } else {\n      // }\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignupLayout, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validate: values => {\n        let errors = {};\n\n        if (values.loginType === \"email\") {\n          if (values.email === \"\") {\n            errors.email = \"Please enter the eMail id used when you created the account\";\n          } else if (!emailTest.test(values.email)) {\n            errors.email = \"There seems to be some issue with your eMail id. Please check \";\n          }\n        }\n\n        if (values.loginType === \"mobile\") {\n          if (values.mobile === \"\") {\n            errors.mobile = \"Please enter the registered mobile number \";\n          } // else if (values.mobile.toString().length != 10) {\n          //   errors.mobile =\n          //     \"There seems to be some issue with the mobile number you entered. Please check \";\n          // }\n\n        }\n\n        return errors;\n      },\n      initialValues: {\n        email: \"\",\n        mobile: \"\",\n        loginType: \"email\",\n        accessCountry: \"0\",\n        dial_code: \"91\",\n        countryCode: \"IN\",\n        code: {\n          name: \"India\",\n          flag: \"ðŸ‡®ðŸ‡³\",\n          code: \"IN\",\n          dial_code: \"+91\"\n        }\n      },\n      onSubmit: values => {\n        // if (values.loginType === \"mobile\") {\n        //   history.push({\n        //     pathname: \"/signup/verify\",\n        //     state: { detail: values, page: \"reset\" },\n        //   });\n        // } else {\n        //   SetForm(true);\n        // }\n        onContinue(values);\n      },\n      children: ({\n        touched,\n        errors,\n        setFieldValue,\n        values,\n        handleChange,\n        handleSubmit\n      }) => {\n        var _values$mobile2, _values$dial_code;\n\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          className: Style.reset_form_align,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: Style.reset_header_align,\n            children: \"Reset your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: emailform ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: Style.reset_text,\n              children: \"Verification code has been sent to your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: Style.reset_text,\n              children: \"Enter the email address or mobile number associated with your account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: Style.reset_form_label,\n              children: [\"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.signin_radiowrp,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Sign in with\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: Style.signin_radioeach,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        inline: true,\n                        label: \"eMail\",\n                        name: \"group1\",\n                        type: type,\n                        id: `inline-${type}-1`,\n                        onChange: () => setFieldValue(\"loginType\", \"email\"),\n                        checked: values.loginType === \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        inline: true,\n                        label: \"Mobile\",\n                        name: \"group1\",\n                        type: type,\n                        id: `inline-${type}-2`,\n                        checked: values.loginType === \"mobile\",\n                        onChange: () => {\n                          SetForm(false);\n                          setFieldValue(\"loginType\", \"mobile\");\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, `inline-${type}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), values.loginType === \"email\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"email\",\n                className: Style.reset_input_field + \" \" + `${touched.email && errors.email ? \"is-invalid\" : \"\"}`,\n                placeholder: \"Enter eMail id\",\n                onChange: e => {\n                  handleChange(e);\n                  onEmailChange(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"email\",\n                className: Style.reset_error_msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), values.loginType === \"mobile\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.reset_PhoneInput + \" \" + `${touched.mobile && errors.mobile ? \"is-invalid\" : \"\"}`,\n                children: /*#__PURE__*/_jsxDEV(CustomPhoneInput, {\n                  country: \"in\",\n                  value: (_values$mobile2 = values.mobile) === null || _values$mobile2 === void 0 ? void 0 : _values$mobile2.slice((_values$dial_code = values.dial_code) === null || _values$dial_code === void 0 ? void 0 : _values$dial_code.length),\n                  name: \"mobile\",\n                  autoFormat: false,\n                  countryCodeEditable: false,\n                  onChange: (value, data, event, formattedValue) => {\n                    var _data$countryCode;\n\n                    onPhoneChange(value);\n                    setFieldValue(\"mobile\", value);\n                    setFieldValue(\"dial_code\", data.dialCode);\n                    setFieldValue(\"countryCode\", (_data$countryCode = data.countryCode) === null || _data$countryCode === void 0 ? void 0 : _data$countryCode.toUpperCase());\n                    handleOnChange(value, data, event, formattedValue);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"mobile\",\n                className: Style.reset_error_msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [emailform ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              className: Style.signup_continue_btn,\n              type: \"submit\",\n              onClick: () => history.push(\"/signin\"),\n              children: \"Go back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !isEnabled,\n              variant: \"outline-secondary\",\n              className: Style.signup_continue_btn,\n              type: \"submit\",\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), emailform ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              variant: \"outline-secondary\",\n              className: Style.back_to_login_link,\n              type: \"submit\",\n              onClick: () => {\n                history.push('/signin');\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.back_to_login_link_icon,\n                children: /*#__PURE__*/_jsxDEV(ArrowLeftBlue, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), \"Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"nvQDkRElvcY4JZpI82DcQHJjUcU=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/Shaju Damodaran/Documents/V9/c2md-web_react/src/components/ResetPassword/index.js"],"names":["React","useState","Row","Style","Button","SignupLayout","Form","useHistory","Formik","useFormik","Field","ErrorMessage","CountryJson","PhoneInput","ArrowLeftBlue","useDispatch","checkUserAvailability","CustomPhoneInput","ResetPassword","re","history","emailTest","emailform","SetForm","dispatch","isEnabled","setEnabled","handleOnChange","value","data","event","formattedValue","onEmailChange","e","target","match","onPhoneChange","pattern","phonenumber","slice","onContinue","values","loginType","email","mobile","console","log","type","searchkey","then","res","info","errors","params","push","pathname","state","test","accessCountry","dial_code","countryCode","code","name","flag","touched","setFieldValue","handleChange","handleSubmit","reset_form_align","reset_header_align","reset_text","reset_form_label","map","signin_radiowrp","signin_radioeach","reset_input_field","reset_error_msg","reset_PhoneInput","length","dialCode","toUpperCase","signup_continue_btn","back_to_login_link","back_to_login_link_icon"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Style from \"./Reset.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport SignupLayout from \"../Layout/SignupLayout\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, useFormik, Field, ErrorMessage } from \"formik\";\nimport CountryJson from \"../../constants/country.json\";\n\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { ArrowLeftBlue } from \"../../assets/Logos/Icons\";\nimport { useDispatch } from \"react-redux\";\nimport { checkUserAvailability } from \"../../actions/ForgotPasswordAction\";\nimport CustomPhoneInput from \"../CustomPhoneInput/CustomPhoneInput\";\n\nfunction ResetPassword() {\n  const re = /^[0-9\\b]+$/;\n  const history = useHistory();\n  const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n  const [emailform, SetForm] = useState(false);\n\n  let dispatch = useDispatch()\n\n  let [isEnabled, setEnabled] = useState(false)\n\n  const handleOnChange = (value, data, event, formattedValue) => {\n\n  };\n\n\n\n  let onEmailChange = (e) => {\n\n    if (e.target.value.match(emailTest)) {\n\n      setEnabled(true)\n    }\n    else {\n\n      setEnabled(false)\n\n    }\n\n  }\n\n\n  let onPhoneChange = (e) => {\n\n    var pattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n    let phonenumber = e.slice(2)\n\n    if (phonenumber.match(pattern)) {\n\n      setEnabled(true)\n    }\n    else {\n\n      setEnabled(false)\n\n    }\n\n  }\n\n\n\n  let onContinue = (values) => {\n\n    let { loginType, email, mobile } = values;\n\n    console.log(loginType, values.mobile?.slice(2));\n\n    dispatch(\n      checkUserAvailability({\n        // type: values.loginType,\n        type: \"mail\",\n        searchkey: values.loginType == \"email\" ? values.email : values.mobile.slice(2),\n      })\n    ).then((res) => {\n\n      console.log(res);\n\n      if (res?.data.info) \n      {\n        let errors = {};\n        console.log(\"User not exist\");\n        errors.email = \"This mailid not registerd with Us please check the Email Id\"\n\n      }\n      else {\n        SetForm(true);\n        \n        console.log(\"User exist\", res?.data);\n\n        let params = {\n          \"detail\": {\n            \"email\": \"shaju123456@gmail.com\",\n            \"mobileNumber\": \"919074810155\",\n            \"accessCountry\": \"0\",\n            \"dial_code\": \"91\",\n            \"countryCode\": \"IN\",\n            \"code\": {\n              \"name\": \"India\",\n              \"flag\": \"ðŸ‡®ðŸ‡³\",\n              \"code\": \"IN\",\n              \"dial_code\": \"+91\"\n            }\n          },\n          \"userType\": \"Patient\",\n          \"page\": \"reset\"\n        }\n\n        history.push({\n          pathname: \"/signup/verify\",\n          state: {\n          \"detail\": {\n            \"email\": \"shaju123456@gmail.com\",\n            \"mobileNumber\": \"919074810155\",\n            \"accessCountry\": \"0\",\n            \"dial_code\": \"91\",\n            \"countryCode\": \"IN\",\n            \"code\": {\n              \"name\": \"India\",\n              \"flag\": \"ðŸ‡®ðŸ‡³\",\n              \"code\": \"IN\",\n              \"dial_code\": \"+91\"\n            }\n          },\n          \"userType\": \"Patient\",\n          \"page\": \"reset\"\n        },\n        });\n\n      }\n\n\n      // if (res?.data.otpvalue == \"Email id not registerd\") \n      // {\n      //   console.log();\n      // } else {\n\n      // }\n    });\n\n  }\n\n\n  return (\n    <SignupLayout>\n      <Formik\n        validate={(values) => {\n          let errors = {};\n          if (values.loginType === \"email\") {\n            if (values.email === \"\") {\n              errors.email =\n                \"Please enter the eMail id used when you created the account\";\n            } else if (!emailTest.test(values.email)) {\n              errors.email =\n                \"There seems to be some issue with your eMail id. Please check \";\n            }\n          }\n          if (values.loginType === \"mobile\") {\n            if (values.mobile === \"\") {\n              errors.mobile = \"Please enter the registered mobile number \";\n            }\n            // else if (values.mobile.toString().length != 10) {\n            //   errors.mobile =\n            //     \"There seems to be some issue with the mobile number you entered. Please check \";\n            // }\n          }\n          return errors;\n        }}\n\n        initialValues={{\n          email: \"\",\n          mobile: \"\",\n          loginType: \"email\",\n          accessCountry: \"0\",\n          dial_code: \"91\",\n          countryCode: \"IN\",\n          code: { name: \"India\", flag: \"ðŸ‡®ðŸ‡³\", code: \"IN\", dial_code: \"+91\" },\n        }}\n        onSubmit={(values) => {\n          // if (values.loginType === \"mobile\") {\n          //   history.push({\n          //     pathname: \"/signup/verify\",\n          //     state: { detail: values, page: \"reset\" },\n          //   });\n          // } else {\n          //   SetForm(true);\n          // }\n\n          onContinue(values);\n        }}\n      >\n        {({\n          touched,\n          errors,\n          setFieldValue,\n          values,\n          handleChange,\n          handleSubmit\n\n        }) => (\n          <form className={Style.reset_form_align} onSubmit={handleSubmit}>\n            <h2 className={Style.reset_header_align}>Reset your password</h2>\n            <div className=\"form-group\">\n              {emailform ? (\n                <p className={Style.reset_text}>\n                  Verification code has been sent to your email\n                </p>\n              ) : (\n                <p className={Style.reset_text}>\n                  Enter the email address or mobile number associated with your\n                  account\n                </p>\n              )}\n            </div>\n            <div>\n              <p></p>\n            </div>\n            <div className=\"form-group\">\n              <label className={Style.reset_form_label}>\n                {[\"radio\"].map((type) => (\n                  <div key={`inline-${type}`}>\n                    <div className={Style.signin_radiowrp}>\n                      <span>Sign in with</span>\n                      <div className={Style.signin_radioeach}>\n                        <div>\n                          <Form.Check\n                            inline\n                            label=\"eMail\"\n                            name=\"group1\"\n                            type={type}\n                            id={`inline-${type}-1`}\n                            onChange={() => setFieldValue(\"loginType\", \"email\")}\n                            checked={values.loginType === \"email\"}\n                          />\n                        </div>\n                        <div>\n                          <Form.Check\n                            inline\n                            label=\"Mobile\"\n                            name=\"group1\"\n                            type={type}\n                            id={`inline-${type}-2`}\n                            checked={values.loginType === \"mobile\"}\n                            onChange={() => {\n                              SetForm(false);\n                              setFieldValue(\"loginType\", \"mobile\");\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </label>\n\n              <br />\n              {values.loginType === \"email\" && (\n                <p>\n                  <Field\n                    type=\"text\"\n                    name=\"email\"\n                    className={\n                      Style.reset_input_field +\n                      \" \" +\n                      `${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n                    }\n                    placeholder=\"Enter eMail id\"\n                    onChange={(e) => { handleChange(e); onEmailChange(e) }}\n                  />\n                  <ErrorMessage\n                    component=\"div\"\n                    name=\"email\"\n                    className={Style.reset_error_msg}\n                  />\n                </p>\n              )}\n              {values.loginType === \"mobile\" && (\n                <>\n                  <div\n                    className={\n                      Style.reset_PhoneInput +\n                      \" \" +\n                      `${touched.mobile && errors.mobile ? \"is-invalid\" : \"\"}`\n                    }\n                  >\n                    <CustomPhoneInput\n                      country={\"in\"}\n                      value={values.mobile?.slice(values.dial_code?.length)}\n                      name=\"mobile\"\n                      autoFormat={false}\n                      countryCodeEditable={false}\n                      onChange={(value, data, event, formattedValue) => {\n\n                        onPhoneChange(value)\n                        setFieldValue(\"mobile\", value);\n                        setFieldValue(\"dial_code\", data.dialCode);\n                        setFieldValue(\n                          \"countryCode\",\n                          data.countryCode?.toUpperCase()\n                        );\n\n                        handleOnChange(value, data, event, formattedValue);\n                      }}\n                    />\n                    {/* <select\n                      className={Style.forgot_country_code}\n                      value={values.accessCountry}\n                      name=\"accessCountry\"\n                      onChange={(e) => {\n                        setFieldValue(\"accessCountry\", e.target.value);\n                        setFieldValue(\"code\", CountryJson[e.target.value]);\n                      }}\n                      // onChange={(value) =>\n                      //   setFieldValue(\"accessCountry\", value)\n                      // }\n                    >\n                      {CountryJson.map((item, index) => {\n                        return (\n                          <option value={index}>\n                            {item.flag} {item.dial_code}\n                          </option>\n                        );\n                      })}\n                    </select> */}\n                    {/* <Field\n                      type=\"text\"\n                      name=\"mobile\"\n                      className={Style.reset_input_field}\n                      placeholder=\"Enter Mobile No\"\n                      onChange={(e) => {\n                        if (e.target.value === \"\" || re.test(e.target.value)) {\n                          handleChange(e);\n                        }\n                      }}\n                      autoComplete=\"off\"\n                    /> */}\n                  </div>\n                  <ErrorMessage\n                    component=\"div\"\n                    name=\"mobile\"\n                    className={Style.reset_error_msg}\n                  />\n                </>\n              )}\n            </div>\n\n            <div className=\"col-md-12\">\n              {emailform ? (\n                <Button\n                  variant=\"outline-secondary\"\n                  className={Style.signup_continue_btn}\n                  type=\"submit\"\n                  onClick={() => history.push(\"/signin\")}\n                >\n                  Go back\n                </Button>\n              ) : (\n                <Button\n                  disabled={!isEnabled}\n                  variant=\"outline-secondary\"\n                  className={Style.signup_continue_btn}\n                  type=\"submit\"\n\n                >\n                  Continue\n                </Button>\n              )}\n\n              {\n                emailform ? null :\n\n                  <div\n                    variant=\"outline-secondary\"\n                    className={Style.back_to_login_link}\n                    type=\"submit\"\n                    onClick={() => { history.push('/signin') }}\n                  >\n                    <div className={Style.back_to_login_link_icon}><ArrowLeftBlue /></div>\n                    Back\n                  </div>\n\n              }\n\n\n            </div>\n          </form>\n        )}\n      </Formik>\n    </SignupLayout>\n  );\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}