{"ast":null,"code":"var _formatTime;\n\nimport { CHECK_CONSULTATION, FETCH_CLIENTDETAILS, FETCH_COUNTRYDATA } from \"./type\";\nimport loginedApi from \"../apis\";\nimport moment from \"moment\";\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off === null || off === void 0 ? void 0 : off.split(\"GMT\")[1].split(\" (\")[0];\nlet result = (_formatTime = formatTime) === null || _formatTime === void 0 ? void 0 : _formatTime.slice(1);\n\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: GMT${formatTime}\n\n\nexport const fetch_clientDetails = userData => async dispatch => {\n  let params = {\n    requestType: \"1036\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      browserTimeZone: `GMT${formatTime}`,\n      currency: \"INR\",\n      accessCountry: \"IN\",\n      todayRate: \"\",\n      clinicId: userData === null || userData === void 0 ? void 0 : userData.clinicId\n    }\n  };\n\n  if (userData.clinicId != \"\") {\n    params.data.clinicId = userData.clinicId;\n  }\n\n  const response = await loginedApi.post(\"getclinicdetails\", params); //localStorage.setItem(\"ClinicDetails\",response.data.data);\n\n  await localStorage.setItem(\"ClinicDetails\", JSON.stringify(response.data.data));\n  dispatch({\n    type: FETCH_CLIENTDETAILS,\n    payload: response.data.data\n  });\n};\nexport const check_consultation = userData => async dispatch => {\n  let today = moment(new Date()).format(\"DD-MMM-YYYY\");\n  let paramAppoint = {\n    \"requestType\": \"65\",\n    \"token\": \"C2MDVerificationToken\",\n    \"data\": {\n      \"patientId\": userData === null || userData === void 0 ? void 0 : userData.userId,\n      \"patientEmail\": userData === null || userData === void 0 ? void 0 : userData.userId,\n      \"patientMobile\": userData === null || userData === void 0 ? void 0 : userData.mobileNumber,\n      \"browserTimeZone\": \"GMT%2B05:30\",\n      \"dayOfAppointment\": today,\n      \"appointmentNavigation\": \"start\",\n      \"currency\": \"INR\",\n      \"accessCountry\": \"IN\",\n      \"todayRate\": \"74.45000\",\n      \"Ipaddress\": {},\n      \"useragent\": \"Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/OPP3.170518.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Mobile Safari/537.36\",\n      \"Browser\": \"Chrome-95.0.4638.69\",\n      \"Os\": \"Win32\"\n    }\n  };\n  const response = await loginedApi.post(\"appointments\", paramAppoint); //localStorage.setItem(\"ClinicDetails\",response.data.data);\n\n  if (response.data.data) {\n    dispatch({\n      type: CHECK_CONSULTATION,\n      payload: response.data.data\n    });\n  }\n};\nexport const getCountryData = () => async dispatch => {\n  const res = await loginedApi.post(\"getcountrycode\", {\n    \"token\": \"token\",\n    \"version\": \"2.0\",\n    \"data\": {\n      browserTimeZone: `GMT${formatTime}`\n    },\n    \"requestType\": 1058\n  });\n\n  if (res.status === 200) {\n    dispatch({\n      type: FETCH_COUNTRYDATA,\n      payload: res.data.data\n    });\n  }\n}; // if (userData.userId && userData.userName && userData.mobileNumber && dashboardData?.dayOfAppointment) {\n//   let paramAppoint = {\n//     \"requestType\": \"65\",\n//     \"token\": \"C2MDVerificationToken\",\n//     \"data\":\n//     {\n//       \"patientId\": userData.userId,\n//       \"patientEmail\": userData.userName,\n//       \"patientMobile\": userData.mobileNumber,\n//       \"browserTimeZone\": \"GMT%2B05:30\",\n//       \"dayOfAppointment\": dashboardData.dayOfAppointment,\n//       \"currency\": \"INR\",\n//       \"accessCountry\": \"IN\",\n//       \"todayRate\": \"74.45000\",\n//       \"Ipaddress\": {},\n//       \"useragent\": \"Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/OPP3.170518.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Mobile Safari/537.36\", \"Browser\": \"Chrome-95.0.4638.69\", \"Os\": \"Win32\"\n//     }\n//   }\n//   const response = await loginedApi.post(\"appointments\", paramAppoint);\n//   //localStorage.setItem(\"ClinicDetails\",response.data.data);\n//   dispatch({ type: CHECK_CONSULTATION, payload: response.data.data });\n// }\n// else {\n//   console.log(\"Api call check_consultation not completed because of incomplete parameters\");\n// }","map":{"version":3,"sources":["/home/veena/Downloads/c2md-web_react/src/actions/MicrositeAction.js"],"names":["CHECK_CONSULTATION","FETCH_CLIENTDETAILS","FETCH_COUNTRYDATA","loginedApi","moment","off","Date","toString","replace","formatTime","split","result","slice","search","fetch_clientDetails","userData","dispatch","params","requestType","token","data","browserTimeZone","currency","accessCountry","todayRate","clinicId","response","post","localStorage","setItem","JSON","stringify","type","payload","check_consultation","today","format","paramAppoint","userId","mobileNumber","getCountryData","res","status"],"mappings":"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","sourcesContent":["import { CHECK_CONSULTATION, FETCH_CLIENTDETAILS, FETCH_COUNTRYDATA } from \"./type\";\nimport loginedApi from \"../apis\";\nimport moment from \"moment\";\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\")\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\")\n}//replace(/\\+/g,' ') browserTimeZone: GMT${formatTime}\n\nexport const fetch_clientDetails = (userData) => async (dispatch) => {\n  let params = {\n    requestType: \"1036\",\n    token: \"C2MDVerificationToken\",\n    data: {\n      browserTimeZone: `GMT${formatTime}`,\n      currency: \"INR\",\n      accessCountry: \"IN\",\n      todayRate: \"\",\n      clinicId: userData?.clinicId,\n    },\n  };\n  if (userData.clinicId != \"\") {\n    params.data.clinicId = userData.clinicId;\n  }\n\n  const response = await loginedApi.post(\"getclinicdetails\", params);\n  //localStorage.setItem(\"ClinicDetails\",response.data.data);\n  await localStorage.setItem(\"ClinicDetails\", JSON.stringify(response.data.data));\n  dispatch({ type: FETCH_CLIENTDETAILS, payload: response.data.data });\n};\n\n\n\nexport const check_consultation = (userData) => async (dispatch) => {\n\nlet today= moment(new Date()).format(\"DD-MMM-YYYY\")\n\n\n  let paramAppoint =\n  {\n    \"requestType\": \"65\",\n    \"token\": \"C2MDVerificationToken\",\n    \"data\":\n    {\n      \"patientId\": userData?.userId,\n      \"patientEmail\": userData?.userId,\n      \"patientMobile\": userData?.mobileNumber,\n      \"browserTimeZone\": \"GMT%2B05:30\",\n      \"dayOfAppointment\": today,\n      \"appointmentNavigation\": \"start\",\n      \"currency\": \"INR\",\n      \"accessCountry\": \"IN\",\n      \"todayRate\": \"74.45000\",\n      \"Ipaddress\": {},\n      \"useragent\": \"Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/OPP3.170518.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Mobile Safari/537.36\", \"Browser\": \"Chrome-95.0.4638.69\", \"Os\": \"Win32\"\n    }\n  }\n\n\n  const response = await loginedApi.post(\"appointments\", paramAppoint);\n  //localStorage.setItem(\"ClinicDetails\",response.data.data);\n\n \n\n  if (response.data.data) {\n\n    dispatch({ type: CHECK_CONSULTATION, payload: response.data.data });\n  }\n\n};\n\n\nexport const getCountryData = () => async (dispatch) => {\n \n \n\n  const res = await loginedApi.post(\"getcountrycode\", \n  {\n    \"token\": \"token\",\n    \"version\":\"2.0\",\n    \"data\": { browserTimeZone: `GMT${formatTime}`,},\n    \"requestType\": 1058\n});\n\n\n  if (res.status === 200) {\n\n\n    dispatch({ type: FETCH_COUNTRYDATA, payload: res.data.data });\n  }\n\n\n};\n\n\n\n\n// if (userData.userId && userData.userName && userData.mobileNumber && dashboardData?.dayOfAppointment) {\n\n//   let paramAppoint = {\n//     \"requestType\": \"65\",\n//     \"token\": \"C2MDVerificationToken\",\n//     \"data\":\n//     {\n//       \"patientId\": userData.userId,\n//       \"patientEmail\": userData.userName,\n//       \"patientMobile\": userData.mobileNumber,\n//       \"browserTimeZone\": \"GMT%2B05:30\",\n//       \"dayOfAppointment\": dashboardData.dayOfAppointment,\n//       \"currency\": \"INR\",\n//       \"accessCountry\": \"IN\",\n//       \"todayRate\": \"74.45000\",\n//       \"Ipaddress\": {},\n//       \"useragent\": \"Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/OPP3.170518.006) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Mobile Safari/537.36\", \"Browser\": \"Chrome-95.0.4638.69\", \"Os\": \"Win32\"\n//     }\n//   }\n\n//   const response = await loginedApi.post(\"appointments\", paramAppoint);\n//   //localStorage.setItem(\"ClinicDetails\",response.data.data);\n\n//   dispatch({ type: CHECK_CONSULTATION, payload: response.data.data });\n\n// }\n// else {\n//   console.log(\"Api call check_consultation not completed because of incomplete parameters\");\n\n// }"]},"metadata":{},"sourceType":"module"}