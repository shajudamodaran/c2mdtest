{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V2/connect2mydoctor-phase1/connect2mydoctor-phase1/src/components/DoctorprofileSchedule/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Style from \"./DoctorProfileSchedule.module.scss\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { fetch_DoctorDetail, removeDoctorDetails } from \"../../actions/DoctorDetailsAction\";\nimport DoctorProfilemain from \"./DoctorProfileMain\";\nimport { useParams } from \"react-router-dom\";\nimport MobileDoctorProfile from \"../DoctorProfileMobileScreen\";\nimport { useDimensions } from \"../../logic/Dimensions\";\nimport { fetch_clientDetails } from \"../../actions/MicrositeAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorProfileSidebar = /*#__PURE__*/React.lazy(_c = () => import(\"./DoctorProfileSidebar\"));\n_c2 = DoctorProfileSidebar;\n\nfunction DoctorProfileSchedule() {\n  _s();\n\n  const {\n    width\n  } = useDimensions();\n  let {\n    doctorid\n  } = useParams();\n  const dispatch = useDispatch();\n  const doctorDetail = useSelector(state => state.doctorDetail.doctor_Details);\n  const clientDetails = useSelector(state => state.clientDetails);\n  useEffect(() => {\n    dispatch(fetch_DoctorDetail(doctorid));\n    return () => {\n      dispatch(removeDoctorDetails());\n    };\n  }, []);\n  useEffect(() => {\n    if (doctorDetail.thirdPartysiteurl && !clientDetails.id) {\n      dispatch(fetch_clientDetails(doctorDetail.thirdPartysiteurl));\n    }\n  }, [doctorDetail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.DoctorProfileSchedule,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: doctorDetail.doctorName ? /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(DoctorProfileSidebar, {\n            doctorDetail: doctorDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          lg: 9,\n          children: [width < 992 ? /*#__PURE__*/_jsxDEV(MobileDoctorProfile, {\n            doctorDetail: doctorDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(DoctorProfilemain, {\n            doctorDetail: doctorDetail,\n            doctorid: doctorid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.loader,\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoctorProfileSchedule, \"MvVyNMhBvxxBn3pYKrGCyNTjZKQ=\", false, function () {\n  return [useDimensions, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c3 = DoctorProfileSchedule;\nexport default DoctorProfileSchedule;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DoctorProfileSidebar$React.lazy\");\n$RefreshReg$(_c2, \"DoctorProfileSidebar\");\n$RefreshReg$(_c3, \"DoctorProfileSchedule\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V2/connect2mydoctor-phase1/connect2mydoctor-phase1/src/components/DoctorprofileSchedule/index.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Style","Container","Row","Col","Spinner","fetch_DoctorDetail","removeDoctorDetails","DoctorProfilemain","useParams","MobileDoctorProfile","useDimensions","fetch_clientDetails","DoctorProfileSidebar","lazy","DoctorProfileSchedule","width","doctorid","dispatch","doctorDetail","state","doctor_Details","clientDetails","thirdPartysiteurl","id","doctorName","loader"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Style from \"./DoctorProfileSchedule.module.scss\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport {\n  fetch_DoctorDetail,\n  removeDoctorDetails,\n} from \"../../actions/DoctorDetailsAction\";\nimport DoctorProfilemain from \"./DoctorProfileMain\";\nimport { useParams } from \"react-router-dom\";\nimport MobileDoctorProfile from \"../DoctorProfileMobileScreen\";\nimport { useDimensions } from \"../../logic/Dimensions\";\nimport { fetch_clientDetails } from \"../../actions/MicrositeAction\";\nconst DoctorProfileSidebar = React.lazy(() => import(\"./DoctorProfileSidebar\"));\n\nfunction DoctorProfileSchedule() {\n  const { width } = useDimensions();\n  let { doctorid } = useParams();\n  const dispatch = useDispatch();\n  \n  const doctorDetail = useSelector(\n    (state) => state.doctorDetail.doctor_Details\n  );\n  const clientDetails = useSelector((state) => state.clientDetails);\n\n  useEffect(() => {\n    dispatch(fetch_DoctorDetail(doctorid));\n\n    return () => {\n      dispatch(removeDoctorDetails());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (doctorDetail.thirdPartysiteurl && !clientDetails.id) {\n      dispatch(fetch_clientDetails(doctorDetail.thirdPartysiteurl));\n    }\n  }, [doctorDetail]);\n\n  return (\n    <div className={Style.DoctorProfileSchedule}>\n      <Container>\n        {doctorDetail.doctorName ? (\n          <Row>\n            <Col sm={12} lg={3}>\n              <DoctorProfileSidebar doctorDetail={doctorDetail} />\n            </Col>\n            <Col sm={12} lg={9}>\n              {width < 992 ? (\n                <MobileDoctorProfile doctorDetail={doctorDetail} />\n              ) : null}\n              <DoctorProfilemain\n                doctorDetail={doctorDetail}\n                doctorid={doctorid}\n              />\n            </Col>\n          </Row>\n        ) : (\n          <div className={Style.loader}>\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default DoctorProfileSchedule;\n"]},"metadata":{},"sourceType":"module"}