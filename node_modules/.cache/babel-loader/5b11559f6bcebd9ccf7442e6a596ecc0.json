{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V9/c2md-web_react/src/components/GettingInTouch/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Style from \"./GettingInTouch.module.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport CountryJson from \"../../constants/country.json\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport { useSelector } from \"react-redux\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GettingInTouch({\n  progressIncrementer,\n  Store_formData,\n  appoinment_form\n}) {\n  _s();\n\n  var _user$mobileNumber, _user$mobileNumber2, _user$mobileNumber2$s, _appoinment_form$remi, _appoinment_form$remi2, _usrNo$, _appoinment_form$alte, _appoinment_form$alte2;\n\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const user = useSelector(state => state.login.user);\n  let usrNo = user === null || user === void 0 ? void 0 : (_user$mobileNumber = user.mobileNumber) === null || _user$mobileNumber === void 0 ? void 0 : _user$mobileNumber.split(\" \");\n  let userPhoneNo = appoinment_form.reminderNumber == \"\" ? (user === null || user === void 0 ? void 0 : user.mobileNumber) == \"\" | (user === null || user === void 0 ? void 0 : user.mobileNumber) == undefined ? \"\" : user === null || user === void 0 ? void 0 : (_user$mobileNumber2 = user.mobileNumber) === null || _user$mobileNumber2 === void 0 ? void 0 : (_user$mobileNumber2$s = _user$mobileNumber2.slice(1)) === null || _user$mobileNumber2$s === void 0 ? void 0 : _user$mobileNumber2$s.replace(/ /g, \"\") : (_appoinment_form$remi = appoinment_form.reminderNumber) === null || _appoinment_form$remi === void 0 ? void 0 : (_appoinment_form$remi2 = _appoinment_form$remi.slice(3)) === null || _appoinment_form$remi2 === void 0 ? void 0 : _appoinment_form$remi2.replace(/ /g, \"\");\n  const [mainNumber, setMainNumber] = useState((appoinment_form === null || appoinment_form === void 0 ? void 0 : appoinment_form.alternativeNumber) == undefined || (appoinment_form === null || appoinment_form === void 0 ? void 0 : appoinment_form.alternativeNumber) == \"\" ? true : false);\n  const [phoneNum, setPhoneNum] = useState(userPhoneNo);\n  const [countryCode, setCountrycode] = useState(appoinment_form.reminderNumber == \"\" ? (user === null || user === void 0 ? void 0 : user.mobileNumber) == \"\" | (user === null || user === void 0 ? void 0 : user.mobileNumber) == undefined ? \"91\" : (_usrNo$ = usrNo[0]) === null || _usrNo$ === void 0 ? void 0 : _usrNo$.slice(1) : appoinment_form.countryCode);\n  const [alternativeCode, setAlterCode] = useState(appoinment_form.alternativeCode == \"\" ? \"\" : appoinment_form.alternativeCode);\n  const [alterPhoneNUmber, setAlterPhoneNUmber] = useState(appoinment_form.alternativeNumber == \"\" ? \"\" : (_appoinment_form$alte = appoinment_form.alternativeNumber) === null || _appoinment_form$alte === void 0 ? void 0 : (_appoinment_form$alte2 = _appoinment_form$alte.slice(3)) === null || _appoinment_form$alte2 === void 0 ? void 0 : _appoinment_form$alte2.replace(/ /g, \"\"));\n  const brands = [\"WhatsApp\", \"Telegram\", \"Botim\", \"Viber\", \"Signal\", \"Skype\", \"IMO\", \"Others\"];\n  const [brand, setBrand] = useState(appoinment_form.Channel == undefined || appoinment_form.Channel == \"\" ? \"\" : appoinment_form.Channel);\n  const dispatch = useDispatch();\n  const errorInit = {\n    phoneNum: false,\n    alterPhoneNumber: false,\n    brand: false,\n    error: false\n  };\n  const [error, setError] = useState(errorInit);\n  const regexp = /^[0-9\\b]+$/;\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n\n      if (phoneNum == \"\") {\n        errorTemp = { ...errorTemp,\n          phoneNum: true,\n          error: true,\n          phoneErrorMsg: \"Please enter Mobile Number\"\n        };\n      } else if (!(phoneNum === null || phoneNum === void 0 ? void 0 : phoneNum.match(/^[1-9]{1}[0-9]{11}$/))) {\n        errorTemp = { ...errorTemp,\n          phoneNum: true,\n          error: true,\n          phoneErrorMsg: `There seems to be some issue with the mobile number you entered.\n        Please check`\n        };\n      }\n\n      if (!mainNumber) {\n        if (alterPhoneNUmber == \"\") {\n          errorTemp = { ...errorTemp,\n            alterPhoneNUmber: true,\n            error: true,\n            alterPhoneErrorMsg: \"Please enter alternative mobile number\"\n          };\n        } else if (!(alterPhoneNUmber === null || alterPhoneNUmber === void 0 ? void 0 : alterPhoneNUmber.match(/^[1-9]{1}[0-9]{11}$/))) {\n          errorTemp = { ...errorTemp,\n            alterPhoneNUmber: true,\n            error: true,\n            alterPhoneErrorMsg: `There seems to be some issue with the mobile number your\n          entered. Please check`\n          };\n        } else if (phoneNum == alterPhoneNUmber) {\n          errorTemp = { ...errorTemp,\n            alterPhoneNUmber: true,\n            error: true,\n            alterPhoneErrorMsg: `Reminder number and alternative mobile number\n            are same. Please check`\n          };\n        }\n\n        if (brand == \"\") {\n          errorTemp = { ...errorTemp,\n            brand: true,\n            error: true\n          };\n        }\n      }\n\n      setError({ ...errorTemp,\n        error: true\n      });\n    }\n  }, [phoneNum, alterPhoneNUmber, brand]);\n\n  const contine = () => {\n    let errorTemp = errorInit;\n\n    if (phoneNum == undefined || phoneNum == \"\") {\n      errorTemp = { ...errorTemp,\n        phoneNum: true,\n        error: true,\n        phoneErrorMsg: \"Please enter mobile number\"\n      };\n    } else if (!(phoneNum === null || phoneNum === void 0 ? void 0 : phoneNum.match(/^[1-9]{1}[0-9]{11}$/))) {\n      errorTemp = { ...errorTemp,\n        phoneNum: true,\n        error: true,\n        phoneErrorMsg: `There seems to be some issue with the mobile number you entered.\n      Please check`\n      };\n    }\n\n    if (!mainNumber) {\n      if (!(alterPhoneNUmber === null || alterPhoneNUmber === void 0 ? void 0 : alterPhoneNUmber.match(/^[1-9]{1}[0-9]{11}$/))) {\n        errorTemp = { ...errorTemp,\n          alterPhoneNUmber: true,\n          error: true,\n          alterPhoneErrorMsg: `There seems to be some issue with the mobile number your\n        entered. Please check`\n        };\n      } else if (phoneNum == alterPhoneNUmber) {\n        errorTemp = { ...errorTemp,\n          alterPhoneNUmber: true,\n          error: true,\n          alterPhoneErrorMsg: `Reminder number and alternative mobile number\n          are same. Please check`\n        };\n      }\n\n      if (brand == \"\") {\n        errorTemp = { ...errorTemp,\n          brand: true,\n          error: true\n        };\n      }\n    }\n\n    setError(errorTemp);\n\n    if (!errorTemp.error) {\n      let mobileNo = phoneNum === null || phoneNum === void 0 ? void 0 : phoneNum.slice(countryCode === null || countryCode === void 0 ? void 0 : countryCode.length);\n      let alternativeNO = alterPhoneNUmber === null || alterPhoneNUmber === void 0 ? void 0 : alterPhoneNUmber.slice(alternativeCode === null || alternativeCode === void 0 ? void 0 : alternativeCode.length);\n\n      if (mainNumber) {\n        dispatch(Store_formData({ ...appoinment_form,\n          reminderNumber: `%2B${countryCode} ${mobileNo}`,\n          countryCode: countryCode,\n          alternativeNumber: \"\",\n          Channel: \"\"\n        }));\n      } else {\n        dispatch(Store_formData({ ...appoinment_form,\n          reminderNumber: `%2B${countryCode} ${mobileNo}`,\n          alternativeNumber: `%2B${alternativeCode} ${alternativeNO}`,\n          alternativeCode: alternativeCode,\n          Channel: brand\n        }));\n      }\n\n      progressIncrementer();\n    }\n  };\n\n  const onblurAction = () => {\n    if (phoneNum == alterPhoneNUmber) {\n      setError({ ...error,\n        alterPhoneNumber: true,\n        error: true,\n        alterPhoneErrorMsg: `Reminder number and alternative mobile number\n        are same. Please check`\n      });\n    }\n  };\n\n  const handleOnChange = (value, data, event, formattedValue) => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: Style.getting_touch_main_heading,\n      children: \"How do we get in touch with you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: Style.getting_touch_label,\n        children: \"Mobile Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mob-flag-wrp${\" \"}${Style.gettinginfo_phoneinput}${\" \"}${error.phoneNum && Style.inputError}`,\n        children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n          country: \"in\",\n          value: phoneNum,\n          name: \"mobileNumber\",\n          autoFormat: false,\n          countryCodeEditable: false,\n          onChange: (value, data, event, formattedValue) => {\n            setPhoneNum(value);\n            setCountrycode(data === null || data === void 0 ? void 0 : data.dialCode);\n            handleOnChange(value, data, event, formattedValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), error.phoneNum && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.error,\n        children: [error.phoneErrorMsg, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.getting_touch_checkbox_align,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"checkboxId\",\n        id: \"get_touch_check\",\n        placeholder: \"\",\n        value: mainNumber,\n        checked: mainNumber,\n        onChange: e => setMainNumber(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"get_touch_check\",\n        className: Style.getting_touch_label,\n        children: \"This is my number on WhatsApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), !mainNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.getting_touch_medicine_details,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.getting_touch_label,\n          children: \"Alternative number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mob-flag-wrp ${\" \"}${Style.gettinginfo_phoneinput}${\" \"}${error.alterPhoneNUmber && Style.inputError}`,\n          children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n            style: {\n              borderRadious: \"10px\"\n            },\n            country: \"in\",\n            value: alterPhoneNUmber,\n            name: \"mobileNumber\",\n            autoFormat: false,\n            countryCodeEditable: false,\n            onChange: (value, data, event, formattedValue) => {\n              setAlterPhoneNUmber(value);\n              setAlterCode(data === null || data === void 0 ? void 0 : data.dialCode);\n              handleOnChange(value, data, event, formattedValue);\n            },\n            onBlur: e => onblurAction(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), error.alterPhoneNUmber && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.error,\n          children: error.alterPhoneErrorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: Style.getting_touch_label,\n          children: \"What is the Communication channel?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n          error: error.brand,\n          DataItem: brands,\n          onClick: e => {\n            setBrand(e);\n          },\n          defaultPlaceH: brand != \"\",\n          selectedData: brand != \"\" ? brand : \"Enter Channel/brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), error.brand && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Style.error,\n          children: \"Please select the communication channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${Style.btn_floating} btn_floating`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: Style.getting_touch_continue_button,\n        onClick: contine,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GettingInTouch, \"jUkb1X/2/eCoxQdhOz+2W/c1lug=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = GettingInTouch;\nexport default GettingInTouch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GettingInTouch\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V9/c2md-web_react/src/components/GettingInTouch/index.js"],"names":["React","useState","useEffect","Style","Button","useDispatch","CountryJson","CustomDropDown","useSelector","PhoneInput","GettingInTouch","progressIncrementer","Store_formData","appoinment_form","document","querySelector","scrollTo","user","state","login","usrNo","mobileNumber","split","userPhoneNo","reminderNumber","undefined","slice","replace","mainNumber","setMainNumber","alternativeNumber","phoneNum","setPhoneNum","countryCode","setCountrycode","alternativeCode","setAlterCode","alterPhoneNUmber","setAlterPhoneNUmber","brands","brand","setBrand","Channel","dispatch","errorInit","alterPhoneNumber","error","setError","regexp","errorTemp","phoneErrorMsg","match","alterPhoneErrorMsg","contine","mobileNo","length","alternativeNO","onblurAction","handleOnChange","value","data","event","formattedValue","getting_touch_main_heading","getting_touch_label","gettinginfo_phoneinput","inputError","dialCode","getting_touch_checkbox_align","e","target","checked","getting_touch_medicine_details","borderRadious","btn_floating","getting_touch_continue_button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,mCAAP;;;;AAEA,SAASC,cAAT,CAAwB;AACtBC,EAAAA,mBADsB;AAEtBC,EAAAA,cAFsB;AAGtBC,EAAAA;AAHsB,CAAxB,EAIG;AAAA;;AAAA;;AACDX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,QAA/B,CAAwC,CAAxC,EAA2C,CAA3C;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMC,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,IAAxB,CAAxB;AAEA,MAAIG,KAAK,GAAGH,IAAH,aAAGA,IAAH,6CAAGA,IAAI,CAAEI,YAAT,uDAAG,mBAAoBC,KAApB,CAA0B,GAA1B,CAAZ;AAEA,MAAIC,WAAW,GACbV,eAAe,CAACW,cAAhB,IAAkC,EAAlC,GACK,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,YAAN,KAAsB,EAAvB,GAA8B,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,YAAN,KAAsBI,SAApD,GACE,EADF,GAEER,IAFF,aAEEA,IAFF,8CAEEA,IAAI,CAAEI,YAFR,iFAEE,oBAAoBK,KAApB,CAA0B,CAA1B,CAFF,0DAEE,sBAA8BC,OAA9B,CAAsC,IAAtC,EAA4C,EAA5C,CAHN,4BAIId,eAAe,CAACW,cAJpB,oFAII,sBAAgCE,KAAhC,CAAsC,CAAtC,CAJJ,2DAII,uBAA0CC,OAA1C,CAAkD,IAAlD,EAAwD,EAAxD,CALN;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAC1C,CAAAY,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEiB,iBAAjB,KAAsCL,SAAtC,IACE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEiB,iBAAjB,KAAsC,EADxC,GAEI,IAFJ,GAGI,KAJsC,CAA5C;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAACsB,WAAD,CAAxC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAC5CY,eAAe,CAACW,cAAhB,IAAkC,EAAlC,GACK,CAAAP,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,YAAN,KAAsB,EAAvB,GAA8B,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,YAAN,KAAsBI,SAApD,GACE,IADF,cAEEL,KAAK,CAAC,CAAD,CAFP,4CAEE,QAAUM,KAAV,CAAgB,CAAhB,CAHN,GAIIb,eAAe,CAACoB,WALwB,CAA9C;AAOA,QAAM,CAACE,eAAD,EAAkBC,YAAlB,IAAkCnC,QAAQ,CAC9CY,eAAe,CAACsB,eAAhB,IAAmC,EAAnC,GAAwC,EAAxC,GAA6CtB,eAAe,CAACsB,eADf,CAAhD;AAGA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CrC,QAAQ,CACtDY,eAAe,CAACiB,iBAAhB,IAAqC,EAArC,GACI,EADJ,4BAEIjB,eAAe,CAACiB,iBAFpB,oFAEI,sBAAmCJ,KAAnC,CAAyC,CAAzC,CAFJ,2DAEI,uBAA6CC,OAA7C,CAAqD,IAArD,EAA2D,EAA3D,CAHkD,CAAxD;AAMA,QAAMY,MAAM,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,OAAzB,EAAiC,OAAjC,EAAyC,QAAzC,EAAkD,OAAlD,EAA0D,KAA1D,EAAgE,QAAhE,CAAf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxC,QAAQ,CAChCY,eAAe,CAAC6B,OAAhB,IAA2BjB,SAA3B,IAAwCZ,eAAe,CAAC6B,OAAhB,IAA2B,EAAnE,GACI,EADJ,GAEI7B,eAAe,CAAC6B,OAHY,CAAlC;AAKA,QAAMC,QAAQ,GAAGtC,WAAW,EAA5B;AACA,QAAMuC,SAAS,GAAG;AAChBb,IAAAA,QAAQ,EAAE,KADM;AAEhBc,IAAAA,gBAAgB,EAAE,KAFF;AAGhBL,IAAAA,KAAK,EAAE,KAHS;AAIhBM,IAAAA,KAAK,EAAE;AAJS,GAAlB;AAMA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoB9C,QAAQ,CAAC2C,SAAD,CAAlC;AACA,QAAMI,MAAM,GAAG,YAAf;AACA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4C,KAAK,CAACA,KAAV,EAAiB;AACf,UAAIG,SAAS,GAAGL,SAAhB;;AACA,UAAIb,QAAQ,IAAI,EAAhB,EAAoB;AAClBkB,QAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVlB,UAAAA,QAAQ,EAAE,IAFA;AAGVe,UAAAA,KAAK,EAAE,IAHG;AAIVI,UAAAA,aAAa,EAAE;AAJL,SAAZ;AAMD,OAPD,MAOO,IAAI,EAACnB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEoB,KAAV,CAAgB,qBAAhB,CAAD,CAAJ,EAA6C;AAClDF,QAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVlB,UAAAA,QAAQ,EAAE,IAFA;AAGVe,UAAAA,KAAK,EAAE,IAHG;AAIVI,UAAAA,aAAa,EAAG;AAC1B;AALoB,SAAZ;AAOD;;AAED,UAAI,CAACtB,UAAL,EAAiB;AACf,YAAIS,gBAAgB,IAAI,EAAxB,EAA4B;AAC1BY,UAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVZ,YAAAA,gBAAgB,EAAE,IAFR;AAGVS,YAAAA,KAAK,EAAE,IAHG;AAIVM,YAAAA,kBAAkB,EAAE;AAJV,WAAZ;AAMD,SAPD,MAOO,IAAI,EAACf,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAEc,KAAlB,CAAwB,qBAAxB,CAAD,CAAJ,EAAqD;AAC1DF,UAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVZ,YAAAA,gBAAgB,EAAE,IAFR;AAGVS,YAAAA,KAAK,EAAE,IAHG;AAIVM,YAAAA,kBAAkB,EAAG;AACjC;AALsB,WAAZ;AAOD,SARM,MAQA,IAAIrB,QAAQ,IAAIM,gBAAhB,EAAkC;AACvCY,UAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVZ,YAAAA,gBAAgB,EAAE,IAFR;AAGVS,YAAAA,KAAK,EAAE,IAHG;AAIVM,YAAAA,kBAAkB,EAAG;AACjC;AALsB,WAAZ;AAOD;;AACD,YAAIZ,KAAK,IAAI,EAAb,EAAiB;AACfS,UAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBT,YAAAA,KAAK,EAAE,IAAvB;AAA6BM,YAAAA,KAAK,EAAE;AAApC,WAAZ;AACD;AACF;;AAEDC,MAAAA,QAAQ,CAAC,EAAE,GAAGE,SAAL;AAAgBH,QAAAA,KAAK,EAAE;AAAvB,OAAD,CAAR;AACD;AACF,GApDQ,EAoDN,CAACf,QAAD,EAAWM,gBAAX,EAA6BG,KAA7B,CApDM,CAAT;;AAsDA,QAAMa,OAAO,GAAG,MAAM;AACpB,QAAIJ,SAAS,GAAGL,SAAhB;;AAEA,QAAIb,QAAQ,IAAIN,SAAZ,IAAyBM,QAAQ,IAAI,EAAzC,EAA6C;AAC3CkB,MAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVlB,QAAAA,QAAQ,EAAE,IAFA;AAGVe,QAAAA,KAAK,EAAE,IAHG;AAIVI,QAAAA,aAAa,EAAE;AAJL,OAAZ;AAMD,KAPD,MAOO,IAAI,EAACnB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEoB,KAAV,CAAgB,qBAAhB,CAAD,CAAJ,EAA6C;AAClDF,MAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVlB,QAAAA,QAAQ,EAAE,IAFA;AAGVe,QAAAA,KAAK,EAAE,IAHG;AAIVI,QAAAA,aAAa,EAAG;AACxB;AALkB,OAAZ;AAOD;;AAED,QAAI,CAACtB,UAAL,EAAiB;AACd,UAAI,EAACS,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAEc,KAAlB,CAAwB,qBAAxB,CAAD,CAAJ,EAAqD;AACpDF,QAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVZ,UAAAA,gBAAgB,EAAE,IAFR;AAGVS,UAAAA,KAAK,EAAE,IAHG;AAIVM,UAAAA,kBAAkB,EAAG;AAC/B;AALoB,SAAZ;AAOD,OARA,MAQM,IAAIrB,QAAQ,IAAIM,gBAAhB,EAAkC;AACvCY,QAAAA,SAAS,GAAG,EACV,GAAGA,SADO;AAEVZ,UAAAA,gBAAgB,EAAE,IAFR;AAGVS,UAAAA,KAAK,EAAE,IAHG;AAIVM,UAAAA,kBAAkB,EAAG;AAC/B;AALoB,SAAZ;AAOD;;AACD,UAAIZ,KAAK,IAAI,EAAb,EAAiB;AACfS,QAAAA,SAAS,GAAG,EAAE,GAAGA,SAAL;AAAgBT,UAAAA,KAAK,EAAE,IAAvB;AAA6BM,UAAAA,KAAK,EAAE;AAApC,SAAZ;AACD;AACF;;AAEDC,IAAAA,QAAQ,CAACE,SAAD,CAAR;;AAEA,QAAI,CAACA,SAAS,CAACH,KAAf,EAAsB;AACpB,UAAIQ,QAAQ,GAAGvB,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEL,KAAV,CAAgBO,WAAhB,aAAgBA,WAAhB,uBAAgBA,WAAW,CAAEsB,MAA7B,CAAf;AACA,UAAIC,aAAa,GAAGnB,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEX,KAAlB,CAAwBS,eAAxB,aAAwBA,eAAxB,uBAAwBA,eAAe,CAAEoB,MAAzC,CAApB;;AAEA,UAAI3B,UAAJ,EAAgB;AACde,QAAAA,QAAQ,CACN/B,cAAc,CAAC,EACb,GAAGC,eADU;AAEbW,UAAAA,cAAc,EAAG,MAAKS,WAAY,IAAGqB,QAAS,EAFjC;AAGbrB,UAAAA,WAAW,EAAEA,WAHA;AAIbH,UAAAA,iBAAiB,EAAE,EAJN;AAKbY,UAAAA,OAAO,EAAE;AALI,SAAD,CADR,CAAR;AASD,OAVD,MAUO;AACLC,QAAAA,QAAQ,CACN/B,cAAc,CAAC,EACb,GAAGC,eADU;AAEbW,UAAAA,cAAc,EAAG,MAAKS,WAAY,IAAGqB,QAAS,EAFjC;AAGbxB,UAAAA,iBAAiB,EAAG,MAAKK,eAAgB,IAAGqB,aAAc,EAH7C;AAIbrB,UAAAA,eAAe,EAAEA,eAJJ;AAKbO,UAAAA,OAAO,EAAEF;AALI,SAAD,CADR,CAAR;AASD;;AAED7B,MAAAA,mBAAmB;AACpB;AACF,GAzED;;AA2EA,QAAM8C,YAAY,GAAG,MAAM;AACzB,QAAI1B,QAAQ,IAAIM,gBAAhB,EAAkC;AAChCU,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPD,QAAAA,gBAAgB,EAAE,IAFX;AAGPC,QAAAA,KAAK,EAAE,IAHA;AAIPM,QAAAA,kBAAkB,EAAG;AAC7B;AALe,OAAD,CAAR;AAOD;AACF,GAVD;;AAWA,QAAMM,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,cAArB,KAAwC,CAAE,CAAjE;;AACA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAE3D,KAAK,CAAC4D,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAO,QAAA,SAAS,EAAE5D,KAAK,CAAC6D,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAG,eAAc,GAAI,GAAE7D,KAAK,CAAC8D,sBAAuB,GAAE,GAAI,GACjEnB,KAAK,CAACf,QAAN,IAAkB5B,KAAK,CAAC+D,UACzB,EAHH;AAAA,+BAKE,QAAC,UAAD;AACE,UAAA,OAAO,EAAE,IADX;AAEE,UAAA,KAAK,EAAEnC,QAFT;AAGE,UAAA,IAAI,EAAC,cAHP;AAIE,UAAA,UAAU,EAAE,KAJd;AAKE,UAAA,mBAAmB,EAAE,KALvB;AAME,UAAA,QAAQ,EAAE,CAAC4B,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,cAArB,KAAwC;AAChD9B,YAAAA,WAAW,CAAC2B,KAAD,CAAX;AACAzB,YAAAA,cAAc,CAAC0B,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,QAAP,CAAd;AACAT,YAAAA,cAAc,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,cAArB,CAAd;AACD;AAVH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAFF,EAoBGhB,KAAK,CAACf,QAAN,iBACC;AAAG,QAAA,SAAS,EAAE5B,KAAK,CAAC2C,KAApB;AAAA,mBAA4BA,KAAK,CAACI,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eA4BE;AAAK,MAAA,SAAS,EAAE/C,KAAK,CAACiE,4BAAtB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,EAAE,EAAC,iBAHL;AAIE,QAAA,WAAW,EAAC,EAJd;AAKE,QAAA,KAAK,EAAExC,UALT;AAME,QAAA,OAAO,EAAEA,UANX;AAOE,QAAA,QAAQ,EAAGyC,CAAD,IAAOxC,aAAa,CAACwC,CAAC,CAACC,MAAF,CAASC,OAAV;AAPhC;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAO,QAAA,GAAG,EAAC,iBAAX;AAA6B,QAAA,SAAS,EAAEpE,KAAK,CAAC6D,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,EA2CG,CAACpC,UAAD,iBACC;AAAK,MAAA,SAAS,EAAEzB,KAAK,CAACqE,8BAAtB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAErE,KAAK,CAAC6D,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,SAAS,EAAG,gBAAe,GAAI,GAC7B7D,KAAK,CAAC8D,sBACP,GAAE,GAAI,GAAEnB,KAAK,CAACT,gBAAN,IAA0BlC,KAAK,CAAC+D,UAAW,EAHtD;AAAA,iCAKE,QAAC,UAAD;AACA,YAAA,KAAK,EAAE;AAACO,cAAAA,aAAa,EAAC;AAAf,aADP;AAEE,YAAA,OAAO,EAAE,IAFX;AAGE,YAAA,KAAK,EAAEpC,gBAHT;AAIE,YAAA,IAAI,EAAC,cAJP;AAKE,YAAA,UAAU,EAAE,KALd;AAME,YAAA,mBAAmB,EAAE,KANvB;AAOE,YAAA,QAAQ,EAAE,CAACsB,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,cAArB,KAAwC;AAChDxB,cAAAA,mBAAmB,CAACqB,KAAD,CAAnB;AACAvB,cAAAA,YAAY,CAACwB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,QAAP,CAAZ;AACAT,cAAAA,cAAc,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,cAArB,CAAd;AACD,aAXH;AAYE,YAAA,MAAM,EAAGO,CAAD,IAAOZ,YAAY,CAACY,CAAD;AAZ7B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAJF,EAwBGvB,KAAK,CAACT,gBAAN,iBACC;AAAG,UAAA,SAAS,EAAElC,KAAK,CAAC2C,KAApB;AAAA,oBAA4BA,KAAK,CAACM;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA6BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAEjD,KAAK,CAAC6D,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,cAAD;AACE,UAAA,KAAK,EAAElB,KAAK,CAACN,KADf;AAEE,UAAA,QAAQ,EAAED,MAFZ;AAGE,UAAA,OAAO,EAAG8B,CAAD,IAAO;AACd5B,YAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACD,WALH;AAME,UAAA,aAAa,EAAE7B,KAAK,IAAI,EAN1B;AAOE,UAAA,YAAY,EAAEA,KAAK,IAAI,EAAT,GAAcA,KAAd,GAAsB;AAPtC;AAAA;AAAA;AAAA;AAAA,gBAJF,EAkBGM,KAAK,CAACN,KAAN,iBACC;AAAG,UAAA,SAAS,EAAErC,KAAK,CAAC2C,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CJ,eAmGE;AAAK,MAAA,SAAS,EAAG,GAAE3C,KAAK,CAACuE,YAAa,eAAtC;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEvE,KAAK,CAACwE,6BADnB;AAEE,QAAA,OAAO,EAAEtB,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnGF;AAAA,kBADF;AA8GD;;GAnTQ3C,c;UAQMF,W,EAuCIH,W;;;KA/CVK,c;AAqTT,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Style from \"./GettingInTouch.module.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport CountryJson from \"../../constants/country.json\";\nimport CustomDropDown from \"../Common/CustomDropDown\";\nimport { useSelector } from \"react-redux\";\n\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nfunction GettingInTouch({\n  progressIncrementer,\n  Store_formData,\n  appoinment_form,\n}) {\n  useEffect(() => {\n    document.querySelector(\"body\").scrollTo(0, 0);\n  }, []);\n  const user = useSelector((state) => state.login.user);\n\n  let usrNo = user?.mobileNumber?.split(\" \");\n\n  let userPhoneNo =\n    appoinment_form.reminderNumber == \"\"\n      ? (user?.mobileNumber == \"\") | (user?.mobileNumber == undefined)\n        ? \"\"\n        : user?.mobileNumber?.slice(1)?.replace(/ /g, \"\")\n      : appoinment_form.reminderNumber?.slice(3)?.replace(/ /g, \"\");\n  const [mainNumber, setMainNumber] = useState(\n    appoinment_form?.alternativeNumber == undefined ||\n      appoinment_form?.alternativeNumber == \"\"\n      ? true\n      : false\n  );\n  const [phoneNum, setPhoneNum] = useState(userPhoneNo);\n  const [countryCode, setCountrycode] = useState(\n    appoinment_form.reminderNumber == \"\"\n      ? (user?.mobileNumber == \"\") | (user?.mobileNumber == undefined)\n        ? \"91\"\n        : usrNo[0]?.slice(1)\n      : appoinment_form.countryCode\n  );\n  const [alternativeCode, setAlterCode] = useState(\n    appoinment_form.alternativeCode == \"\" ? \"\" : appoinment_form.alternativeCode\n  );\n  const [alterPhoneNUmber, setAlterPhoneNUmber] = useState(\n    appoinment_form.alternativeNumber == \"\"\n      ? \"\"\n      : appoinment_form.alternativeNumber?.slice(3)?.replace(/ /g, \"\")\n  );\n\n  const brands = [\"WhatsApp\", \"Telegram\", \"Botim\",\"Viber\",\"Signal\",\"Skype\",\"IMO\",\"Others\"];\n  const [brand, setBrand] = useState(\n    appoinment_form.Channel == undefined || appoinment_form.Channel == \"\"\n      ? \"\"\n      : appoinment_form.Channel\n  );\n  const dispatch = useDispatch();\n  const errorInit = {\n    phoneNum: false,\n    alterPhoneNumber: false,\n    brand: false,\n    error: false,\n  };\n  const [error, setError] = useState(errorInit);\n  const regexp = /^[0-9\\b]+$/;\n  useEffect(() => {\n    if (error.error) {\n      let errorTemp = errorInit;\n      if (phoneNum == \"\") {\n        errorTemp = {\n          ...errorTemp,\n          phoneNum: true,\n          error: true,\n          phoneErrorMsg: \"Please enter Mobile Number\",\n        };\n      } else if (!phoneNum?.match(/^[1-9]{1}[0-9]{11}$/)) {\n        errorTemp = {\n          ...errorTemp,\n          phoneNum: true,\n          error: true,\n          phoneErrorMsg: `There seems to be some issue with the mobile number you entered.\n        Please check`,\n        };\n      }\n\n      if (!mainNumber) {\n        if (alterPhoneNUmber == \"\") {\n          errorTemp = {\n            ...errorTemp,\n            alterPhoneNUmber: true,\n            error: true,\n            alterPhoneErrorMsg: \"Please enter alternative mobile number\",\n          };\n        } else if (!alterPhoneNUmber?.match(/^[1-9]{1}[0-9]{11}$/)) {\n          errorTemp = {\n            ...errorTemp,\n            alterPhoneNUmber: true,\n            error: true,\n            alterPhoneErrorMsg: `There seems to be some issue with the mobile number your\n          entered. Please check`,\n          };\n        } else if (phoneNum == alterPhoneNUmber) {\n          errorTemp = {\n            ...errorTemp,\n            alterPhoneNUmber: true,\n            error: true,\n            alterPhoneErrorMsg: `Reminder number and alternative mobile number\n            are same. Please check`,\n          };\n        }\n        if (brand == \"\") {\n          errorTemp = { ...errorTemp, brand: true, error: true };\n        }\n      }\n\n      setError({ ...errorTemp, error: true });\n    }\n  }, [phoneNum, alterPhoneNUmber, brand]);\n\n  const contine = () => {\n    let errorTemp = errorInit;\n\n    if (phoneNum == undefined || phoneNum == \"\") {\n      errorTemp = {\n        ...errorTemp,\n        phoneNum: true,\n        error: true,\n        phoneErrorMsg: \"Please enter mobile number\",\n      };\n    } else if (!phoneNum?.match(/^[1-9]{1}[0-9]{11}$/)) {\n      errorTemp = {\n        ...errorTemp,\n        phoneNum: true,\n        error: true,\n        phoneErrorMsg: `There seems to be some issue with the mobile number you entered.\n      Please check`,\n      };\n    }\n\n    if (!mainNumber) {\n       if (!alterPhoneNUmber?.match(/^[1-9]{1}[0-9]{11}$/)) {\n        errorTemp = {\n          ...errorTemp,\n          alterPhoneNUmber: true,\n          error: true,\n          alterPhoneErrorMsg: `There seems to be some issue with the mobile number your\n        entered. Please check`,\n        };\n      } else if (phoneNum == alterPhoneNUmber) {\n        errorTemp = {\n          ...errorTemp,\n          alterPhoneNUmber: true,\n          error: true,\n          alterPhoneErrorMsg: `Reminder number and alternative mobile number\n          are same. Please check`,\n        };\n      }\n      if (brand == \"\") {\n        errorTemp = { ...errorTemp, brand: true, error: true };\n      }\n    }\n\n    setError(errorTemp);\n\n    if (!errorTemp.error) {\n      let mobileNo = phoneNum?.slice(countryCode?.length);\n      let alternativeNO = alterPhoneNUmber?.slice(alternativeCode?.length);\n\n      if (mainNumber) {\n        dispatch(\n          Store_formData({\n            ...appoinment_form,\n            reminderNumber: `%2B${countryCode} ${mobileNo}`,\n            countryCode: countryCode,\n            alternativeNumber: \"\",\n            Channel: \"\",\n          })\n        );\n      } else {\n        dispatch(\n          Store_formData({\n            ...appoinment_form,\n            reminderNumber: `%2B${countryCode} ${mobileNo}`,\n            alternativeNumber: `%2B${alternativeCode} ${alternativeNO}`,\n            alternativeCode: alternativeCode,\n            Channel: brand,\n          })\n        );\n      }\n\n      progressIncrementer();\n    }\n  };\n\n  const onblurAction = () => {\n    if (phoneNum == alterPhoneNUmber) {\n      setError({\n        ...error,\n        alterPhoneNumber: true,\n        error: true,\n        alterPhoneErrorMsg: `Reminder number and alternative mobile number\n        are same. Please check`,\n      });\n    }\n  };\n  const handleOnChange = (value, data, event, formattedValue) => {};\n  return (\n    <>\n      <h3 className={Style.getting_touch_main_heading}>\n        How do we get in touch with you?\n      </h3>\n      <div>\n        <label className={Style.getting_touch_label}>Mobile Number</label>\n        <div\n          className={`mob-flag-wrp${\" \"}${Style.gettinginfo_phoneinput}${\" \"}${\n            error.phoneNum && Style.inputError\n          }`}\n        >\n          <PhoneInput\n            country={\"in\"}\n            value={phoneNum}\n            name=\"mobileNumber\"\n            autoFormat={false}\n            countryCodeEditable={false}\n            onChange={(value, data, event, formattedValue) => {\n              setPhoneNum(value);\n              setCountrycode(data?.dialCode);\n              handleOnChange(value, data, event, formattedValue);\n            }}\n          />\n        </div>\n        {error.phoneNum && (\n          <p className={Style.error}>{error.phoneErrorMsg} </p>\n        )}\n      </div>\n      <div className={Style.getting_touch_checkbox_align}>\n        <input\n          type=\"checkbox\"\n          name=\"checkboxId\"\n          id=\"get_touch_check\"\n          placeholder=\"\"\n          value={mainNumber}\n          checked={mainNumber}\n          onChange={(e) => setMainNumber(e.target.checked)}\n        />\n        <label for=\"get_touch_check\" className={Style.getting_touch_label}>\n          This is my number on WhatsApp\n        </label>\n      </div>\n\n      {!mainNumber && (\n        <div className={Style.getting_touch_medicine_details}>\n          <div className=\"form-group\">\n            <label className={Style.getting_touch_label}>\n              Alternative number\n            </label>\n            <div\n              className={`mob-flag-wrp ${\" \"}${\n                Style.gettinginfo_phoneinput\n              }${\" \"}${error.alterPhoneNUmber && Style.inputError}`}\n            >\n              <PhoneInput\n              style={{borderRadious:\"10px\"}}\n                country={\"in\"}\n                value={alterPhoneNUmber}\n                name=\"mobileNumber\"\n                autoFormat={false}\n                countryCodeEditable={false}\n                onChange={(value, data, event, formattedValue) => {\n                  setAlterPhoneNUmber(value);\n                  setAlterCode(data?.dialCode);\n                  handleOnChange(value, data, event, formattedValue);\n                }}\n                onBlur={(e) => onblurAction(e)}\n              />\n            </div>\n            {error.alterPhoneNUmber && (\n              <p className={Style.error}>{error.alterPhoneErrorMsg}</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label className={Style.getting_touch_label}>\n              What is the Communication channel?\n            </label>\n            <CustomDropDown\n              error={error.brand}\n              DataItem={brands}\n              onClick={(e) => {\n                setBrand(e);\n              }}\n              defaultPlaceH={brand != \"\"}\n              selectedData={brand != \"\" ? brand : \"Enter Channel/brand\"}\n            />\n            {/* <select\n                      className={Style.getting_touch_frequency_select_field}\n                      name=\"frequency\">\n                      <option value=\"\">Enter Channel/brand</option>\n                  </select> */}\n            {error.brand && (\n              <p className={Style.error}>\n                Please select the communication channel\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n      <div className={`${Style.btn_floating} btn_floating`}>\n        <Button\n          className={Style.getting_touch_continue_button}\n          onClick={contine}\n        >\n          Continue\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default GettingInTouch;\n"]},"metadata":{},"sourceType":"module"}