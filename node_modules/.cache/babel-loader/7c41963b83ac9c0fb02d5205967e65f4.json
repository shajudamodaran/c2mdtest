{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaju Damodaran\\\\Documents\\\\V9\\\\c2md-web_react\\\\src\\\\components\\\\DoctorprofileSchedule\\\\MobileSchedule\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"react-multi-carousel\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport AppointmentOnRequest from \"../AppointmentOnRequest\";\nimport { fetch_appointmentSlot, fetch_appointmentTypes, fetch_more_appointmentSlot } from \"../../../actions/AppointmentSlotAction\";\nimport Assets from \"../../Layout/Assets\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Style from \"./MobileSchedule.module.scss\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Store_formData, reset_booking } from \"../../../actions/BookAppoinmentAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MobileSchedule({\n  responsive,\n  Typeofappointment,\n  doctorId,\n  DayCounter\n}) {\n  _s();\n\n  var _ApponmtType$split, _ApponmtType$split2, _ApponmtType$split3;\n\n  const moment = require(\"moment\");\n\n  const [ApponmtType, SetAppmtType] = useState(\"\");\n  const [ShowRequest, setRequest] = useState(false);\n  const [ApponmtList, setApponmtList] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const Login = useSelector(state => state.login);\n  const location = useLocation();\n  const [SelectedType, setSelectedType] = useState(\"\");\n\n  const isCurrentDate = (timeSlot, time) => {\n    // debugger;\n    let givenDate = `${timeSlot.year}-${timeSlot.month + 1}-${timeSlot.dates} ${time}`;\n    let today = moment().format(\"YYYY-MM-DD hh:mm\");\n    return moment(givenDate, 'YYYY-MM-DD hh:mm A').isBefore(today);\n  }; // useEffect(() => {\n  //   let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n  //   dispatch(\n  //     fetch_appointmentSlot({\n  //       isStart: true,\n  //       isNext: false,\n  //       date: dateFrom,\n  //     })\n  //   );\n  //   dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n  //     setApponmtList(res);\n  //   });\n  // }, []);\n\n\n  const appoinment_form = useSelector(state => state.bookAppoinment.appoinment_form);\n  useEffect(() => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    dispatch(reset_booking());\n    dispatch(fetch_appointmentTypes(doctorId)).then(res => {\n      setApponmtList(res);\n      setSelectedType(res[0].Type);\n      setRequest(res[0].availableType == \"On Request\");\n      Onload(dateFrom, res[0].Type);\n      SetAppmtType(`${res[0].Type} (${res[0].Amount.split(\".\")[0]}) for up to ${res[0].Duration} Min`);\n      dispatch(Store_formData({ ...appoinment_form,\n        typeofconsultation: res[0].Type,\n        doctorfees: res[0].doctorfees,\n        gstamount: res[0].Gst,\n        fees: res[0].Amount,\n        duration: res[0].Duration,\n        c2mdfees: res[0].c2mdFees,\n        basicFees: res[0].doctorfees\n      }));\n    });\n  }, []);\n\n  const Onload = (dateFrom, type) => {\n    dispatch(fetch_appointmentSlot({\n      isStart: true,\n      isNext: false,\n      date: dateFrom,\n      doctorId: doctorId,\n      typeofconsultation: type\n    }));\n  };\n\n  const TimeSlot = useSelector(state => state.doctorDetail.timeSlot);\n  const currentMonth = TimeSlot && TimeSlot.length > 0 && TimeSlot[0];\n\n  const handleChange = event => {\n    SetAppmtType(event.target.value);\n  };\n\n  const ButtonGroup = ({\n    next,\n    previous,\n    goToSlide,\n    ...rest\n  }) => {\n    const {\n      carouselState: {\n        currentSlide\n      }\n    } = rest;\n\n    const Nextslide = () => {\n      // goToSlide(currentSlide + 7);\n      let day = `${TimeSlot[DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.next].dates} ${TimeSlot[DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.next].month + 1} ${TimeSlot[DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.next].year}`;\n      dispatch(fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: day\n      }));\n    };\n\n    const onBack = () => {\n      currentSlide !== 0 && goToSlide(currentSlide - (DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.back));\n      let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${TimeSlot[0].dates} `;\n      let dateFrom = moment(CurrentDay).subtract(DayCounter === null || DayCounter === void 0 ? void 0 : DayCounter.back, \"d\").format(\"DD MM YYYY\");\n      let today = moment().format(\"YYYY-MM-DD\");\n      let check = moment(today).isAfter(CurrentDay);\n      let CheckDay = moment(CurrentDay).isSame(today);\n\n      if (!CheckDay) {\n        if (!check) {\n          dispatch(fetch_appointmentSlot({\n            isStart: false,\n            isNext: true,\n            date: dateFrom,\n            doctorId: doctorId,\n            typeofconsultation: SelectedType\n          }));\n        }\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-button-group\",\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            float: \"left\",\n            borderColor: \"#F5F6F8\"\n          },\n          variant: \"outline-primary\",\n          className: currentSlide === 0 ? \"disable\" : \"\",\n          onClick: onBack,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.rightArrow,\n            alt: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\" // onClick={() => next()}\n          ,\n          onClick: Nextslide,\n          style: {\n            float: \"right\",\n            borderColor: \"#F5F6F8\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Assets.rightArrow,\n            alt: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n\n  const addMoreSlot = () => {\n    var _TimeSlot;\n\n    let day = `${(_TimeSlot = TimeSlot[TimeSlot.length - 1]) === null || _TimeSlot === void 0 ? void 0 : _TimeSlot.dates} ${TimeSlot[TimeSlot.length - 1].month + 1} ${TimeSlot[TimeSlot.length - 1].year}`;\n    let dateFrom = moment(day, \"DD MM YYYY\").format(\"DD MM YYYY\"); // .subtract(1, \"d\")\n\n    dispatch(fetch_more_appointmentSlot({\n      isStart: false,\n      isNext: true,\n      date: dateFrom,\n      doctorId: doctorId,\n      typeofconsultation: SelectedType\n    }));\n  };\n\n  const typeChange = item => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    SetAppmtType(`${item.Type} (${item.doctorfees} for upto ${item.Duration} Min)`);\n    setSelectedType(item.Type);\n    setRequest(item.availableType == \"On Request\");\n    dispatch(fetch_appointmentSlot({\n      isStart: false,\n      isNext: true,\n      date: dateFrom,\n      typeofconsultation: item.Type,\n      doctorId: doctorId\n    }));\n  };\n\n  const bookingAppOnRequest = () => {\n    dispatch(Store_formData({ ...appoinment_form,\n      appointmentDate: \"\",\n      appointmentTime: \"\",\n      bookingFrom: \"Request\",\n      bookingType: \"Request\",\n      doctorId: doctorId,\n      routing: true\n    }));\n\n    if (Login.login) {\n      history.push({\n        pathname: `/bookAppointment/${doctorId}`,\n        state: {\n          doctorId: doctorId\n        }\n      });\n    } else {\n      history.push({\n        // pathname:`/signin?redirection=/bookAppointment/${doctorId}`\n        pathname: `/signin`,\n        state: {\n          redirection: `/bookAppointment/${doctorId}`\n        }\n      });\n    }\n  };\n\n  const bookingApp = (time, date, bookingType, bookingFrom) => {\n    let CurrentDay = `${date.year}-${date.month + 1}-${date.dates} `;\n    let DateVariable = moment(CurrentDay, \"YYYY-MM-DD\").format(\"DD-MMMM-YYYY\");\n    let dt = moment(time, [\"h:mm A\"]).format(\"HH:mm\");\n    let toTime = moment(time, [\"h:mm A\"]).add(15, \"minutes\").format(\"HH:mm\");\n    let dateTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${dt}`;\n    let ToTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${toTime}`;\n    let format2 = moment(dateTimeFormat, 'YYYY-MM-DD HH:mm').format(\"YYYY-MM-DDTHH:mm:ss\");\n    localStorage.setItem(\"appinmentTime\", JSON.stringify({\n      appoinmentFromTime: format2,\n      appoinmentToTime: ToTimeFormat\n    }));\n    dispatch(Store_formData({ ...appoinment_form,\n      appointmentDate: DateVariable,\n      appointmentTime: time,\n      bookingFrom: bookingFrom,\n      bookingType: bookingType,\n      appoinmentFromTime: format2,\n      appoinmentToTime: ToTimeFormat,\n      doctorId: doctorId,\n      routing: true\n    }));\n\n    if (Login.login) {\n      history.push({\n        pathname: `/bookAppointment/${doctorId}`,\n        state: {\n          doctorId: doctorId\n        }\n      });\n    } else {\n      history.push({\n        pathname: `/signin`,\n        state: {\n          redirection: `/bookAppointment/${doctorId}`\n        }\n      });\n    }\n  };\n\n  const onTypeChange = item => {\n    typeChange(item);\n    dispatch(Store_formData({ ...appoinment_form,\n      typeofconsultation: item.Type,\n      doctorfees: item.doctorfees,\n      gstamount: item.Gst,\n      fees: item.Amount,\n      duration: item.Duration,\n      c2mdfees: item.c2mdFees,\n      basicFees: item.Amount\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.Schedule,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.Select_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.appointmentTypeTxt,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.appointment,\n          alt: \"appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), \"Appointment type\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: [(_ApponmtType$split = ApponmtType.split(\"(\")) === null || _ApponmtType$split === void 0 ? void 0 : _ApponmtType$split[0], /*#__PURE__*/_jsxDEV(\"span\", {\n            className: Style.SubText,\n            children: ((_ApponmtType$split2 = ApponmtType.split(\"(\")) === null || _ApponmtType$split2 === void 0 ? void 0 : _ApponmtType$split2[1]) && \"( \" + ((_ApponmtType$split3 = ApponmtType.split(\"(\")) === null || _ApponmtType$split3 === void 0 ? void 0 : _ApponmtType$split3[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: ApponmtList.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                onTypeChange(item);\n              },\n              children: [item.Type, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: Style.SubText,\n                children: [\"(\", item.doctorfees, \" for upto \", item.Duration, \" Min)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Style.availableTimeTxt,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: Style.availableTimeTxtimg,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Assets.time,\n          alt: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), \"Select an available time\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.left_Text,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", moment(`${currentMonth.year}-${currentMonth.month + 1}-${currentMonth.dates}`, 'YYYY-MM-DD').format(\"MMM\"), \" \", moment(`${currentMonth.year}-${currentMonth.month + 1}-${currentMonth.dates}`, 'YYYY-MM-DD').format(\"YYYY\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), ShowRequest ? /*#__PURE__*/_jsxDEV(AppointmentOnRequest, {\n      bookingApp: bookingAppOnRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.Schedule_Bottom,\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        loadMore: () => addMoreSlot(),\n        hasMore: true,\n        pageStart: 1,\n        children: [TimeSlot && TimeSlot.map((item, index) => {\n          var _TimeSlot$index;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [TimeSlot[index] && ((_TimeSlot$index = TimeSlot[index]) === null || _TimeSlot$index === void 0 ? void 0 : _TimeSlot$index.dates) == 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: Style.monthLeft,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", moment(`${TimeSlot[index].year}/${TimeSlot[index].month + 1}/${TimeSlot[index].dates}`).format(\"MMM\"), \" \", moment(`${TimeSlot[index].year}/${TimeSlot[index].month + 1}/${TimeSlot[index].dates}`).format(\"YYYY\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.SliderItem,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: Style.Day_text,\n                  children: [item.dates, \" \", moment(`${item.year}/${item.month + 1}/${item.dates}`).format(\"dddd\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.SliderItemInner,\n                children: item.requestSlot ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.OnlyOnRequest,\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: Style.textContent,\n                    children: \"Only On Request\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: Style.req_btn_wrp,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      className: Style.reqst_btn,\n                      onClick: () => setRequest(true),\n                      children: \"Request Now\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.TimeSlot_main_wrapper,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: Style.timeSolt_wrapper,\n                    children: item.slots.length > 0 ? !isCurrentDate(item, item.slots[item.slots.length - 1].time) ? item.slots.map(data => {\n                      if (!isCurrentDate(item, data.time)) {\n                        return /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"outline-primary\",\n                          className: Style.timeSlot_btn,\n                          onClick: () => bookingApp(data.time, item, \"Book\", \"AppointmentBooking\"),\n                          children: data.time\n                        }, data.time, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 41\n                        }, this);\n                      }\n                    }) : /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      className: `${Style.timeSlot_btn}  ${Style.Noslots_btn}`,\n                      disabled: true,\n                      children: \"No slots available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 35\n                    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      className: `${Style.timeSlot_btn}  ${Style.Noslots_btn}`,\n                      disabled: true,\n                      children: \"No slots available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          className: Style.Loadmore,\n          onClick: addMoreSlot,\n          children: \"Load More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MobileSchedule, \"22ZVaEmhTuNUoIDuLoBNok4iBxY=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useLocation, useSelector, useSelector];\n});\n\n_c = MobileSchedule;\nexport default MobileSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileSchedule\");","map":{"version":3,"sources":["C:/Users/Shaju Damodaran/Documents/V9/c2md-web_react/src/components/DoctorprofileSchedule/MobileSchedule/index.js"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","Carousel","Button","Dropdown","AppointmentOnRequest","fetch_appointmentSlot","fetch_appointmentTypes","fetch_more_appointmentSlot","Assets","Style","useHistory","useParams","useLocation","InfiniteScroll","Store_formData","reset_booking","MobileSchedule","responsive","Typeofappointment","doctorId","DayCounter","moment","require","ApponmtType","SetAppmtType","ShowRequest","setRequest","ApponmtList","setApponmtList","dispatch","history","Login","state","login","location","SelectedType","setSelectedType","isCurrentDate","timeSlot","time","givenDate","year","month","dates","today","format","isBefore","appoinment_form","bookAppoinment","dateFrom","subtract","then","res","Type","availableType","Onload","Amount","split","Duration","typeofconsultation","doctorfees","gstamount","Gst","fees","duration","c2mdfees","c2mdFees","basicFees","type","isStart","isNext","date","TimeSlot","doctorDetail","currentMonth","length","handleChange","event","target","value","ButtonGroup","next","previous","goToSlide","rest","carouselState","currentSlide","Nextslide","day","onBack","back","CurrentDay","check","isAfter","CheckDay","isSame","display","flex","float","borderColor","rightArrow","addMoreSlot","typeChange","item","bookingAppOnRequest","appointmentDate","appointmentTime","bookingFrom","bookingType","routing","push","pathname","redirection","bookingApp","DateVariable","dt","toTime","add","dateTimeFormat","ToTimeFormat","format2","localStorage","setItem","JSON","stringify","appoinmentFromTime","appoinmentToTime","onTypeChange","Schedule","Select_wrapper","appointmentTypeTxt","appointment","SubText","map","index","availableTimeTxt","availableTimeTxtimg","left_Text","Schedule_Bottom","monthLeft","SliderItem","Day_text","SliderItemInner","requestSlot","OnlyOnRequest","textContent","req_btn_wrp","reqst_btn","TimeSlot_main_wrapper","timeSolt_wrapper","slots","data","timeSlot_btn","Noslots_btn","Loadmore"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"react-multi-carousel\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport AppointmentOnRequest from \"../AppointmentOnRequest\";\nimport {\n  fetch_appointmentSlot,\n  fetch_appointmentTypes,\n  fetch_more_appointmentSlot,\n} from \"../../../actions/AppointmentSlotAction\";\nimport Assets from \"../../Layout/Assets\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport Style from \"./MobileSchedule.module.scss\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Store_formData,reset_booking } from \"../../../actions/BookAppoinmentAction\";\n\nfunction MobileSchedule({\n  responsive,\n  Typeofappointment,\n  doctorId,\n  DayCounter,\n}) {\n  const moment = require(\"moment\");\n  const [ApponmtType, SetAppmtType] = useState(\"\");\n  const [ShowRequest, setRequest] = useState(false);\n  const [ApponmtList, setApponmtList] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const Login = useSelector((state) => state.login);\n  const location = useLocation();\n  const [SelectedType, setSelectedType] = useState(\"\");\n  const isCurrentDate = (timeSlot, time) => {\n    // debugger;\n    let givenDate = `${timeSlot.year}-${timeSlot.month + 1}-${\n      timeSlot.dates\n    } ${time}`;\n    let today = moment().format(\"YYYY-MM-DD hh:mm\");\n    return moment(givenDate,'YYYY-MM-DD hh:mm A').isBefore(today);\n  };\n  // useEffect(() => {\n  //   let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n\n  //   dispatch(\n  //     fetch_appointmentSlot({\n  //       isStart: true,\n  //       isNext: false,\n  //       date: dateFrom,\n  //     })\n  //   );\n  //   dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n  //     setApponmtList(res);\n  //   });\n  // }, []);\n  const appoinment_form = useSelector(\n    (state) => state.bookAppoinment.appoinment_form\n  );\n  useEffect(() => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    dispatch(reset_booking());\n\n    dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n      setApponmtList(res);\n      setSelectedType(res[0].Type);\n      setRequest(res[0].availableType == \"On Request\");\n      Onload(dateFrom, res[0].Type);\n      SetAppmtType(\n        `${res[0].Type} (${res[0].Amount.split(\".\")[0]}) for up to ${res[0].Duration} Min`\n      );\n      dispatch(\n        Store_formData({\n          ...appoinment_form,\n          typeofconsultation: res[0].Type,\n          doctorfees: res[0].doctorfees,\n          gstamount: res[0].Gst,\n          fees: res[0].Amount,\n          duration: res[0].Duration,\n          c2mdfees: res[0].c2mdFees,\n          basicFees: res[0].doctorfees,\n        })\n      );\n    });\n  }, []);\n\n  const Onload = (dateFrom, type) => {\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: true,\n        isNext: false,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: type,\n      })\n    );\n  };\n\n\n\n  const TimeSlot = useSelector((state) => state.doctorDetail.timeSlot);\n  const currentMonth = TimeSlot && TimeSlot.length > 0 && TimeSlot[0];\n\n  const handleChange = (event) => {\n    SetAppmtType(event.target.value);\n  };\n  const ButtonGroup = ({ next, previous, goToSlide, ...rest }) => {\n    const {\n      carouselState: { currentSlide },\n    } = rest;\n    const Nextslide = () => {\n      // goToSlide(currentSlide + 7);\n\n      let day = `${TimeSlot[DayCounter?.next].dates} ${\n        TimeSlot[DayCounter?.next].month + 1\n      } ${TimeSlot[DayCounter?.next].year}`;\n\n      dispatch(\n        fetch_appointmentSlot({\n          isStart: false,\n          isNext: true,\n          date: day,\n        })\n      );\n    };\n    const onBack = () => {\n      currentSlide !== 0 && goToSlide(currentSlide - DayCounter?.back);\n\n      let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${\n        TimeSlot[0].dates\n      } `;\n\n      let dateFrom = moment(CurrentDay)\n        .subtract(DayCounter?.back, \"d\")\n        .format(\"DD MM YYYY\");\n\n      let today = moment().format(\"YYYY-MM-DD\");\n      let check = moment(today).isAfter(CurrentDay);\n      let CheckDay = moment(CurrentDay).isSame(today);\n      if (!CheckDay) {\n        if (!check) {\n          dispatch(\n            fetch_appointmentSlot({\n              isStart: false,\n              isNext: true,\n              date: dateFrom,\n              doctorId: doctorId,\n              typeofconsultation: SelectedType,\n            })\n          );\n        }\n      }\n    };\n\n    return (\n      <div className=\"carousel-button-group\" style={{ display: \"flex\" }}>\n        <div style={{ flex: 1 }}>\n          <Button\n            style={{\n              float: \"left\",\n              borderColor: \"#F5F6F8\",\n            }}\n            variant=\"outline-primary\"\n            className={currentSlide === 0 ? \"disable\" : \"\"}\n            onClick={onBack}\n          >\n            <img src={Assets.rightArrow} alt=\"<\" />\n          </Button>\n        </div>\n        <div style={{ flex: 1 }}>\n          <Button\n            variant=\"outline-primary\"\n            // onClick={() => next()}\n            onClick={Nextslide}\n            style={{\n              float: \"right\",\n              borderColor: \"#F5F6F8\",\n            }}\n          >\n            <img src={Assets.rightArrow} alt=\">\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const addMoreSlot = () => {\n    let day = `${TimeSlot[TimeSlot.length - 1]?.dates} ${\n      TimeSlot[TimeSlot.length - 1].month + 1\n    } ${TimeSlot[TimeSlot.length - 1].year}`;\n\n    let dateFrom = moment(day, \"DD MM YYYY\").format(\"DD MM YYYY\");\n    // .subtract(1, \"d\")\n\n    dispatch(\n      fetch_more_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: SelectedType,\n      })\n    );\n  };\n\n  const typeChange = (item) => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    SetAppmtType(\n      `${item.Type} (${item.doctorfees} for upto ${item.Duration} Min)`\n    );\n    setSelectedType(item.Type);\n    setRequest(item.availableType == \"On Request\");\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        typeofconsultation: item.Type,\n        doctorId: doctorId,\n      })\n    );\n  };\n\n  const bookingAppOnRequest = () => {\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        appointmentDate: \"\",\n        appointmentTime: \"\",\n        bookingFrom: \"Request\",\n        bookingType: \"Request\",\n        doctorId: doctorId,\n        routing: true,\n      })\n    );\n    if (Login.login) {\n      history.push({\n        pathname: `/bookAppointment/${doctorId}`,\n        state: { doctorId: doctorId },\n      });\n    } else {\n      history.push({\n        // pathname:`/signin?redirection=/bookAppointment/${doctorId}`\n        pathname: `/signin`,\n        state: { redirection: `/bookAppointment/${doctorId}` },\n      });\n    }\n  };\n\n  const bookingApp = (time, date, bookingType, bookingFrom) => {\n    let CurrentDay = `${date.year}-${date.month + 1}-${date.dates} `;\n\n    let DateVariable = moment(CurrentDay, \"YYYY-MM-DD\").format(\"DD-MMMM-YYYY\");\n    let dt = moment(time, [\"h:mm A\"]).format(\"HH:mm\");\n    let toTime = moment(time, [\"h:mm A\"]).add(15, \"minutes\").format(\"HH:mm\");\n\n    let dateTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${dt}`;\n\n    let ToTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${toTime}`;\n\n    let format2 = moment(dateTimeFormat,'YYYY-MM-DD HH:mm').format(\"YYYY-MM-DDTHH:mm:ss\");\n    localStorage.setItem(\n      \"appinmentTime\",\n      JSON.stringify({\n        appoinmentFromTime: format2,\n        appoinmentToTime: ToTimeFormat,\n      })\n    );\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        appointmentDate: DateVariable,\n        appointmentTime: time,\n        bookingFrom: bookingFrom,\n        bookingType: bookingType,\n        appoinmentFromTime: format2,\n        appoinmentToTime: ToTimeFormat,\n        doctorId: doctorId,\n        routing: true,\n      })\n    );\n    if (Login.login) {\n      history.push({\n        pathname: `/bookAppointment/${doctorId}`,\n        state: { doctorId: doctorId },\n      });\n    } else {\n      history.push({\n        pathname: `/signin`,\n        state: { redirection: `/bookAppointment/${doctorId}` },\n      });\n    }\n  };\n  const onTypeChange = (item) => {\n    typeChange(item);\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        typeofconsultation: item.Type,\n        doctorfees: item.doctorfees,\n        gstamount: item.Gst,\n        fees: item.Amount,\n        duration: item.Duration,\n        c2mdfees: item.c2mdFees,\n        basicFees: item.Amount,\n      })\n    );\n  };\n  return (\n    <div className={Style.Schedule}>\n      <div className={Style.Select_wrapper}>\n        <p className={Style.appointmentTypeTxt}>\n          {\" \"}\n          <img src={Assets.appointment} alt=\"appointment\" />\n          Appointment type\n        </p>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            {ApponmtType.split(\"(\")?.[0]}\n            <span className={Style.SubText}>\n              {ApponmtType.split(\"(\")?.[1] &&\n                \"( \" + ApponmtType.split(\"(\")?.[1]}\n              {/* ( {ApponmtType.split(\"(\")?.[1]} */}\n            </span>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {ApponmtList.map((item, index) => {\n              return (\n                <Dropdown.Item\n                  onClick={() => {\n                    onTypeChange(item);\n                  }}\n                >\n                  {item.Type}{\" \"}\n                  <span className={Style.SubText}>\n                    ({item.doctorfees} for upto {item.Duration} Min)\n                  </span>\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n        {/* <select value={ApponmtType} onChange={handleChange}>\n          {ApponmtList.map((item, index) => {\n            return (\n              <option value={item.Type} key={index}>\n                {item.Type} ({item.doctorfees} for upto {item.Duration} Min)\n              </option>\n            );\n          })}\n        </select> */}\n      </div>\n      <p className={Style.availableTimeTxt}>\n        <span className={Style.availableTimeTxtimg}>\n          <img src={Assets.time} alt=\"time\" />\n          Select an available time\n        </span>\n        <p className={Style.left_Text}>\n          <span>\n            {\" \"}\n            {moment(\n              `${currentMonth.year}-${currentMonth.month + 1}-${\n                currentMonth.dates\n              }`,'YYYY-MM-DD'\n            ).format(\"MMM\")}{\" \"}\n            {moment(\n              `${currentMonth.year}-${currentMonth.month + 1}-${\n                currentMonth.dates\n              }`,'YYYY-MM-DD'\n            ).format(\"YYYY\")}\n          </span>\n        </p>\n      </p>\n      {ShowRequest ? (\n        <AppointmentOnRequest bookingApp={bookingAppOnRequest} />\n      ) : (\n        <div className={Style.Schedule_Bottom}>\n          <InfiniteScroll\n            loadMore={() => addMoreSlot()}\n            hasMore={true}\n            pageStart={1}\n          >\n            {TimeSlot &&\n              TimeSlot.map((item, index) => {\n                return (\n                  <>\n                    {TimeSlot[index] && TimeSlot[index]?.dates == 1 && (\n                      <p className={Style.monthLeft}>\n                        <span>\n                          {\" \"}\n                          {moment(\n                            `${TimeSlot[index].year}/${\n                              TimeSlot[index].month + 1\n                            }/${TimeSlot[index].dates}`\n                          ).format(\"MMM\")}{\" \"}\n                          {moment(\n                            `${TimeSlot[index].year}/${\n                              TimeSlot[index].month + 1\n                            }/${TimeSlot[index].dates}`\n                          ).format(\"YYYY\")}\n                        </span>\n                      </p>\n                    )}\n                    <div key={index}>\n                      <div className={Style.SliderItem}>\n                        <p className={Style.Day_text}>\n                          {item.dates}{\" \"}\n                          {moment(\n                            `${item.year}/${item.month + 1}/${item.dates}`\n                          ).format(\"dddd\")}\n                        </p>\n                      </div>\n                      <div className={Style.SliderItemInner}>\n                        {item.requestSlot ? (\n                          <div className={Style.OnlyOnRequest}>\n                            <h6 className={Style.textContent}>\n                              Only On Request\n                            </h6>\n                            <div className={Style.req_btn_wrp}>\n                              <Button\n                                variant=\"outline-primary\"\n                                className={Style.reqst_btn}\n                                onClick={() => setRequest(true)}\n                              >\n                                Request Now\n                              </Button>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className={Style.TimeSlot_main_wrapper}>\n                            <div className={Style.timeSolt_wrapper}>\n                              {item.slots.length > 0 ? (\n                                !isCurrentDate(\n                                  item,\n                                  item.slots[item.slots.length - 1].time\n                                ) ? (\n                                  item.slots.map((data) => {\n                                    if (!isCurrentDate(item, data.time)) {\n                                      return (\n                                        <Button\n                                          variant=\"outline-primary\"\n                                          className={Style.timeSlot_btn}\n                                          key={data.time}\n                                          onClick={() =>\n                                            bookingApp(\n                                              data.time,\n                                              item,\n                                              \"Book\",\n                                              \"AppointmentBooking\"\n                                            )\n                                          }\n                                        >\n                                          {data.time}\n                                        </Button>\n                                      );\n                                    }\n                                  })\n                                ) : (\n                                  <Button\n                                    variant=\"outline-primary\"\n                                    className={`${Style.timeSlot_btn}  ${Style.Noslots_btn}`}\n                                    disabled\n                                  >\n                                    No slots available\n                                  </Button>\n                                )\n                              ) : (\n                                <Button\n                                  variant=\"outline-primary\"\n                                  className={`${Style.timeSlot_btn}  ${Style.Noslots_btn}`}\n                                  disabled\n                                >\n                                  No slots available\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </>\n                );\n              })}\n            <Button\n              variant=\"outline-primary\"\n              className={Style.Loadmore}\n              onClick={addMoreSlot}\n            >\n              Load More\n            </Button>\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MobileSchedule;\n"]},"metadata":{},"sourceType":"module"}