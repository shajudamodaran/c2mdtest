{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V7/c2md-web_react/src/components/Layout/DoctorListingLayout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useEffect, useRef, useState } from \"react\";\nimport MobileFooter from \"../../FooterMobileScreen\";\nimport Style from \"./DoctorListingLayout.module.scss\";\nimport { useDimensions } from \"../../../logic/Dimensions\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetch_doctors } from \"../../../actions/DoctorListingAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = /*#__PURE__*/React.lazy(_c = () => import(\"../../Header\"));\n_c2 = Header;\nconst MicrositeHeader = /*#__PURE__*/React.lazy(_c3 = () => import(\"../../MicrositeLayout/MicrositeHeader\"));\n_c4 = MicrositeHeader;\nconst Footer = /*#__PURE__*/React.lazy(_c5 = () => import(\"../../MicrositeLayout/MicrositeFooter\"));\n_c6 = Footer;\n\nfunction DoctorlistingLayout({\n  children,\n  pagination,\n  setPagination\n}) {\n  _s();\n\n  const {\n    width\n  } = useDimensions();\n  const [showFilter, setShowFilter] = useState(false);\n  const [searchDoctor, setSearchDoctor] = useState(\"\");\n  const location = useLocation();\n  const clientDetails = useSelector(state => state.clientDetails);\n  let doctorListingScroll = useRef();\n  let dispatch = useDispatch();\n\n  let onScrollDoctorList = async () => {\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = doctorListingScroll.current;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n      // TO SOMETHING HERE\n      console.log('Reached bottom'); // if (FilterItem.length % 4 == 0) {\n      // await setLoader(true);\n\n      await dispatch(fetch_doctors(null, clientDetails ? clientDetails.clinicurl : \"\", pagination + 10));\n      setPagination(pagination + 10); // await setLoader(false);\n      // }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: doctorListingScroll,\n    onScroll: () => {\n      onScrollDoctorList();\n    },\n    style: {\n      backgroundColor: \"red\",\n      height: \"100vh\",\n      overflow: \"auto\"\n    },\n    children: [width >= 992 ? /*#__PURE__*/_jsxDEV(MicrositeHeader, {\n      showFilter: showFilter,\n      setShowFilter: setShowFilter,\n      searchDoctor: searchDoctor,\n      setSearchDoctor: setSearchDoctor,\n      clientDetails: clientDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Header, {\n      showFilter: showFilter,\n      setShowFilter: setShowFilter,\n      searchDoctor: searchDoctor,\n      setSearchDoctor: setSearchDoctor,\n      clientDetails: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.LoginLayout_body,\n      children: width >= 992 ? children : /*#__PURE__*/React.cloneElement(children, {\n        showFilter,\n        setShowFilter,\n        searchDoctor,\n        setSearchDoctor\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), location.pathname.search(\"bookAppointment\") == -1 && width >= 992 ? /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : null, location.pathname.search(\"bookAppointment\") == -1 && width < 992 ? /*#__PURE__*/_jsxDEV(MobileFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoctorlistingLayout, \"crZus9Io+hWENuH8gQpnPGkyKBY=\", false, function () {\n  return [useDimensions, useLocation, useSelector, useDispatch];\n});\n\n_c7 = DoctorlistingLayout;\nexport default DoctorlistingLayout;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Header$React.lazy\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"MicrositeHeader$React.lazy\");\n$RefreshReg$(_c4, \"MicrositeHeader\");\n$RefreshReg$(_c5, \"Footer$React.lazy\");\n$RefreshReg$(_c6, \"Footer\");\n$RefreshReg$(_c7, \"DoctorlistingLayout\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V7/c2md-web_react/src/components/Layout/DoctorListingLayout/index.js"],"names":["React","lazy","useEffect","useRef","useState","MobileFooter","Style","useDimensions","useLocation","useDispatch","useSelector","fetch_doctors","Header","MicrositeHeader","Footer","DoctorlistingLayout","children","pagination","setPagination","width","showFilter","setShowFilter","searchDoctor","setSearchDoctor","location","clientDetails","state","doctorListingScroll","dispatch","onScrollDoctorList","scrollTop","scrollHeight","clientHeight","current","console","log","clinicurl","backgroundColor","height","overflow","LoginLayout_body","cloneElement","pathname","search"],"mappings":"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","sourcesContent":["import React, { lazy, useEffect, useRef, useState } from \"react\";\nimport MobileFooter from \"../../FooterMobileScreen\";\nimport Style from \"./DoctorListingLayout.module.scss\";\nimport { useDimensions } from \"../../../logic/Dimensions\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetch_doctors } from \"../../../actions/DoctorListingAction\";\nconst Header = React.lazy(() => import(\"../../Header\"));\nconst MicrositeHeader = React.lazy(() =>\n  import(\"../../MicrositeLayout/MicrositeHeader\")\n);\nconst Footer = React.lazy(() =>\n  import(\"../../MicrositeLayout/MicrositeFooter\")\n);\n\nfunction DoctorlistingLayout({ children , pagination, setPagination}) {\n  const { width } = useDimensions();\n  const [showFilter, setShowFilter] = useState(false);\n  const [searchDoctor, setSearchDoctor] = useState(\"\");\n  const location = useLocation();\n  const clientDetails = useSelector((state) => state.clientDetails);\n  let doctorListingScroll = useRef()\n\n  let dispatch=useDispatch()\n\n  let onScrollDoctorList = async () => {\n\n    const { scrollTop, scrollHeight, clientHeight } = doctorListingScroll.current;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n      // TO SOMETHING HERE\n      console.log('Reached bottom')\n\n      // if (FilterItem.length % 4 == 0) {\n\n        // await setLoader(true);\n        await dispatch(\n          fetch_doctors(\n            null,\n            clientDetails ? clientDetails.clinicurl : \"\",\n            pagination + 10\n          )\n        );\n        setPagination(pagination + 10)\n        // await setLoader(false);\n\n\n      // }\n\n\n    }\n\n  }\n\n\n\n  return (\n    <div ref={doctorListingScroll} onScroll={() => { onScrollDoctorList() }} style={{backgroundColor:\"red\", height:\"100vh\", overflow:\"auto\"}}>\n      {width >= 992 ? (\n        <MicrositeHeader\n          showFilter={showFilter}\n          setShowFilter={setShowFilter}\n          searchDoctor={searchDoctor}\n          setSearchDoctor={setSearchDoctor}\n          clientDetails={clientDetails}\n        />\n      ) : (\n        <Header\n          showFilter={showFilter}\n          setShowFilter={setShowFilter}\n          searchDoctor={searchDoctor}\n          setSearchDoctor={setSearchDoctor}\n          clientDetails={\"\"}\n        />\n      )}\n      <div className={Style.LoginLayout_body}>\n        {width >= 992\n          ? children\n          : React.cloneElement(children, {\n              showFilter,\n              setShowFilter,\n              searchDoctor,\n              setSearchDoctor,\n            })}\n      </div>\n      {location.pathname.search(\"bookAppointment\") == -1 && width >= 992 ? (\n        <Footer />\n      ) : null}\n      {location.pathname.search(\"bookAppointment\") == -1 && width < 992 ? (\n        <MobileFooter />\n      ) : null}\n    </div>\n  );\n}\n\nexport default DoctorlistingLayout;\n"]},"metadata":{},"sourceType":"module"}