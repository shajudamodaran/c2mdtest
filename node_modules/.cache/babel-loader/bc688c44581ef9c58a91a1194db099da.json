{"ast":null,"code":"import moment from \"moment\";\nimport loginedApi from \"../apis\";\nimport { check_consultation } from \"./MicrositeAction\";\nimport { DASHBOARD_DATA_PATIENT } from \"./type\";\nexport const fetch_dashboardData = (userData, dashboardData) => async dispatch => {\n  let today = moment(new Date()).format(\"DD-MMM-YYYY\");\n  let data = {\n    patientId: dashboardData.patientId,\n    patientEmail: dashboardData.patientEmail,\n    patientMobile: userData.mobileNumber,\n    browserTimeZone: dashboardData.browserTimeZone,\n    dayOfAppointment: today,\n    appointmentNavigation: dashboardData.appointmentNavigation,\n    currency: dashboardData.currency,\n    accessCountry: dashboardData.accessCountry,\n    todayRate: dashboardData.todayRate,\n    Ipaddress: dashboardData.Ipaddress,\n    useragent: dashboardData.useragent,\n    Browser: \"Chrome-95.0.4638.69\",\n    Os: \"Windows\"\n  };\n  const response = await loginedApi.post(\"profile\", {\n    requestType: \"51\",\n    token: \"C2MDVerificationToken\",\n    data\n  });\n\n  if (response.status === 200) {\n    dispatch({\n      type: DASHBOARD_DATA_PATIENT,\n      payload: response.data.data.data\n    });\n  } // return response.data.data.Details;\n\n};\nexport const uploadReports = ({\n  formData,\n  userData,\n  dashboardData\n}) => async dispatch => {\n  console.log({\n    formData,\n    userData,\n    dashboardData\n  });\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  const response = await loginedApi.post(\"updatereports\", {\n    body: formData\n  }, config);\n\n  if (response.status === 200) {\n    dispatch(check_consultation(userData, dashboardData));\n  }\n};","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V2/connect2mydoctor-phase1/connect2mydoctor-phase1/src/actions/DashboardActions.js"],"names":["moment","loginedApi","check_consultation","DASHBOARD_DATA_PATIENT","fetch_dashboardData","userData","dashboardData","dispatch","today","Date","format","data","patientId","patientEmail","patientMobile","mobileNumber","browserTimeZone","dayOfAppointment","appointmentNavigation","currency","accessCountry","todayRate","Ipaddress","useragent","Browser","Os","response","post","requestType","token","status","type","payload","uploadReports","formData","console","log","config","headers","body"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,sBAAT,QAAuC,QAAvC;AAIA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAUC,aAAV,KAA4B,MAAOC,QAAP,IAAoB;AAEjF,MAAIC,KAAK,GAAER,MAAM,CAAC,IAAIS,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,aAA1B,CAAX;AAIA,MAAIC,IAAI,GAAG;AAETC,IAAAA,SAAS,EAACN,aAAa,CAACM,SAFf;AAGTC,IAAAA,YAAY,EAAEP,aAAa,CAACO,YAHnB;AAITC,IAAAA,aAAa,EAACT,QAAQ,CAACU,YAJd;AAKTC,IAAAA,eAAe,EAAEV,aAAa,CAACU,eALtB;AAMTC,IAAAA,gBAAgB,EAAET,KANT;AAOTU,IAAAA,qBAAqB,EAACZ,aAAa,CAACY,qBAP3B;AAQTC,IAAAA,QAAQ,EAAEb,aAAa,CAACa,QARf;AASTC,IAAAA,aAAa,EAAEd,aAAa,CAACc,aATpB;AAUTC,IAAAA,SAAS,EAACf,aAAa,CAACe,SAVf;AAWTC,IAAAA,SAAS,EAAEhB,aAAa,CAACgB,SAXhB;AAYTC,IAAAA,SAAS,EAAEjB,aAAa,CAACiB,SAZhB;AAaTC,IAAAA,OAAO,EAAE,qBAbA;AAcTC,IAAAA,EAAE,EAAE;AAdK,GAAX;AAiBA,QAAMC,QAAQ,GAAG,MAAMzB,UAAU,CAAC0B,IAAX,CAAgB,SAAhB,EAA2B;AAChDC,IAAAA,WAAW,EAAE,IADmC;AAEhDC,IAAAA,KAAK,EAAE,uBAFyC;AAGhDlB,IAAAA;AAHgD,GAA3B,CAAvB;;AAMA,MAAIe,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BvB,IAAAA,QAAQ,CAAC;AAAEwB,MAAAA,IAAI,EAAE5B,sBAAR;AAAgC6B,MAAAA,OAAO,EAAEN,QAAQ,CAACf,IAAT,CAAcA,IAAd,CAAmBA;AAA5D,KAAD,CAAR;AACD,GA/BgF,CAkCjF;;AACD,CAnCM;AAsCP,OAAO,MAAMsB,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAW7B,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA0C,MAAOC,QAAP,IAAoB;AAEzF4B,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA,QAAD;AAAW7B,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAZ;AAEA,QAAM+B,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADI,GAAf;AAKA,QAAMZ,QAAQ,GAAG,MAAMzB,UAAU,CAAC0B,IAAX,CAAgB,eAAhB,EAAiC;AACtDY,IAAAA,IAAI,EAAEL;AADgD,GAAjC,EAErBG,MAFqB,CAAvB;;AAIA,MAAIX,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAE3BvB,IAAAA,QAAQ,CACNL,kBAAkB,CAACG,QAAD,EAAWC,aAAX,CADZ,CAAR;AAGD;AAGF,CArBM","sourcesContent":["import moment from \"moment\";\nimport loginedApi from \"../apis\";\nimport { check_consultation } from \"./MicrositeAction\";\nimport { DASHBOARD_DATA_PATIENT } from \"./type\";\n\n\n\nexport const fetch_dashboardData = (userData,dashboardData) => async (dispatch) => {\n\n  let today= moment(new Date()).format(\"DD-MMM-YYYY\")\n\n  \n  \n  let data = {\n\n    patientId:dashboardData.patientId,\n    patientEmail: dashboardData.patientEmail,\n    patientMobile:userData.mobileNumber,\n    browserTimeZone: dashboardData.browserTimeZone,\n    dayOfAppointment: today,\n    appointmentNavigation:dashboardData.appointmentNavigation,\n    currency: dashboardData.currency,\n    accessCountry: dashboardData.accessCountry,\n    todayRate:dashboardData.todayRate,\n    Ipaddress: dashboardData.Ipaddress, \n    useragent: dashboardData.useragent,\n    Browser: \"Chrome-95.0.4638.69\",\n    Os: \"Windows\"\n  }\n\n  const response = await loginedApi.post(\"profile\", {\n    requestType: \"51\",\n    token: \"C2MDVerificationToken\",\n    data\n  });\n\n  if (response.status === 200) {\n    dispatch({ type: DASHBOARD_DATA_PATIENT, payload: response.data.data.data });\n  }\n\n\n  // return response.data.data.Details;\n};\n\n\nexport const uploadReports = ({formData, userData, dashboardData }) => async (dispatch) => {\n\n  console.log({formData, userData, dashboardData });\n\n  const config = {     \n    headers: { 'content-type': 'multipart/form-data' }\n}\n\n\n  const response = await loginedApi.post(\"updatereports\", {\n    body: formData\n  },config);\n\n  if (response.status === 200) {\n  \n    dispatch(\n      check_consultation(userData, dashboardData)\n    );\n  }\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}