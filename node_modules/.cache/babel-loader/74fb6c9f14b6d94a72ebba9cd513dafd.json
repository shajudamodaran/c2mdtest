{"ast":null,"code":"var _jsxFileName = \"/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V5/c2md-web_react/src/components/SpecialitiesMobileScreen/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Style from \"./SpecialitiesMobileScreen.module.scss\";\nimport { useHistory } from \"react-router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetch_doctors } from \"../../actions/DoctorListingAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MobileSpecialities({\n  specialityData\n}) {\n  _s();\n\n  const [sortedData, setSortedDate] = useState([]);\n  const [selected, selectedDate] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const clientDetails = useSelector(state => state.clientDetails);\n  useEffect(async () => {\n    // await setLoader(true);\n    if (selected != \"\") {\n      await dispatch(fetch_doctors(selected, clientDetails != undefined ? clientDetails.clinicName : \"\"));\n    } // await setLoader(false);\n\n  }, [selected]);\n  useEffect(() => {\n    if (specialityData.length > 0) {\n      let data = specialityData.reduce((r, e) => {\n        let alphabet = e.specialityName[0];\n        if (!r[alphabet]) r[alphabet] = {\n          alphabet,\n          record: [e]\n        };else r[alphabet].record.push(e);\n        return r;\n      }, {});\n      let result = Object.values(data);\n      setSortedDate(result);\n    }\n  }, [specialityData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.filter_mobile_specialities_content,\n    children: sortedData.map(item2 => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.filter_mobile_specialities_character,\n          children: item2.alphabet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), item2.record.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.checkboxListwrp,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.checkboxList,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: item.specialityUrl,\n                id: item.specialityUrl,\n                checked: item.specialityName == selected,\n                onChange: e => {\n                  selectedDate(item.specialityName);\n                },\n                onClick: () => {\n                  selectedDate(item.specialityName);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"All\",\n                onClick: () => {\n                  selectedDate(item.specialityName);\n                },\n                children: item.specialityName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MobileSpecialities, \"fuiWIGSCWUfBfA2e/hCAp7xPY/g=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = MobileSpecialities;\nexport default MobileSpecialities;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileSpecialities\");","map":{"version":3,"sources":["/home/developer/Projects/Personal/Doctor-dashboard/Doctor Dash/V5/c2md-web_react/src/components/SpecialitiesMobileScreen/index.js"],"names":["React","useEffect","useState","Style","useHistory","useSelector","useDispatch","fetch_doctors","MobileSpecialities","specialityData","sortedData","setSortedDate","selected","selectedDate","history","dispatch","clientDetails","state","undefined","clinicName","length","data","reduce","r","e","alphabet","specialityName","record","push","result","Object","values","filter_mobile_specialities_content","map","item2","filter_mobile_specialities_character","item","checkboxListwrp","checkboxList","specialityUrl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Style from \"./SpecialitiesMobileScreen.module.scss\";\nimport { useHistory } from \"react-router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetch_doctors } from \"../../actions/DoctorListingAction\";\n\nfunction MobileSpecialities({ specialityData }) {\n  const [sortedData, setSortedDate] = useState([]);\n  const [selected, selectedDate] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const clientDetails = useSelector((state) => state.clientDetails);\n  useEffect(async () => {\n    // await setLoader(true);\n    if (selected != \"\") {\n      await dispatch(\n        fetch_doctors(\n          selected,\n          clientDetails != undefined ? clientDetails.clinicName : \"\"\n        )\n      );\n    }\n\n    // await setLoader(false);\n  }, [selected]);\n\n  useEffect(() => {\n    if (specialityData.length > 0) {\n      let data = specialityData.reduce((r, e) => {\n        let alphabet = e.specialityName[0];\n        if (!r[alphabet]) r[alphabet] = { alphabet, record: [e] };\n        else r[alphabet].record.push(e);\n        return r;\n      }, {});\n      let result = Object.values(data);\n\n      setSortedDate(result);\n    }\n  }, [specialityData]);\n\n  return (\n    <div className={Style.filter_mobile_specialities_content}>\n      {sortedData.map((item2) => {\n        return (\n          <>\n            <div className={Style.filter_mobile_specialities_character}>\n              {item2.alphabet}\n            </div>\n            {item2.record.map((item) => {\n              return (\n                <div className={Style.checkboxListwrp}>\n                  <div className={Style.checkboxList}>\n                    {/* <input\n                type=\"checkbox\"\n                value={item.specialityName}\n                id={item.specialityName}\n                value={item.specialityName}\n                checked={item.checked}\n                onClick={()=>{selectedDate(item.specialityName)}}\n                onChange={(e) => console.log(e)}\n              /> */}\n                    <input\n                      type=\"checkbox\"\n                      value={item.specialityUrl}\n                      id={item.specialityUrl}\n                      checked={item.specialityName == selected}\n                      onChange={(e) => {\n                        selectedDate(item.specialityName);\n                      }}\n                      onClick={() => {\n                        selectedDate(item.specialityName);\n                      }}\n                    />\n                    <label\n                      htmlFor=\"All\"\n                      onClick={() => {\n                        selectedDate(item.specialityName);\n                      }}\n                    >\n                      {item.specialityName}\n                    </label>\n                  </div>\n                </div>\n              );\n            })}\n          </>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MobileSpecialities;\n"]},"metadata":{},"sourceType":"module"}