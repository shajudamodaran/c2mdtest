{"version":3,"file":"static/js/6185.94c6cc8a.chunk.js","mappings":"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","sources":["actions/AppointmentSlotAction.js","actions/BookAppoinmentAction.js","webpack://connect2mydoctor/./src/components/BookAppointment/BookAppointment.module.scss?67ab","webpack://connect2mydoctor/./src/components/DoctorprofileSchedule/MobileSchedule/MobileSchedule.module.scss?573d","components/DoctorprofileSchedule/MobileSchedule/index.js","components/BookAppointment/index.js","webpack://connect2mydoctor/./src/components/DoctorprofileSchedule/AppointmentOnRequest/AppointmentOnRequest.module.scss?f51a","components/DoctorprofileSchedule/AppointmentOnRequest/index.js","webpack://connect2mydoctor/./src/components/DoctorprofileSchedule/Schedule/Schedule.module.scss?191b","components/DoctorprofileSchedule/Schedule/index.js"],"sourcesContent":["import { APPOINTMENT_SLOT, APPOINTMENT_MORE_SLOT, APPOINTMENT_MORE_SLOT_RESET } from \"./type\";\nimport loginedApi from \"../apis\";\n\nconst { detect } = require('detect-browser');\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif(formatTime.search(/\\+/g)!=null)\n  {\n    formatTime=formatTime.replace(/\\+/g,\"%2B\")\n  }else if(formatTime.search(/\\-/g)!=null)\n  {\n    formatTime=formatTime.replace(/\\-/g,\"%2D\")\n  }//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nlet countrycoderes;\nlet doctorscountrycode;\n\nexport const fetch_appointmentSlot =\n  ({ isStart, isNext, date, typeofconsultation, doctorId }) =>\n  async (dispatch) => {\n\n\n    countrycoderes = await loginedApi.post(\"getcountrycode\",\n    {\n      \"token\": \"token\",\n      \"version\": \"2.0\",\n      \"data\": { browserTimeZone: `GMT${formatTime}`, },\n      \"requestType\": 1058\n    });\n\n    doctorscountrycode = countrycoderes.data.data;\n      \n\n\n    const response = await loginedApi.post(\"doctortimeslots\", {\n      requestType: \"175\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        timeSlotCriteria: {\n          doctorId: doctorId,\n          date: date,\n          isStart: isStart,\n          isNext: isNext,\n          typeofconsultation: typeofconsultation,\n        },\n        // browserTimeZone: \"GMT%2B05:30\",\n        browserTimeZone: `GMT${formatTime}`,\n        todayRate: \"73.49680\",\n        actualRate: \"73.49680\",\n        Ipaddress: doctorscountrycode.Ipaddress, \n        useragent: userAgent,\n        Browser: browser.name+\" \"+browser.version,\n        appname: \"C2MD Web\",\n        Os: platform ,\n        accessCountry: doctorscountrycode.Country,\n        currency: doctorscountrycode.currency,\n      },\n    });\n\n    if (response.status === 200) {\n      dispatch({ type: APPOINTMENT_SLOT, payload: response.data.data });\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n  \n  export const fetch_more_appointmentSlot =\n  ({ isStart, isNext, date, typeofconsultation, doctorId, isClear }) =>\n    async (dispatch) => {\n\n      countrycoderes = await loginedApi.post(\"getcountrycode\",\n        {\n          \"token\": \"token\",\n          \"version\": \"2.0\",\n          \"data\": { browserTimeZone: `GMT${formatTime}`, },\n          \"requestType\": 1058\n        });\n\n      doctorscountrycode = countrycoderes.data.data;\n\n\n      const response = await loginedApi.post(\"doctortimeslots\", {\n        requestType: \"175\",\n        token: \"C2MDVerificationToken\",\n        data: {\n          timeSlotCriteria: {\n            doctorId: doctorId,\n            date: date,\n            isStart: isStart,\n            isNext: isNext,\n            typeofconsultation: typeofconsultation,\n          },\n          browserTimeZone: `GMT${formatTime}`,\n          todayRate: \"73.49680\",\n          actualRate: \"73.49680\",\n          Ipaddress: doctorscountrycode.Ipaddress, \n          useragent: userAgent,\n          Browser: browser.name+\" \"+browser.version,\n          appname: \"C2MD Web\",\n          Os: platform ,\n          accessCountry: doctorscountrycode.Country,\n          currency: doctorscountrycode.currency,\n        },\n      });\n      if (response.status === 200) {\n        console.log(response);\n        dispatch({ type: isClear ? APPOINTMENT_MORE_SLOT_RESET : APPOINTMENT_MORE_SLOT, payload: response.data.data });\n      }\n    };\n\n\n    export const fetch_appointmentTypes = (doctorId) => async (dispatch) => {\n      countrycoderes = await loginedApi.post(\"getcountrycode\",\n        {\n          \"token\": \"token\",\n          \"version\": \"2.0\",\n          \"data\": { browserTimeZone: `GMT${formatTime}`, },\n          \"requestType\": 1058\n        });\n    \n      doctorscountrycode = countrycoderes.data.data;\n      const response = await loginedApi.post(\"gettypeofconsultation\", {\n        requestType: \"182\",\n        token: \"C2MDVerificationToken\",\n        data: {\n          doctorId: doctorId,\n          browserTimeZone: `GMT${formatTime}`,\n          Ipaddress: doctorscountrycode.Ipaddress, \n          useragent: userAgent,\n          Browser: browser.name+\" \"+browser.version,\n          appname: \"C2MD Web\",\n          Os: platform ,\n          accessCountry: doctorscountrycode.Country,\n          currency: doctorscountrycode.currency,\n          todayRate: \"\",\n        },\n      });\n    \n      return response.data.data.Details;\n    };\n    ","import {\n  BOOK_APPOINMENT_QUESTIONARE,\n  STORE_APPOINMENT_FORM_DATA,\n  ADD_FAMILY,\n  EDIT_FAMILY,\n  BOOKING_CONFIRMATION,\n  BOOKING_UPDATE_CONFIRMATION,\n  REQUEST_BOOKING_CONFIRM,\n  RESET_BOOKING,\n  GOTO_DASHBOARD,\n} from \"./type\";\nimport loginedApi from \"../apis\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nconst { detect } = require('detect-browser');\nconst browser = detect();\n\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif(formatTime.search(/\\+/g)!=null)\n  {\n    formatTime=formatTime.replace(/\\+/g,\"%2B\")\n  }else if(formatTime.search(/\\-/g)!=null)\n  {\n    formatTime=formatTime.replace(/\\-/g,\"%2D\")\n  }//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nexport const fetch_appoinment_questions = () => async (dispatch) => {\n  const res = await axios.post(\n    \"https://run.mocky.io/v3/bb5a24bf-255b-4289-9432-7ff1ebee4320\"\n  );\n\n  dispatch({ type: BOOK_APPOINMENT_QUESTIONARE, payload: res.data });\n};\n\nexport const Store_formData = (data) => async (dispatch) => {\n  dispatch({ type: STORE_APPOINMENT_FORM_DATA, payload: data });\n};\n\nexport const book_slot =\n  ({ data, userr, old_appointment }) =>\n  async (dispatch) => {\n\n    let data1 = {\n      nationalId: data.nationalId,\n\n      // insurance: {\n      //   provider: data.insurance.provider,\n      //   membershipNo: data.insurance.membershipNo,\n      // },\n      symptoms: data.symptoms,\n      medicalConditions: data.medicalConditions,\n      patientHeight: \"100\",\n      firstName: data.firstName,\n      reasonForVisit: data.reasonForVisit,\n      notesToDoctor: data.notesToDoctor,\n      weightMeasurement: \"kg\",\n      noOfBooking: 1,\n      bookingFrom: data.bookingFrom,\n      reminderNumber: data.reminderNumber,\n      appointmentFor: data.appointmentFor,\n      reports: data.reports,\n      blockId: \"\",\n      basicFees: data.basicFees.split(\" \")[1],\n      surgerydetails: data.surgeries,\n      referenceId: data.referenceId,\n      allergies: data.allergies,\n      gender: data.gender,\n      appointmentDate: data.appointmentDate,\n      emergencyname: data.emergencyname,\n      relationship: data.relationship,\n      patientWeight: \"200\",\n      dob: data.dob,\n      heightMeasurement: \"cm\",\n      medications: data.medications,\n      emergencyrelation: data.emergencyrelation,\n      dentalInfo: \"[]\",\n      bookingType: data.bookingType,\n      fees: data.fees,\n      hospitalid: data.hospitalId,\n      typeofconsultation: \"\",\n      doctorId: data.doctorId,\n      emergencyphone: data.emergencyphone,\n      status: data.status,\n      modeOfConsultation: \"Video\",\n      duration: data.duration,\n      appointmentTime: data.appointmentTime,\n      lastName: \"\",\n      typeofconsultation: data.typeofconsultation,\n    };\n\n\n    let response = [];\n    let orderRes = [];\n\n    console.log(\"------data\",data)\n\n    if (data.referenceId == \"\") {\n      \n      if (!old_appointment?.info) {\n        \n          response = await loginedApi.post(\"/appointments\", {\n          token: \"C2MDVerificationToken\",\n          data: {\n            IsfromMobile: true,\n            bookingFrom: data.bookingFrom,\n            todayRate: \"74.27006\",\n            Ipaddress: IP,\n            Os: platform,\n            browserTimeZone: `GMT${formatTime}`,\n            attachedReportFiles: \"[]\",\n            patientId: userr.userId,\n            appointmentDetails: data1,\n            actualRate: \"74.27006\",\n            useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n          },\n          requestType: \"161\",\n        });\n\n        console.log(response)\n        dispatch({\n          type: BOOKING_UPDATE_CONFIRMATION,\n          payload: response.data.data,\n        });\n\n        orderRes = response.data.data;\n      } else {\n        response = old_appointment;\n        orderRes = response;\n      }\n    } else \n      {\n        response = await loginedApi.post(\"/requestordergeneration\", {\n          token: \"C2MDVerificationToken\",\n          data: {\n            IsfromMobile: true,\n            bookingFrom: data.bookingFrom,\n            todayRate: \"74.27006\",\n            Ipaddress: IP,\n            Os: platform,\n            browserTimeZone: `GMT${formatTime}`,\n            attachedReportFiles: \"[]\",\n            doctorId: data.doctorId,\n            fees: data.fees,\n            appointmentId: data.referenceId,\n            appointmentDetails: data1,\n            actualRate: \"74.27006\",\n            useragent: userAgent,\n            Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n          },\n          requestType: \"1023\",\n        });\n        orderRes = response.data.data;\n        data1.bookingFrom = \"Request\";\n        data1.referenceId = orderRes.info;\n      }\n\n    // let orderRes = response.data.data;\n\n    if (data?.bookingFrom == \"Request\") {\n      \n      \n      localStorage.setItem(\"RequestId\",orderRes?.info)\n      let appinmentData = {\n        appoinmentId: \"\",\n        appoinmentFromTime: \"\",\n        appoinmentToTime: \"\",\n        appoinmentType: \"Request\",\n      };\n      dispatch({ type: BOOKING_CONFIRMATION, payload: \"Request\" });\n      // dispatch({ type: REQUEST_BOOKING_CONFIRM });\n\n      // dispatch(\n      //   BookingConfirmationOnRequest({\n      //     orderData: data1,\n      //     user: userr,\n      //     orderRes,\n      //   })\n      // );\n    } else {\n\n     \n      dispatch(\n        displayRazorpay({\n          orderRes,\n          orderdata: data1,\n          user: userr,\n          formData: data,\n        })\n      );\n    }\n  };\nfunction loadScript(src) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n\nexport const displayRazorpay =\n  ({ orderRes, orderdata, user, formData }) =>\n  async (dispatch) => {\n    const res = await loadScript(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n\n    let result = {\n      amount: orderdata.basicFees * 100,\n      currency: \"INR\",\n      receipt: \"Receipt no. 1\",\n      payment_capture: 1,\n      notes: {\n        notes_key_1: \"Tea, Earl Grey, Hot\",\n        notes_key_2: \"Tea, Earl Grey… decaf.\",\n      },\n      order_id: orderRes?.orderId,\n    };\n\n    const { amount, order_id, currency } = result;\n\n    const options = {\n      key: orderRes.paymentgatewaykey, // Enter the Key ID generated from the Dashboard\n      amount: amount.toString(),\n      currency: currency,\n      name: formData?.hospitalname,\n      description: \"\",\n      image: formData?.clinicLogo,\n      order_id: order_id,\n      handler: async function (response) {\n        const data = {\n          orderCreationId: order_id,\n          razorpayPaymentId: response.razorpay_payment_id,\n          razorpayOrderId: response.razorpay_order_id,\n          razorpaySignature: response.razorpay_signature,\n        };\n\n        dispatch(\n          signature_Verification({\n            razorpayRes: data,\n            orderData: orderdata,\n            user: user,\n            orderRes: orderRes,\n          })\n        );\n      },\n      prefill: {\n        name: \"<YOUR NAME>\",\n        email: user.userName,\n        contact: user.mobileNumber,\n      },\n      notes: {\n        address: \"Example Corporate Office\",\n      },\n      theme: {\n        color: \"#61dafb\",\n      },\n    };\n\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.on(\"payment.failed\", function (response) {});\n    paymentObject.open();\n  };\n\nexport const signature_Verification =\n  ({ razorpayRes, orderData, user, orderRes }) =>\n  async (dispatch) => {\n    const res = await loginedApi.post(\"signatureverification\", {\n      data: {\n        razorpay_signature: razorpayRes.razorpaySignature,\n        useragent: userAgent,\n        razorpay_order_id: razorpayRes.razorpayOrderId,\n        razorpay_payment_id: razorpayRes.razorpayPaymentId,\n        Ipaddress: IP,\n        Os: platform,\n        Browser: browser.name+\" \"+browser.version,\n        appname: \"C2MD Web\",\n      },\n      token: \"C2MDVerificationToken\",\n      requestType: \"1025\",\n    });\n\n    if (res.data?.data.status === \"Success\") {\n      dispatch(\n        BookingConfirmation({\n          razorpayRes: razorpayRes,\n          orderData: orderData,\n          user: user,\n          orderRes: orderRes,\n        })\n      );\n    }\n  };\nexport const BookingConfirmation =\n  ({ razorpayRes, orderData, user, orderRes }) =>\n  async (dispatch) => {\n    let uploadData = {\n      transactionPG: \"RAZORPAY\",\n      userId: user.userId,\n      appointmentDetails: {\n        appointmentBook: {\n          patientHeight: \"100\",\n          firstName: orderData.firstName,\n          reasonForVisit: orderData.reasonForVisit,\n          notesToDoctor: orderData.notesToDoctor,\n          weightMeasurement: \"kg\",\n          noOfBooking: 1,\n          bookingFrom: orderData.bookingFrom,\n          reminderNumber: orderData.reminderNumber,\n          appointmentFor: orderData.appointmentFor,\n          reports: orderData.reports,\n          blockId: orderRes?.info,\n          basicFees: orderData.basicFees,\n\n          referenceId: orderData.referenceId,\n          surgerydetails: orderData.surgerydetails,\n          allergies: orderData.allergies,\n          symptoms: orderData.symptoms,\n          medicalConditions: orderData.medicalConditions,\n          medications: orderData.medications,\n          gender: orderData.gender,\n          appointmentDate: orderData.appointmentDate,\n          emergencyname: orderData.emergencyname,\n          relationship: orderData.relationship,\n          patientWeight: \"200\",\n          dob: orderData.dob,\n          heightMeasurement: \"cm\",\n\n          emergencyrelation: orderData.emergencyrelation,\n          dentalInfo: \"[]\",\n          bookingType: orderData.bookingType,\n          fees: orderData.fees,\n          hospitalid: \"\",\n          typeofconsultation: orderData.typeofconsultation,\n          doctorId: orderData.doctorId,\n          emergencyphone: orderData.emergencyphone,\n          status: orderData.status,\n          modeOfConsultation: \"Video\",\n          duration: orderData.duration,\n          appointmentTime: orderData.appointmentTime,\n          lastName: \"\",\n        },\n        couponCode: \"\",\n        bookingId: orderRes?.info,\n      },\n      actualRate: \"74.27006\",\n      couponCode: \"\",\n      Ipaddress: IP,\n      transactionId: razorpayRes.razorpayPaymentId,\n      blockId: orderRes?.info,\n      browserTimeZone: `GMT${formatTime}`,\n      attachedReportFiles: \"[]\",\n      Os: platform,\n      useragent: userAgent,\n      razorpayId: razorpayRes.razorpayPaymentId,\n      patientId: user.userId,\n      referenceId: \"\",\n      todayRate: \"74.27006\",\n      bookingFrom: orderData.bookingFrom,\n   Browser: browser.name+\" \"+browser.version,\n          appname: \"C2MD Web\",\n    };\n\n    const res = await loginedApi.post(\"payment\", {\n      data: uploadData,\n      token: \"C2MDVerificationToken\",\n      requestType: \"313\",\n    });\n\n    let response = res.data.data;\n    let timeData = localStorage.getItem(\"appinmentTime\");\n    let appinmentTime = JSON.parse(timeData);\n    let appinmentData = {\n      appoinmentId: response,\n      appoinmentFromTime: appinmentTime?.appoinmentFromTime,\n      appoinmentToTime: appinmentTime?.appoinmentToTime,\n      appoinmentType: \"Book\",\n    };\n    if (response?.info !== \"Failed\") {\n      dispatch({ type: BOOKING_CONFIRMATION, payload: appinmentData });\n      localStorage.removeItem(\"appinmentTime\");\n    } else {\n    }\n  };\n\n  //\nexport const addMember = (member) => async (dispatch) => {\n  dispatch({ type: ADD_FAMILY, payload: member });\n};\n\nexport const editMember = (member) => async (dispatch) => {\n  dispatch({ type: EDIT_FAMILY, payload: member });\n};\nexport const BookingConfirmationOnRequest =\n  ({ orderData, user, orderRes }) =>\n  async (dispatch) => {\n    let uploadData = {\n      transactionPG: \"RAZORPAY\",\n      userId: user.userId,\n      appointmentDetails: {\n        appointmentBook: {\n          patientHeight: \"100\",\n          firstName: orderData.firstName,\n          reasonForVisit: orderData.reasonForVisit,\n          notesToDoctor: orderData.notesToDoctor,\n          weightMeasurement: \"kg\",\n          noOfBooking: 1,\n          bookingFrom: orderData.bookingFrom,\n          reminderNumber: \"\",\n          appointmentFor: orderData.appointmentFor,\n          reports: orderData.reports,\n          blockId: orderRes?.info,\n          basicFees: orderData.basicFees,\n          surgerydetails: orderData.surgeries,\n          referenceId: \"\",\n          allergies: orderData.allergies,\n          gender: orderData.gender,\n          appointmentDate: orderData.appointmentDate,\n          emergencyname: orderData.emergencyname,\n          relationship: orderData.relationship,\n          patientWeight: \"200\",\n          dob: orderData.dob,\n          heightMeasurement: \"cm\",\n          medications: orderData.medications,\n          emergencyrelation: orderData.emergencyrelation,\n          dentalInfo: \"[]\",\n          bookingType: orderData.bookingType,\n          fees: orderData.fees,\n          hospitalid: \"\",\n          typeofconsultation: orderData.typeofconsultation,\n          doctorId: orderData.doctorId,\n          emergencyphone: \"\",\n          status: orderData.status,\n          modeOfConsultation: \"Video\",\n          duration: orderData.duration,\n          appointmentTime: orderData.appointmentTime,\n          lastName: \"\",\n        },\n        couponCode: \"\",\n        bookingId: orderRes?.info,\n      },\n      actualRate: \"74.27006\",\n      couponCode: \"\",\n      Ipaddress: IP,\n      transactionId: \"\",\n      blockId: orderRes?.info,\n      browserTimeZone: `GMT${formatTime}`,\n      attachedReportFiles: \"[]\",\n      Os: platform,\n      useragent: userAgent,\n      razorpayId: \"\",\n      patientId: user.userId,\n      referenceId: \"\",\n      todayRate: \"74.27006\",\n      bookingFrom: orderData.bookingFrom,\n      Browser: browser.name+\" \"+browser.version,\n            appname: \"C2MD Web\",\n    };\n\n    const res = await loginedApi.post(\"payment\", {\n      data: uploadData,\n      token: \"C2MDVerificationToken\",\n      requestType: \"313\",\n    });\n\n    let response = res.data.data;\n\n    if (response?.info !== \"Failed\") {\n      dispatch({ type: BOOKING_CONFIRMATION, payload: response });\n    } else {\n    }\n  };\nexport const GotoDashboard_action = () => async (dispatch) => {\n  dispatch({ type: GOTO_DASHBOARD });\n};\n\nexport const reset_booking = () => async (dispatch) => {\n  dispatch({ type: RESET_BOOKING });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"doctor_listing_modal_align\":\"BookAppointment_doctor_listing_modal_align__PJAhs\",\"doctor_listing_heading\":\"BookAppointment_doctor_listing_heading__17ZW-\"};","// extracted by mini-css-extract-plugin\nexport default {\"Schedule\":\"MobileSchedule_Schedule__MBDIl\",\"Select_wrapper\":\"MobileSchedule_Select_wrapper__iFFFC\",\"SubText\":\"MobileSchedule_SubText__7Kbmv\",\"appointmentTypeTxt\":\"MobileSchedule_appointmentTypeTxt__ia7c9\",\"monthLeft\":\"MobileSchedule_monthLeft__KCMve\",\"availableTimeTxt\":\"MobileSchedule_availableTimeTxt__T+bQh\",\"availableTimeTxtimg\":\"MobileSchedule_availableTimeTxtimg__50nC5\",\"left_Text\":\"MobileSchedule_left_Text__wD7GT\",\"Schedule_Bottom\":\"MobileSchedule_Schedule_Bottom__pvRLA\",\"BottomTop\":\"MobileSchedule_BottomTop__fLfay\",\"right_Text\":\"MobileSchedule_right_Text__iFSo4\",\"SliderItem\":\"MobileSchedule_SliderItem__hhhtm\",\"Day_head\":\"MobileSchedule_Day_head__XQePB\",\"Day_text\":\"MobileSchedule_Day_text__lN+51\",\"SliderItemInner\":\"MobileSchedule_SliderItemInner__P7DvN\",\"OnlyOnRequest\":\"MobileSchedule_OnlyOnRequest__Dn4JY\",\"textContent\":\"MobileSchedule_textContent__3FOJE\",\"req_btn_wrp\":\"MobileSchedule_req_btn_wrp__Hxj5o\",\"reqst_btn\":\"MobileSchedule_reqst_btn__j0-aG\",\"TimeSlot_main_wrapper\":\"MobileSchedule_TimeSlot_main_wrapper__i8ahI\",\"timeSlot_btn\":\"MobileSchedule_timeSlot_btn__8P1d7\",\"timeSolt_wrapper\":\"MobileSchedule_timeSolt_wrapper__BLRpP\",\"Loadmore\":\"MobileSchedule_Loadmore__4DCEy\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"react-multi-carousel\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport AppointmentOnRequest from \"../AppointmentOnRequest\";\nimport {\n  fetch_appointmentSlot,\n  fetch_appointmentTypes,\n  fetch_more_appointmentSlot,\n} from \"../../../actions/AppointmentSlotAction\";\nimport Assets from \"../../Layout/Assets\";\n\nimport \"react-multi-carousel/lib/styles.css\";\nimport Style from \"./MobileSchedule.module.scss\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Store_formData,reset_booking } from \"../../../actions/BookAppoinmentAction\";\n\nfunction MobileSchedule({\n  responsive,\n  Typeofappointment,\n  doctorId,\n  DayCounter,\n}) {\n  const moment = require(\"moment\");\n  const [ApponmtType, SetAppmtType] = useState(\"\");\n  const [ShowRequest, setRequest] = useState(false);\n  const [ApponmtList, setApponmtList] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const Login = useSelector((state) => state.login);\n  const location = useLocation();\n  const [SelectedType, setSelectedType] = useState(\"\");\n  const isCurrentDate = (timeSlot, time) => {\n    // debugger;\n    let givenDate = `${timeSlot.year}-${timeSlot.month + 1}-${\n      timeSlot.dates\n    } ${time}`;\n    let today = moment().format(\"YYYY-MM-DD hh:mm\");\n    return moment(givenDate,'YYYY-MM-DD hh:mm A').isBefore(today);\n  };\n  // useEffect(() => {\n  //   let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n\n  //   dispatch(\n  //     fetch_appointmentSlot({\n  //       isStart: true,\n  //       isNext: false,\n  //       date: dateFrom,\n  //     })\n  //   );\n  //   dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n  //     setApponmtList(res);\n  //   });\n  // }, []);\n  const appoinment_form = useSelector(\n    (state) => state.bookAppoinment.appoinment_form\n  );\n  useEffect(() => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    dispatch(reset_booking());\n\n    dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n      setApponmtList(res);\n      setSelectedType(res[0].Type);\n      setRequest(res[0].availableType == \"On Request\");\n      Onload(dateFrom, res[0].Type);\n      SetAppmtType(\n        `${res[0].Type} (${res[0].Amount.split(\".\")[0]}) for up to ${res[0].Duration} Min`\n      );\n      dispatch(\n        Store_formData({\n          ...appoinment_form,\n          typeofconsultation: res[0].Type,\n          doctorfees: res[0].doctorfees,\n          gstamount: res[0].Gst,\n          fees: res[0].Amount,\n          duration: res[0].Duration,\n          c2mdfees: res[0].c2mdFees,\n          basicFees: res[0].doctorfees,\n        })\n      );\n    });\n  }, []);\n\n  const Onload = (dateFrom, type) => {\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: true,\n        isNext: false,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: type,\n      })\n    );\n  };\n\n\n\n  const TimeSlot = useSelector((state) => state.doctorDetail.timeSlot);\n  const currentMonth = TimeSlot && TimeSlot.length > 0 && TimeSlot[0];\n\n  const handleChange = (event) => {\n    SetAppmtType(event.target.value);\n  };\n  const ButtonGroup = ({ next, previous, goToSlide, ...rest }) => {\n    const {\n      carouselState: { currentSlide },\n    } = rest;\n    const Nextslide = () => {\n      // goToSlide(currentSlide + 7);\n\n      let day = `${TimeSlot[DayCounter?.next].dates} ${\n        TimeSlot[DayCounter?.next].month + 1\n      } ${TimeSlot[DayCounter?.next].year}`;\n\n      dispatch(\n        fetch_appointmentSlot({\n          isStart: false,\n          isNext: true,\n          date: day,\n        })\n      );\n    };\n    const onBack = () => {\n      currentSlide !== 0 && goToSlide(currentSlide - DayCounter?.back);\n\n      let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${\n        TimeSlot[0].dates\n      } `;\n\n      let dateFrom = moment(CurrentDay)\n        .subtract(DayCounter?.back, \"d\")\n        .format(\"DD MM YYYY\");\n\n      let today = moment().format(\"YYYY-MM-DD\");\n      let check = moment(today).isAfter(CurrentDay);\n      let CheckDay = moment(CurrentDay).isSame(today);\n      if (!CheckDay) {\n        if (!check) {\n          dispatch(\n            fetch_appointmentSlot({\n              isStart: false,\n              isNext: true,\n              date: dateFrom,\n              doctorId: doctorId,\n              typeofconsultation: SelectedType,\n            })\n          );\n        }\n      }\n    };\n\n    return (\n      <div className=\"carousel-button-group\" style={{ display: \"flex\" }}>\n        <div style={{ flex: 1 }}>\n          <Button\n            style={{\n              float: \"left\",\n              borderColor: \"#F5F6F8\",\n            }}\n            variant=\"outline-primary\"\n            className={currentSlide === 0 ? \"disable\" : \"\"}\n            onClick={onBack}\n          >\n            <img src={Assets.rightArrow} alt=\"<\" />\n          </Button>\n        </div>\n        <div style={{ flex: 1 }}>\n          <Button\n            variant=\"outline-primary\"\n            // onClick={() => next()}\n            onClick={Nextslide}\n            style={{\n              float: \"right\",\n              borderColor: \"#F5F6F8\",\n            }}\n          >\n            <img src={Assets.rightArrow} alt=\">\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const addMoreSlot = () => {\n    let day = `${TimeSlot[TimeSlot.length - 1]?.dates} ${\n      TimeSlot[TimeSlot.length - 1].month + 1\n    } ${TimeSlot[TimeSlot.length - 1].year}`;\n\n    let dateFrom = moment(day, \"DD MM YYYY\").format(\"DD MM YYYY\");\n    // .subtract(1, \"d\")\n\n    dispatch(\n      fetch_more_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: SelectedType,\n      })\n    );\n  };\n\n  const typeChange = (item) => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    SetAppmtType(\n      `${item.Type} (${item.doctorfees} for upto ${item.Duration} Min)`\n    );\n    setSelectedType(item.Type);\n    setRequest(item.availableType == \"On Request\");\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        typeofconsultation: item.Type,\n        doctorId: doctorId,\n      })\n    );\n  };\n\n  const bookingAppOnRequest = () => {\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        appointmentDate: \"\",\n        appointmentTime: \"\",\n        bookingFrom: \"Request\",\n        bookingType: \"Request\",\n        doctorId: doctorId,\n        routing: true,\n      })\n    );\n    if (Login.login) {\n      history.push({\n        pathname: `/bookAppointment/${doctorId}`,\n        state: { doctorId: doctorId },\n      });\n    } else {\n      history.push({\n        // pathname:`/signin?redirection=/bookAppointment/${doctorId}`\n        pathname: `/signin`,\n        state: { redirection: `/bookAppointment/${doctorId}` },\n      });\n    }\n  };\n\n  const bookingApp = (time, date, bookingType, bookingFrom) => {\n    let CurrentDay = `${date.year}-${date.month + 1}-${date.dates} `;\n\n    let DateVariable = moment(CurrentDay, \"YYYY-MM-DD\").format(\"DD-MMMM-YYYY\");\n    let dt = moment(time, [\"h:mm A\"]).format(\"HH:mm\");\n    let toTime = moment(time, [\"h:mm A\"]).add(15, \"minutes\").format(\"HH:mm\");\n\n    let dateTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${dt}`;\n\n    let ToTimeFormat = `${date.year}-${date.month + 1}-${date.dates} ${toTime}`;\n\n    let format2 = moment(dateTimeFormat,'YYYY-MM-DD HH:mm').format(\"YYYY-MM-DDTHH:mm:ss\");\n    localStorage.setItem(\n      \"appinmentTime\",\n      JSON.stringify({\n        appoinmentFromTime: format2,\n        appoinmentToTime: ToTimeFormat,\n      })\n    );\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        appointmentDate: DateVariable,\n        appointmentTime: time,\n        bookingFrom: bookingFrom,\n        bookingType: bookingType,\n        appoinmentFromTime: format2,\n        appoinmentToTime: ToTimeFormat,\n        doctorId: doctorId,\n        routing: true,\n      })\n    );\n    if (Login.login) {\n      history.push({\n        pathname: `/bookAppointment/${doctorId}`,\n        state: { doctorId: doctorId },\n      });\n    } else {\n      history.push({\n        pathname: `/signin`,\n        state: { redirection: `/bookAppointment/${doctorId}` },\n      });\n    }\n  };\n  const onTypeChange = (item) => {\n    typeChange(item);\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        typeofconsultation: item.Type,\n        doctorfees: item.doctorfees,\n        gstamount: item.Gst,\n        fees: item.Amount,\n        duration: item.Duration,\n        c2mdfees: item.c2mdFees,\n        basicFees: item.Amount,\n      })\n    );\n  };\n  return (\n    <div className={Style.Schedule}>\n      <div className={Style.Select_wrapper}>\n        <p className={Style.appointmentTypeTxt}>\n          {\" \"}\n          <img src={Assets.appointment} alt=\"appointment\" />\n          Appointment type\n        </p>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            {ApponmtType.split(\"(\")?.[0]}\n            <span className={Style.SubText}>\n              {ApponmtType.split(\"(\")?.[1] &&\n                \"( \" + ApponmtType.split(\"(\")?.[1]}\n              {/* ( {ApponmtType.split(\"(\")?.[1]} */}\n            </span>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {ApponmtList.map((item, index) => {\n              return (\n                <Dropdown.Item\n                  onClick={() => {\n                    onTypeChange(item);\n                  }}\n                >\n                  {item.Type}{\" \"}\n                  <span className={Style.SubText}>\n                    ({item.doctorfees} for upto {item.Duration} Min)\n                  </span>\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n        {/* <select value={ApponmtType} onChange={handleChange}>\n          {ApponmtList.map((item, index) => {\n            return (\n              <option value={item.Type} key={index}>\n                {item.Type} ({item.doctorfees} for upto {item.Duration} Min)\n              </option>\n            );\n          })}\n        </select> */}\n      </div>\n      <p className={Style.availableTimeTxt}>\n        <span className={Style.availableTimeTxtimg}>\n          <img src={Assets.time} alt=\"time\" />\n          Select an available time\n        </span>\n        <p className={Style.left_Text}>\n          <span>\n            {\" \"}\n            {moment(\n              `${currentMonth.year}-${currentMonth.month + 1}-${\n                currentMonth.dates\n              }`,'YYYY-MM-DD'\n            ).format(\"MMM\")}{\" \"}\n            {moment(\n              `${currentMonth.year}-${currentMonth.month + 1}-${\n                currentMonth.dates\n              }`,'YYYY-MM-DD'\n            ).format(\"YYYY\")}\n          </span>\n        </p>\n      </p>\n      {ShowRequest ? (\n        <AppointmentOnRequest bookingApp={bookingAppOnRequest} />\n      ) : (\n        <div className={Style.Schedule_Bottom}>\n          <InfiniteScroll\n            loadMore={() => addMoreSlot()}\n            hasMore={true}\n            pageStart={1}\n          >\n            {TimeSlot &&\n              TimeSlot.map((item, index) => {\n                return (\n                  <>\n                    {TimeSlot[index] && TimeSlot[index]?.dates == 1 && (\n                      <p className={Style.monthLeft}>\n                        <span>\n                          {\" \"}\n                          {moment(\n                            `${TimeSlot[index].year}/${\n                              TimeSlot[index].month + 1\n                            }/${TimeSlot[index].dates}`\n                          ).format(\"MMM\")}{\" \"}\n                          {moment(\n                            `${TimeSlot[index].year}/${\n                              TimeSlot[index].month + 1\n                            }/${TimeSlot[index].dates}`\n                          ).format(\"YYYY\")}\n                        </span>\n                      </p>\n                    )}\n                    <div key={index}>\n                      <div className={Style.SliderItem}>\n                        <p className={Style.Day_text}>\n                          {item.dates}{\" \"}\n                          {moment(\n                            `${item.year}/${item.month + 1}/${item.dates}`\n                          ).format(\"dddd\")}\n                        </p>\n                      </div>\n                      <div className={Style.SliderItemInner}>\n                        {item.requestSlot ? (\n                          <div className={Style.OnlyOnRequest}>\n                            <h6 className={Style.textContent}>\n                              Only On Request\n                            </h6>\n                            <div className={Style.req_btn_wrp}>\n                              <Button\n                                variant=\"outline-primary\"\n                                className={Style.reqst_btn}\n                                onClick={() => setRequest(true)}\n                              >\n                                Request Now\n                              </Button>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className={Style.TimeSlot_main_wrapper}>\n                            <div className={Style.timeSolt_wrapper}>\n                              {item.slots.length > 0 ? (\n                                !isCurrentDate(\n                                  item,\n                                  item.slots[item.slots.length - 1].time\n                                ) ? (\n                                  item.slots.map((data) => {\n                                    if (!isCurrentDate(item, data.time)) {\n                                      return (\n                                        <Button\n                                          variant=\"outline-primary\"\n                                          className={Style.timeSlot_btn}\n                                          key={data.time}\n                                          onClick={() =>\n                                            bookingApp(\n                                              data.time,\n                                              item,\n                                              \"Book\",\n                                              \"AppointmentBooking\"\n                                            )\n                                          }\n                                        >\n                                          {data.time}\n                                        </Button>\n                                      );\n                                    }\n                                  })\n                                ) : (\n                                  <Button\n                                    variant=\"outline-primary\"\n                                    className={`${Style.timeSlot_btn}  ${Style.Noslots_btn}`}\n                                    disabled\n                                  >\n                                    No slots available\n                                  </Button>\n                                )\n                              ) : (\n                                <Button\n                                  variant=\"outline-primary\"\n                                  className={`${Style.timeSlot_btn}  ${Style.Noslots_btn}`}\n                                  disabled\n                                >\n                                  No slots available\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </>\n                );\n              })}\n            <Button\n              variant=\"outline-primary\"\n              className={Style.Loadmore}\n              onClick={addMoreSlot}\n            >\n              Load More\n            </Button>\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MobileSchedule;\n","import React, { useState } from \"react\";\nimport Style from \"./BookAppointment.module.scss\";\nimport classNames from \"classnames\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Assets from \"../Layout/Assets\";\nimport Schedule from \"../DoctorprofileSchedule/Schedule\";\nimport MobileSchedule from \"../DoctorprofileSchedule/MobileSchedule\";\nimport { useDimensions } from \"../../logic/Dimensions\";\n\nfunction BookAppointment({ show, handleClose, doctorId }) {\n  const { width } = useDimensions();\n  const responsive = {\n    superLargeDesktop: {\n      breakpoint: { max: 4000, min: 3000 },\n      items: 3,\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  };\n  const DayCounter = { next: 2, back: 4 };\n\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        className={`${Style.doctor_listing_modal_align} book_modal`}\n      >\n        <Modal.Header closeButton className={Style.doctor_listing_heading}>\n          <Modal.Title>Book your Appointment</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {width >= 992 ? (\n            <Schedule\n              responsive={responsive}\n              doctorId={doctorId}\n              DayCounter={DayCounter}\n            />\n          ) : (\n            <MobileSchedule\n              responsive={responsive}\n              doctorId={doctorId}\n              DayCounter={DayCounter}\n            />\n          )}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default BookAppointment;\n","// extracted by mini-css-extract-plugin\nexport default {\"AppointmentOnRequest\":\"AppointmentOnRequest_AppointmentOnRequest__mWZQV\",\"wrapper\":\"AppointmentOnRequest_wrapper__EmNCg\",\"leftSection\":\"AppointmentOnRequest_leftSection__aG9u0\",\"heading\":\"AppointmentOnRequest_heading__0gXzs\",\"content\":\"AppointmentOnRequest_content__ba3WZ\",\"rightSection\":\"AppointmentOnRequest_rightSection__1UI-B\",\"reqst_btn\":\"AppointmentOnRequest_reqst_btn__Z4GTn\",\"rqst_text\":\"AppointmentOnRequest_rqst_text__sFbvz\"};","import React from \"react\";\nimport Style from \"./AppointmentOnRequest.module.scss\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nfunction AppointmentOnRequest({ bookingApp }) {\n  return (\n    <div className={Style.AppointmentOnRequest}>\n      <Row className={Style.wrapper}>\n        <Col sm={12} md={7} lg={7}>\n          <div className={Style.leftSection}>\n            <h6 className={Style.heading}>\n              Appointment available only on request\n            </h6>\n            <p className={Style.content}>\n              To request an appointment, click the Request Now button\n            </p>\n          </div>\n        </Col>\n        <Col sm={12} md={5} lg={5}>\n          <div className={Style.rightSection}>\n            <Button\n              variant=\"outline-primary\"\n              className={Style.reqst_btn}\n              onClick={() => {\n                bookingApp();\n              }}\n            >\n              Request Now\n            </Button>\n            <p className={Style.rqst_text}>\n              Payment once appointment is confirmed\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AppointmentOnRequest;\n","// extracted by mini-css-extract-plugin\nexport default {\"Schedule\":\"Schedule_Schedule__DqFpt\",\"Select_wrapper\":\"Schedule_Select_wrapper__AFmfo\",\"SubText\":\"Schedule_SubText__vI2ai\",\"appointmentTypeTxt\":\"Schedule_appointmentTypeTxt__WuRoa\",\"availableTimeTxt\":\"Schedule_availableTimeTxt__cIJL6\",\"errmsg\":\"Schedule_errmsg__Bxsm4\",\"Schedule_Bottom\":\"Schedule_Schedule_Bottom__nBcYS\",\"BottomTop\":\"Schedule_BottomTop__mualf\",\"left_Text\":\"Schedule_left_Text__5VmdD\",\"right_Text\":\"Schedule_right_Text__Sfgox\",\"SliderItem\":\"Schedule_SliderItem__-UsJg\",\"Day_head\":\"Schedule_Day_head__wXiUv\",\"Day_head_active\":\"Schedule_Day_head_active__kVdaH\",\"Day_text\":\"Schedule_Day_text__qrPs+\",\"SliderItemInner\":\"Schedule_SliderItemInner__0qxid\",\"OnlyOnRequest\":\"Schedule_OnlyOnRequest__g6xqq\",\"textContent\":\"Schedule_textContent__wB0mL\",\"reqst_btn\":\"Schedule_reqst_btn__ZRrn4\",\"TimeSlot_main_wrapper\":\"Schedule_TimeSlot_main_wrapper__KSmIg\",\"timeSlot_btn\":\"Schedule_timeSlot_btn__9dnLF\",\"timeSolt_wrapper\":\"Schedule_timeSolt_wrapper__AUIfO\",\"noSoltsAvailable\":\"Schedule_noSoltsAvailable__lrvu5\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"react-multi-carousel\";\nimport { Button, Form, Dropdown } from \"react-bootstrap\";\nimport AppointmentOnRequest from \"../AppointmentOnRequest\";\nimport {\n  fetch_appointmentSlot,\n  fetch_appointmentTypes,\n} from \"../../../actions/AppointmentSlotAction\";\nimport Assets from \"../../Layout/Assets\";\nimport {\n  reset_booking,\n  Store_formData,\n} from \"../../../actions/BookAppoinmentAction\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Style from \"./Schedule.module.scss\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nfunction Schedule({ responsive, Typeofappointment, doctorId, DayCounter }) {\n  const moment = require(\"moment\");\n  const [ApponmtType, SetAppmtType] = useState(\"\");\n  const [ShowRequest, setRequest] = useState(false);\n  const [ApponmtList, setApponmtList] = useState([]);\n  const [SelectedType, setSelectedType] = useState(\"\");\n  const [DoctorFee, setDoctorFee] = useState(1);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [toastOpen, setToastOpen] = useState(false);\n\n  const appoinment_form = useSelector(\n    (state) => state.bookAppoinment.appoinment_form\n  );\n  useEffect(() => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    dispatch(reset_booking());\n\n    dispatch(fetch_appointmentTypes(doctorId)).then((res) => {\n      setApponmtList(res);\n      setSelectedType(res[0].Type);\n      setRequest(res[0].availableType == \"On Request\");\n      Onload(dateFrom, res[0].Type);\n      SetAppmtType(\n        `${res[0].Type} (${res[0].Amount.split(\".\")[0]} for upto ${res[0].Duration} Min)`\n      );\n      setDoctorFee(res[0].Amount);\n      dispatch(\n        Store_formData({\n          ...appoinment_form,\n          typeofconsultation: res[0].Type,\n          doctorfees: res[0].doctorfees,\n          gstamount: res[0].Gst,\n          fees: res[0].Amount,\n          duration: res[0].Duration,\n          c2mdfees: res[0].c2mdFees,\n          basicFees: res[0].doctorfees.split(\" \")[1],\n        })\n      );\n    });\n  }, []);\n\n  const Onload = (dateFrom, type) => {\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: true,\n        isNext: false,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: type,\n      })\n    );\n  };\n\n  const Login = useSelector((state) => state.login);\n  const TimeSlot = useSelector((state) => state.doctorDetail.timeSlot);\n  const currentMonth = TimeSlot && TimeSlot.length > 0 && TimeSlot[0];\n\n  const handleChange = (event) => {\n    SetAppmtType(event.target.value);\n  };\n\n  const isCurrentDate = (timeSlot, time) => {\n    let givenDate = `${timeSlot.year}-${timeSlot.month + 1}-${\n      timeSlot.dates\n    } ${time}`;\n    let today = moment().format(\"YYYY-MM-DD hh:mm A\");\n    return moment(givenDate).isBefore(today);\n  };\n\n  const ButtonGroup = ({ next, previous, goToSlide, ...rest }) =>\n  {\n    const {\n      carouselState: { currentSlide },\n    } = rest;\n    const Nextslide = () => {\n      // goToSlide(currentSlide + 7);\n\n      let day = `${TimeSlot[DayCounter?.next].dates} ${\n        TimeSlot[DayCounter?.next].month + 1\n      } ${TimeSlot[DayCounter?.next].year}`;\n\n      dispatch(\n        fetch_appointmentSlot({\n          isStart: false,\n          isNext: true,\n          date: day,\n          doctorId: doctorId,\n          typeofconsultation: SelectedType,\n        })\n      );\n    };\n\n    const onBack = () => {\n      currentSlide !== 0 && goToSlide(currentSlide - DayCounter?.back);\n\n      let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${\n        TimeSlot[0].dates\n      } `;\n\n      let dateFrom = moment(CurrentDay)\n        .subtract(DayCounter?.back, \"d\")\n        .format(\"DD MM YYYY\");\n\n      let today = moment().format(\"YYYY-MM-DD\");\n\n      let check = moment(today).isAfter(CurrentDay);\n\n      let CheckDay = moment(CurrentDay).isSame(moment().format(\"YYYY-M-DD\"));\n\n      if (!CheckDay) {\n        if (!check) {\n          dispatch(\n            fetch_appointmentSlot({\n              isStart: true,\n              isNext: true,\n              date: dateFrom,\n              doctorId: doctorId,\n              typeofconsultation: SelectedType,\n            })\n          );\n        } else {\n        }\n      } else {\n      }\n    };\n\n    return (\n      <div className=\"carousel-button-group\" style={{ display: \"flex\" }}>\n        <div style={{ flex: 1, border:0 }}>\n          <Button\n            style={{\n              float: \"left\",\n              borderColor: \"#F5F6F8\",\n            }}\n            variant=\"outline-primary\"\n            className={currentSlide === 0 ? \"disable\" : \"\"}\n            onClick={onBack}\n          >\n            {!moment(\n              `${TimeSlot[0]?.year}-${TimeSlot[0]?.month + 1}-${\n                TimeSlot[0]?.dates\n              }`\n            ).isSame(moment().format(\"YYYY-M-DD\")) && (\n              <img src={Assets.rightArrow} alt=\"<\" />\n            )}\n          </Button>\n        </div>\n        <div style={{ flex: 1 }}>\n          <Button\n            variant=\"outline-primary\"\n            // onClick={() => next()}\n            onClick={Nextslide}\n            style={{\n              float: \"right\",\n              borderColor: \"#F5F6F8\",\n            }}\n          >\n            <img src={Assets.rightArrow} alt=\">\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const bookingApp = (time, date, bookingType, bookingFrom) => {\n    if (Login?.user?.userType === \"Doctor\") {\n      if (!toastOpen) {\n        toast.error(\n          \"Sorry,This booking facility is allowed only for patients\",\n          {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            onOpen: (props) => setToastOpen(true),\n            onClose: (props) => setToastOpen(false),\n          }\n        );\n      }\n    } else {\n      if (DoctorFee == 0) {\n        if (!toastOpen) {\n          toast.error(\"Please contact our support team \", {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            onOpen: (props) => setToastOpen(true),\n            onClose: (props) => setToastOpen(false),\n          });\n        }\n      } else {\n        let CurrentDay = `${date.year}-${date.month + 1}-${date.dates} `;\n\n        let DateVariable = moment(CurrentDay, \"YYYY-MM-DD\").format(\n          \"DD-MMMM-YYYY\"\n        );\n        let dt = moment(time, [\"h:mm A\"]).format(\"HH:mm\");\n        let toTime = moment(time, [\"h:mm A\"])\n          .add(15, \"minutes\")\n          .format(\"HH:mm\");\n\n        let dateTimeFormat = `${date.year}-${date.month + 1}-${\n          date.dates\n        } ${dt}`;\n\n        let ToTimeFormat = `${date.year}-${date.month + 1}-${\n          date.dates\n        } ${toTime}`;\n\n        let format2 = moment(dateTimeFormat, \"YYYY-MM-DD HH:mm\").format(\n          \"YYYY-MM-DD HH:mm\"\n        );\n\n        localStorage.setItem(\n          \"appinmentTime\",\n          JSON.stringify({\n            appoinmentFromTime: format2,\n            appoinmentToTime: ToTimeFormat,\n          })\n        );\n        dispatch(\n          Store_formData({\n            ...appoinment_form,\n            appointmentDate: DateVariable,\n            appointmentTime: time,\n            bookingFrom: bookingFrom,\n            bookingType: bookingType,\n            appoinmentFromTime: format2,\n            appoinmentToTime: ToTimeFormat,\n            doctorId: doctorId,\n            routing: true,\n          })\n        );\n        if (Login.login) {\n          history.push({\n            pathname: `/bookAppointment/${doctorId}`,\n            state: { doctorId: doctorId },\n          });\n        } else {\n          history.push({\n            // pathname:`/signin?redirection=/bookAppointment/${doctorId}`\n            pathname: `/signin`,\n            state: { redirection: `/bookAppointment/${doctorId}` },\n          });\n        }\n      }\n    }\n  };\n\n  const bookingAppOnRequest = () => {\n    localStorage.setItem(\"doctrID\", doctorId);\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        appointmentDate: \"\",\n        appointmentTime: \"\",\n        bookingFrom: \"Request\",\n        bookingType: \"Request\",\n        doctorId: doctorId,\n        routing: true,\n      })\n    );\n    if (DoctorFee == 0) \n    {\n      if (!toastOpen) {\n        toast.error(\"Please contact our support team \", {\n          position: toast.POSITION.TOP_CENTER,\n          hideProgressBar: true,\n          onOpen: (props) => setToastOpen(true),\n          onClose: (props) => setToastOpen(false),\n        });\n      }\n    } else {\n      if (Login.login) {\n        history.push({\n          pathname: `/bookAppointment/${doctorId}`,\n          state: { doctorId: doctorId },\n        });\n      } else {\n        history.push({\n          pathname: `/signin`,\n          state: { redirection: `/bookAppointment/${doctorId}` },\n        });\n      }\n    }\n  };\n\n  const typeChange = (item) => {\n    let dateFrom = moment().subtract(1, \"d\").format(\"DD MM YYYY\");\n    SetAppmtType(`${item.Type} (${item.Amount.split(\".\")[0]} for up to ${item.Duration} Min)`);\n    setSelectedType(item.Type);\n    setRequest(item.availableType == \"On Request\");\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        typeofconsultation: item.Type,\n        doctorId: doctorId,\n      })\n    );\n  };\n\n  const monthChange = () => {\n    let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-1`;\n    // moment().add(1, 'months');\n    let dateFrom = moment(CurrentDay).endOf(\"month\").format(\"DD MM YYYY\");\n    dispatch(\n      fetch_appointmentSlot({\n        isStart: false,\n        isNext: true,\n        date: dateFrom,\n        doctorId: doctorId,\n        typeofconsultation: SelectedType,\n      })\n    );\n  };\n\n  const previousMonthChange = () => {\n    let CurrentDay = `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-1`;\n    let today = moment().format(\"YYYY-MM-DD\");\n\n    let check = moment(today).isBefore(\n      moment(CurrentDay).subtract(1, \"months\")\n    );\n    if (!(CurrentDay <= moment().format(\"YYYY-M\") + \"-1\")) {\n      let dateFrom = \"\";\n      if (!check) {\n        dateFrom = moment(\n          `${TimeSlot[0].year}-${TimeSlot[0].month + 1}-${moment(today).format(\n            \"DD\"\n          )}`\n        )\n          .subtract(1, \"months\")\n          .subtract(1, \"day\")\n          .format(\"DD MM YYYY\");\n      } else {\n        dateFrom = moment(CurrentDay)\n          .subtract(1, \"months\")\n          .subtract(1, \"day\")\n          .format(\"DD MM YYYY\");\n      }\n\n      dispatch(\n        fetch_appointmentSlot({\n          isStart: false,\n          isNext: true,\n          date: dateFrom,\n          doctorId: doctorId,\n          typeofconsultation: SelectedType,\n        })\n      );\n    }\n  };\n\n  const onTypeChange = (item) => {\n    let doctorfees = item.Amount?.split(item.Currency);\n\n    setDoctorFee(doctorfees[1]);\n    typeChange(item);\n    dispatch(\n      Store_formData({\n        ...appoinment_form,\n        typeofconsultation: item.Type,\n        doctorfees: item.doctorfees,\n        gstamount: item.Gst,\n        fees: item.Amount,\n        duration: item.Duration,\n        c2mdfees: item.c2mdFees,\n        basicFees: item.Amount,\n      })\n    );\n  };\n  return (\n    <div className={Style.Schedule}>\n      <div className={Style.Select_wrapper}>\n        <p className={Style.appointmentTypeTxt}>\n          {\" \"}\n          <img src={Assets.appointment} alt=\"appointment\" />\n          Appointment type\n        </p>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            {ApponmtType.split(\"(\")?.[0]}\n            <span className={Style.SubText}>\n              {/* ( {ApponmtType.split(\"(\")?.[1]} */}\n              {ApponmtType.split(\"(\")?.[1] &&\n                \"(\" + ApponmtType.split(\"(\")?.[1]}\n            </span>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {ApponmtList.map((item, index) => {\n              return (\n                <Dropdown.Item\n                  onClick={() => {\n                    onTypeChange(item);\n                  }}\n                >\n                  {item.Type}{\" \"}\n                  <span className={Style.SubText}>\n                    ({item.Amount.split(\".\")[0]} for up to {item.Duration} Min)\n                  </span>\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n      <div className={Style.availableTimeTxt}>\n        <img src={Assets.time} alt=\"time\" />\n        {ShowRequest\n          ? \"Request for an appointment\"\n          : \"Select an available time\"}\n      </div>\n      {DoctorFee == 0 && (\n        <p className={Style.errmsg}>\n          You can't book appointment for this doctor. Please contact the support\n          team\n        </p>\n      )}\n      {ShowRequest ? (\n        <AppointmentOnRequest bookingApp={bookingAppOnRequest} />\n      ) : (\n        TimeSlot &&\n        TimeSlot.length != 0 && (\n          <div className={Style.Schedule_Bottom}>\n            <div className={Style.BottomTop}>\n              <p className={Style.left_Text} onClick={previousMonthChange}>\n                {!(\n                  moment(\n                    `${currentMonth.year}-${currentMonth.month + 1}-1`,\n                    \"YYYY-MM-D\"\n                  ).format(\"YYYY-M-D\") <=\n                  moment().format(\"YYYY-M\") + \"-1\"\n                ) && (\n                  <img\n                    src={Assets.nextArrow}\n                    alt=\"\"\n                    style={{ transform: \"rotate(180deg)\", width: \"8px\" }}\n                  />\n                )}{\" \"}\n                {moment(\n                  `${currentMonth.year}-${currentMonth.month + 1}-${\n                    currentMonth.dates\n                  }`,\n                  \"YYYY-MM-DD\"\n                ).format(\"MMMM\")}{\" \"}\n                {currentMonth.year}\n              </p>\n              <p className={Style.right_Text} onClick={monthChange}>\n                Next Month\n                <img src={Assets.nextArrow} alt=\"\" />\n              </p>\n            </div>\n\n            <Carousel\n              responsive={responsive}\n              showDots={false}\n              arrows={false}\n              customButtonGroup={<ButtonGroup />}\n              renderButtonGroupOutside={true}\n            >\n              {TimeSlot &&\n                TimeSlot.map((item, index) => {\n\n\n                  return (\n                    <div key={index}>\n                      <div className={Style.SliderItem}>\n\n                        <div className={moment(new Date()).date()==item.dates?Style.Day_head_active:Style.Day_head}>{item.dates}</div>\n                        <p className={Style.Day_text}>\n                          {moment(\n                            `${item.year}-${item.month + 1}-${item.dates}`,\n                            \"YYYY-MM-DD\"\n                          ).format(\"dddd\")}\n                        </p>\n                      </div>\n                      <div className={Style.SliderItemInner}>\n                        {item.requestSlot ? (\n                          <div className={Style.TimeSlot_main_wrapper}>\n                            <div className={Style.timeSolt_wrapper}>\n                              <p className={Style.noSoltsAvailable}>\n                                No slots available\n                              </p>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className={Style.TimeSlot_main_wrapper}>\n                            <div className={Style.timeSolt_wrapper}>\n                              {item.slots.length > 0 ? (\n                                !isCurrentDate(\n                                  item,\n                                  item.slots[item.slots.length - 1].time\n                                ) ? (\n                                  item.slots.map((data) => {\n                                    if (!isCurrentDate(item, data.time)) {\n                                      return (\n                                        <Button\n                                          variant=\"outline-primary\"\n                                          className={Style.timeSlot_btn}\n                                          key={data.time}\n                                          onClick={() =>\n                                            bookingApp(\n                                              data.time,\n                                              item,\n                                              \"Book\",\n                                              \"AppointmentBooking\"\n                                            )\n                                          }\n                                        >\n                                          {data.time}\n                                        </Button>\n                                      );\n                                    }\n                                  })\n                                ) : (\n                                  <p className={Style.noSoltsAvailable}>\n                                    No slots available\n                                  </p>\n                                )\n                              ) : (\n                                <p className={Style.noSoltsAvailable}>\n                                  No slots available\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n            </Carousel>\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default Schedule;\n"],"names":["countrycoderes","doctorscountrycode","browser","detect","require","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","slice","search","fetch_appointmentSlot","isStart","isNext","date","typeofconsultation","doctorId","dispatch","loginedApi","browserTimeZone","data","requestType","token","timeSlotCriteria","todayRate","actualRate","Ipaddress","useragent","Browser","name","version","appname","Os","accessCountry","Country","currency","response","status","type","APPOINTMENT_SLOT","payload","fetch_more_appointmentSlot","isClear","console","log","APPOINTMENT_MORE_SLOT_RESET","APPOINTMENT_MORE_SLOT","fetch_appointmentTypes","Details","IP","v4","fetch_appoinment_questions","axios","res","BOOK_APPOINMENT_QUESTIONARE","Store_formData","STORE_APPOINMENT_FORM_DATA","book_slot","userr","old_appointment","data1","nationalId","symptoms","medicalConditions","patientHeight","firstName","reasonForVisit","notesToDoctor","weightMeasurement","noOfBooking","bookingFrom","reminderNumber","appointmentFor","reports","blockId","basicFees","surgerydetails","surgeries","referenceId","allergies","gender","appointmentDate","emergencyname","relationship","patientWeight","dob","heightMeasurement","medications","emergencyrelation","dentalInfo","bookingType","fees","hospitalid","hospitalId","emergencyphone","modeOfConsultation","duration","appointmentTime","lastName","orderRes","info","IsfromMobile","attachedReportFiles","patientId","userId","appointmentDetails","BOOKING_UPDATE_CONFIRMATION","appointmentId","localStorage","setItem","appoinmentId","appoinmentFromTime","appoinmentToTime","appoinmentType","BOOKING_CONFIRMATION","displayRazorpay","orderdata","user","formData","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","alert","result","amount","receipt","payment_capture","notes","notes_key_1","notes_key_2","order_id","orderId","options","key","paymentgatewaykey","hospitalname","description","image","clinicLogo","handler","orderCreationId","razorpayPaymentId","razorpay_payment_id","razorpayOrderId","razorpay_order_id","razorpaySignature","razorpay_signature","signature_Verification","razorpayRes","orderData","prefill","email","userName","contact","mobileNumber","address","theme","color","paymentObject","Razorpay","on","open","BookingConfirmation","uploadData","transactionPG","appointmentBook","couponCode","bookingId","transactionId","razorpayId","timeData","getItem","appinmentTime","JSON","parse","appinmentData","removeItem","addMember","member","ADD_FAMILY","editMember","EDIT_FAMILY","GotoDashboard_action","GOTO_DASHBOARD","reset_booking","RESET_BOOKING","responsive","Typeofappointment","moment","DayCounter","useState","ApponmtType","SetAppmtType","ShowRequest","setRequest","ApponmtList","setApponmtList","useDispatch","history","useHistory","Login","useSelector","state","login","useLocation","SelectedType","setSelectedType","isCurrentDate","timeSlot","time","givenDate","year","month","dates","today","format","isBefore","appoinment_form","bookAppoinment","useEffect","dateFrom","subtract","then","Type","availableType","Onload","Amount","Duration","doctorfees","gstamount","Gst","c2mdfees","c2mdFees","TimeSlot","doctorDetail","currentMonth","length","addMoreSlot","day","onTypeChange","item","typeChange","className","Style","Assets","alt","Dropdown","variant","id","map","index","onClick","AppointmentOnRequest","bookingApp","routing","push","pathname","redirection","loadMore","hasMore","pageStart","requestSlot","Button","slots","disabled","CurrentDay","DateVariable","dt","toTime","add","dateTimeFormat","ToTimeFormat","format2","stringify","show","handleClose","width","useDimensions","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","next","back","Modal","onHide","closeButton","Schedule","Row","Col","sm","md","lg","DoctorFee","setDoctorFee","toastOpen","setToastOpen","ButtonGroup","previous","goToSlide","currentSlide","carouselState","style","display","flex","border","float","borderColor","check","isAfter","isSame","Currency","toast","position","hideProgressBar","onOpen","props","onClose","transform","endOf","showDots","arrows","customButtonGroup","renderButtonGroupOutside","userType"],"sourceRoot":""}