{"version":3,"file":"static/js/4898.84b26397.chunk.js","mappings":"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","sources":["actions/LoginAction.js","actions/SignupAction.js","webpack://connect2mydoctor/./src/components/Layout/SignupLayout/SignupLayout.module.scss?5ac7","components/Layout/SignupLayout/index.js","constants/const.js"],"sourcesContent":["import loginedApi from \"../apis\";\nimport { toast } from \"react-toastify\";\nimport CryptoJS from \"crypto-js\";\nimport axios from \"axios\";\nimport { LOGIN_SUCCESS_ACTION, LOG_OUT_ACTION, UPDATE_LOGIN } from \"./type\";\nimport { ADMIN_USER, BETHANY_CLINIC_ID } from \"../constants/const\";\nimport { CLINIC_ADMIN_USER } from \"../constants/const\";\nconst qs = require('qs')\nconst FormData = require('form-data');\n\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nconst { detect } = require(\"detect-browser\");\nconst browser = detect();\n\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nexport const loginAction =\n  ({\n    loginType,\n    userName,\n    accessCountry,\n    password,\n    history,\n    backupData,\n    setDrSign,\n  }) =>\n  async (dispatch) => {\n    let resp = await loginedApi.post(\"getcountrycode\", {\n      token: \"token\",\n      version: \"2.0\",\n      data: { browserTimeZone: `GMT${formatTime}` },\n      requestType: 1058,\n    });\n    const doctorscountrycode = resp.data.data;\n\n    console.log(backupData);\n    var hash = CryptoJS.SHA512(\"C2MD|\" + password);\n    // var hash = CryptoJS.SHA512(password);\n    const res = await loginedApi.post(\"login\", {\n      token: \"token\",\n      data: {\n        isFromMobile: true,\n        clinicId: \"20\",\n        deviceId: \"\",\n        appname: \"C2MD Patient\",\n        hashPassword: hash.toString(CryptoJS.enc.Base64),\n        password: hash.toString(),\n        loginType: loginType,\n        userName: userName,\n        browserTimeZone: `GMT${formatTime}`,\n        Ipaddress: doctorscountrycode.Ipaddress,\n        useragent: userAgent,\n        Browser: browser.name + \" \" + browser.version,\n        Os: platform,\n        currency: doctorscountrycode.currency,\n        accessCountry: doctorscountrycode.Country,\n      },\n      requestType: 3,\n    });\n\n    if (res?.data?.data?.info) {\n      return res.data.data;\n    } else {\n      dispatch({ type: LOGIN_SUCCESS_ACTION, payload: res.data.data });\n\n      await localStorage.setItem(\"userData\", JSON.stringify(res.data.data));\n     \n      if (res.data?.data?.userType == \"Patient\") {\n        console.log(backupData);\n        if (backupData && backupData?.redirection) {\n          history.push(backupData?.redirection);\n        } else if (history?.location?.state?.redirection) {\n          history.push(history?.location?.state?.redirection);\n        } else {\n          history.push(\"/dashboard\");\n        }\n      }\n      else if ( res.data?.data?.userType == ADMIN_USER ) {\n        history.push(\"/dashboard\");\n      }\n      else if ( res.data?.data?.userType == CLINIC_ADMIN_USER ) {\n\n        if(res.data?.data?.clinicId==BETHANY_CLINIC_ID)\n        {\n          history.push(\"/admindashboard\");\n        }\n        else{\n          history.push(\"/dashboard\");\n\n        }\n        \n      }\n      // else if ( res.data?.data?.userType == CLINIC_ADMIN_USER) {\n      //   history.push(\"/admindashboard\");\n      // }\n      \n      else {\n       // history.push(\"/dashboard\");\n        // setDrSign(true)\n\n       \n      let login = {\n        isFromMobile: true,\n              Ipaddress: IP,\n              clinicId: \"20\",\n              deviceId: \"\",\n              browserTimeZone: `GMT${formatTime}`,\n              appname: \"C2MD Patient\",\n              Os: platform,\n              hashPassword: \"\",\n              useragent: userAgent,\n              password: \"\",\n              accessCountry: accessCountry,\n              loginType: loginType,\n              userName: userName,\n              isotpverified: true,\n              Browser: browser.name + \" \" + browser.version,\n      };\n\n        axios({\n          method: 'post',\n          url: 'https://uat.c2mdr.com/demo/Connect2MyDoctorRequest',\n          data: {\n            requestType: 3,\n            loginDetails: JSON.stringify(login)\n        },\n          \n          headers: {\n            'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n          }\n        }).then(response => {\n          console.log(response)\n      })\n      .catch(err => {\n          throw err;\n      });\n\n      \n    \n      \n  \n      \n      }\n    }\n    return res.data.data;\n  };\n\nexport const checkUser =\n  ({ type, searchkey }) =>\n  async (dispatch) => {\n    const response = await loginedApi.post(\"loginwithotp\", {\n      requestType: 15,\n      token: \"C2MDVerificationToken\",\n      data: { type: type, searchKey: searchkey },\n    });\n\n    if (response.status === 200) {\n      return response.data && response.data;\n    }\n  };\n\nexport const logoutAction = () => async (dispatch) => {\n  dispatch({ type: LOG_OUT_ACTION });\n  localStorage.removeItem(\"userData\");\n};\n\nexport const loginwithotp =\n  ({ loginType, userName, accessCountry, history, appoinment_form }) =>\n  async (dispatch) => {\n    const res = await loginedApi.post(\"login\", {\n      token: \"token\",\n      data: {\n        isFromMobile: true,\n        Ipaddress: IP,\n        clinicId: \"20\",\n        deviceId: \"\",\n        browserTimeZone: `GMT${formatTime}`,\n        appname: \"C2MD Patient\",\n        Os: platform,\n        hashPassword: \"\",\n        useragent: userAgent,\n        password: \"\",\n        accessCountry: accessCountry,\n        loginType: loginType,\n        userName: userName,\n        isotpverified: true,\n        Browser: browser.name + \" \" + browser.version,\n      },\n      requestType: 3,\n    });\n\n    console.log(res);\n\n    if (res.data.data.info) {\n      toast.error(\"Invalid username or password !\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      dispatch({\n        type: LOGIN_SUCCESS_ACTION,\n        payload: res.data.data,\n      });\n\n      //await localStorage.setItem(\"userData\", JSON.stringify(res.data.data));\n      console.log(res.data?.data?.userType);\n      if (res.data?.data?.userType == \"Patient\") {\n        if (appoinment_form?.routing) {\n          let doctrId = localStorage.getItem(\"doctrID\");\n\n          history.push(`/BookAppointment/${doctrId}`);\n        } else {\n          history.push(\"/dashboard\");\n        }\n      } else {\n        let requestOptions = {\n          headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n          }\n      };\n  \n      let body = {\n        token: \"token\",\n        data: {\n          isFromMobile: true,\n          Ipaddress: IP,\n          clinicId: \"20\",\n          deviceId: \"\",\n          browserTimeZone: `GMT${formatTime}`,\n          appname: \"C2MD Patient\",\n          Os: platform,\n          hashPassword: \"\",\n          useragent: userAgent,\n          password: \"\",\n          accessCountry: accessCountry,\n          loginType: loginType,\n          userName: userName,\n          isotpverified: true,\n          Browser: browser.name + \" \" + browser.version,\n        },\n        requestType: 3,\n      };\n  \n      return axios.post('https://uat.c2mdr.com/demo/Connect2MyDoctorRequest', JSON.stringify(body), requestOptions)\n          .then(response => {\n              return response;\n          })\n          .catch(err => {\n              throw err;\n          });\n        //history.push(\"/dashboard\");\n      }\n    }\n  };\n\nexport const loginWithGoogle =\n  ({ Data, history }) =>\n  async (dispatch) => {\n    \n    const res = await loginedApi.post(\"login\", {\n      token: \"token\",\n      data: {\n        isFromMobile: true,\n        Ipaddress: IP,\n        clinicId: \"20\",\n        deviceId: \"\",\n        browserTimeZone: `GMT${formatTime}`,\n        appname: \"C2MD Patient\",\n        Os: platform,\n        hashPassword: \"\",\n        useragent: userAgent,\n        password: \"\",\n        accessCountry: \"IN\",\n        loginType: \"email\",\n        userName: Data?.email,\n        isotpverified: true,\n        Browser: browser.name + \" \" + browser.version,\n      },\n      requestType: 3,\n    });\n\n    if (res.data.data.info) {\n      return res.data.data;\n    } else {\n      dispatch({ type: LOGIN_SUCCESS_ACTION, payload: res.data.data });\n\n      await localStorage.setItem(\"userData\", JSON.stringify(res.data.data));\n      history.push(\"/DoctorListing\");\n    }\n    return res.data.data;\n  };\n\nexport const updateLoginDetails = (data) => async (dispatch) => {\n  dispatch({ type: UPDATE_LOGIN, payload: data });\n};\n","import loginedApi from \"../apis\";\nimport { toast } from \"react-toastify\";\nimport CryptoJS from \"crypto-js\";\nimport { SIGNUP_SUCCESS_ACTION } from \"./type\";\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\")\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\")\n}//replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nlet countrycoderes;\nlet doctorscountrycode;\n\n\n\nexport const signup_action =\n  ({ values, userType, OTP, history }) =>\n    async (dispatch) => {\n      // var hash = CryptoJS.SHA512(values.password);\n\n      console.log(\"Signup Params......\", {values, userType, OTP});\n\n      countrycoderes = await loginedApi.post(\"getcountrycode\",\n        {\n          \"token\": \"token\",\n          \"version\": \"2.0\",\n          \"data\": { browserTimeZone: `GMT${formatTime}`, },\n          \"requestType\": 1058\n        });\n\n      doctorscountrycode = countrycoderes.data.data;\n      var hash = CryptoJS.SHA512(\"C2MD|\" + values.password);\n\n      let password = hash.toString();\n\n      let hashPassword = hash.toString(CryptoJS.enc.Base64);\n      // let hashPassword = CryptoJS.SHA512(\"C2MD|\"+password);\n      let limit = values.dial_code?.length;\n      let mobNo = values.mobileNumber?.slice(limit);\n      let mobileNo = `%2B${values.dial_code}${\" \"}${mobNo}`;\n\n      console.log(values);\n\n      const res = await loginedApi.post(\"signup\", {\n        requestType: 2,\n        data: {\n\n          lastName: \"\",\n          accessCountry: doctorscountrycode.Country,\n          source: \"Web APP\",\n          useragent: userAgent,\n          department: \"\",\n          password: password,\n          hashPassword: hashPassword,\n          userType: userType,\n          mobileNumber: mobileNo,\n          emailId: values.email,\n          referenceOTP: OTP,\n          deviceId: \"\",\n          signupFrom: \"c2md\",\n          Os: platform,\n          firstName: values.fullName,\n          clinicId: \"20\",\n          Ipaddress: IP,\n          type: \"\",\n          browserTimeZone: `GMT${formatTime}`,\n          speciality: \"\",\n          appname: \"C2MD Patient\",\n        },\n        token: \"token\",\n      });\n\n      if (res.data.data) {\n        let response = res.data.data;\n\n        if (response.hasOwnProperty(\"info\")) {\n          return response;\n        } else {\n          dispatch({\n            type: SIGNUP_SUCCESS_ACTION,\n            payload: res.data.data,\n          });\n          localStorage.setItem(\"userData\", response);\n          if (res.data?.data?.userType == \"Patient\") {\n            \n             if (history?.location?.state?.redirection) {\n              history.push(history?.location?.state?.redirection);\n            } else {\n              history.push(\"/dashboard\");\n            }\n          }\n        }\n        return response;\n      }\n    };\nexport const generate_OTP = (formData) => async (dispatch) => {\n  \n  let limit = formData.dial_code?.length;\n  let mobNo = formData.mobileNumber?.slice(limit);\n  let mobileNo = `%2B${formData.dial_code}${\" \"}${mobNo}`;\n\n  const res = await loginedApi.post(\"getmobileotp\", {\n    token: \"C2MDVerificationToken\",\n    requestType: \"25\",\n    data: {\n      mobileNumber: mobileNo,\n      Os: platform,\n      Ipaddress: IP,\n      useragent: userAgent,\n    },\n  });\n\n  return res.data && res.data.data.info;\n};\n\nexport const signup_with_Google =\n  ({ userType, Data, history }) =>\n    async (dispatch) => {\n      console.log(\"Data\",Data);\n      const res = await loginedApi.post(\"signup\", {\n        requestType: 2,\n        data: {\n          lastName: \"\",\n          accessCountry: \"\",\n          source: \"iOSApp\",\n          useragent: userAgent,\n          department: \"\",\n          password: \"\",\n          hashPassword: \"\",\n          userType: userType,\n          mobileNumber: \"\",\n          emailId: Data.email,\n          referenceOTP: \"\",\n          deviceId: \"\",\n          signupFrom: \"c2md\",\n          Os: platform,\n          firstName: Data.name,\n          socialProfileId:Data.googleId,\n          clinicId: \"20\",\n          Ipaddress: IP,\n          type: \"signUpGoogle\",\n          browserTimeZone: `GMT${formatTime}`,\n          speciality: \"\",\n          appname: \"C2MD Patient\",\n        },\n        token: \"token\",\n      });\n\n      if (res.data.data) {\n        let response = res.data.data;\n       \n\n        if (response.hasOwnProperty(\"info\")) {\n          // toast.error(response.info, {\n          //   position: toast.POSITION.TOP_CENTER,\n          // });\n\n          return response;\n        } else {\n          dispatch({\n            type: SIGNUP_SUCCESS_ACTION,\n            payload: JSON.stringify(res.data.data),\n          });\n          localStorage.setItem(\"userData\", response);\n          if (res.data?.data?.userType == \"Patient\") {\n            \n            if (history?.location?.state?.redirection) {\n             history.push(history?.location?.state?.redirection);\n           } else {\n             history.push(\"/dashboard\");\n           }\n         }\n          //history.push(\"/DoctorListing\");\n        }\n        return response;\n      }\n    };\n\nexport const checkUser =\n  ({ searchtype, searchKey }) =>\n    async (dispatch) => {\n      const res = await loginedApi.post(\"useravailability\", {\n        requestType: 22,\n        token: \"C2MDVerificationToken\",\n        data: { searchtype: searchtype, searchKey: searchKey },\n      });\n\n      return res.data?.data;\n    };\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"signup_topSection\":\"SignupLayout_signup_topSection__qPX88\",\"signup_div\":\"SignupLayout_signup_div__Kx25z\"};","import React from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Style from \"./SignupLayout.module.scss\";\nimport Assets from \"../Assets\";\nimport classNames from 'classnames'\n\nfunction SignupLayout({ children }) {\n  const formLayout = classNames(Style.signup_form_login, 'col-md-9')\n\n  return (\n      <div className={Style.signup_topSection}>\n          <div className={Style.signup_div}>\n              <div>{children}</div>\n          </div>\n      </div>\n  );\n}\n\nexport default SignupLayout;\n","\nexport const USER_TYPE=\"c2mdUserUserType\"\nexport const USER_DATA=\"userData\"\nexport const ADMIN_USER=\"C2MDAdmin\"\nexport const CLINIC_ADMIN_USER=\"ClinicAdmin\"\nexport const USER_TOKEN=\"c2mdUserToken\"\nexport const BETHANY_CLINIC_ID=\"14\"\n"],"names":["IP","require","v4","browser","detect","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","slice","search","loginAction","loginType","userName","accessCountry","password","history","backupData","setDrSign","dispatch","loginedApi","token","version","data","browserTimeZone","requestType","resp","doctorscountrycode","console","log","hash","CryptoJS","isFromMobile","clinicId","deviceId","appname","hashPassword","Ipaddress","useragent","Browser","name","Os","currency","Country","res","info","type","LOGIN_SUCCESS_ACTION","payload","localStorage","setItem","JSON","stringify","userType","redirection","push","location","state","ADMIN_USER","CLINIC_ADMIN_USER","BETHANY_CLINIC_ID","login","isotpverified","axios","method","url","loginDetails","headers","then","response","catch","err","checkUser","searchkey","searchKey","status","logoutAction","LOG_OUT_ACTION","removeItem","loginwithotp","appoinment_form","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","routing","doctrId","getItem","requestOptions","body","loginWithGoogle","Data","email","updateLoginDetails","UPDATE_LOGIN","countrycoderes","signup_action","values","OTP","limit","dial_code","length","mobNo","mobileNumber","mobileNo","lastName","source","department","emailId","referenceOTP","signupFrom","firstName","fullName","speciality","hasOwnProperty","SIGNUP_SUCCESS_ACTION","generate_OTP","formData","signup_with_Google","socialProfileId","googleId","searchtype","children","classNames","Style","className","USER_DATA"],"sourceRoot":""}