{"version":3,"file":"static/js/8130.a1acf513.chunk.js","mappings":"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","sources":["Helpers/dateFunctions.js","actions/AuthHeader.js","actions/InterbranchAdminActions.js","actions/LoginAction.js","actions/PrescriptionFormActions.js","components/Badges/StatusBadge/StatusBadge.jsx","components/Common/EmptyTableData/EmptyTableData.jsx","components/ConsolidatedReport/ConsolidatedReport.jsx","components/CustomeModal/CustomeModal.jsx","components/MisReportModal/MisReportModalContent.jsx","components/TodaysReport/TodaysReport.jsx","components/TodaysReportModalContent/TodaysReportModalContent.jsx"],"sourcesContent":["import moment from \"moment\";\n\nexport const isWithinMinutes = (date, time) => {\n\n  var date = new Date()\n\n\n\n  var appointmentDate = moment(time, 'hh:mm A')._d\n  var FIVE_MIN = 5 * 60 * 1000;\n\n   console.log(appointmentDate-date,date,FIVE_MIN);\n\n\n  if ((appointmentDate-date) > FIVE_MIN) {\n    return true\n  }\n\n\n}\n\nfunction setDateTime(date, time) {\n\n\n  var index = time.indexOf(\":\"); // replace with \":\" for differently displayed time.\n  var index2 = time.indexOf(\" \");\n\n  var hours = time.substring(0, index).toString();\n  var minutes = time.substring(index + 1, index2);\n\n  var mer = time.substring(index2 + 1, time.length);\n\n  if (mer == \"PM\") {\n    hours = hours + 12;\n  }\n\n\n  date.setHours(hours);\n  date.setMinutes(minutes);\n  date.setSeconds(\"00\");\n\n  console.log(hours);\n\n  return date;\n}\n\nexport const separaetdateAndTime = (date_string) => {\n\n\n  if (date_string) {\n    let arr = date_string.split(\" \");\n    return {\n      date: arr[0],\n      time: arr[1]\n    }\n\n\n\n  }\n\n}\n\n\nexport const convertDateToString = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).format(\"DD-MMM-YYYY\"); \n\n  }\n\n}\n\nexport const convertDateToStringThreeMonthBack = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).subtract(3, 'months').format(\"DD-MMM-YYYY\"); \n\n  }\n\n}\n\nexport const convertDateToStringOneYear = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).subtract(1, 'year').format(\"DD-MMM-YYYY\"); \n\n  }\n\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('userData'));\r\n    if (user && user.token) {\r\n      return { Authorization: 'Bearer ' + user.token };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import loginedApi, { c2mdApi } from \"../apis\"\n// import { USER_TOKEN } from \"../constants/const\";\nimport { convertDateToString, convertDateToStringOneYear, convertDateToStringThreeMonthBack } from \"../Helpers/dateFunctions\";\nimport { getFromLocalStorage } from \"../Helpers/localStorageHelper\";\nimport authHeader from \"./AuthHeader\";\nimport { INTERBRANCH_ADMIN_CONSOLIDATED, INTERBRANCH_ADMIN_DASHBOARD, INTERBRANCH_ADMIN_DASHBOARD_SELECTED, INTERBRANCH_ADMIN_DASHBOARD_SELECTED_v2, INTERBRANCH_ADMIN_DETAILED, INTERBRANCH_ADMIN_DETAILED_SELECTED, MANAGE_HOSPITALS_LIST, MANAGE_SESSION } from \"./type\";\n\nimport { ADMIN_USER, CLINIC_ADMIN_USER, USER_DATA } from '../constants/const'\n\n\n\nexport const FETCH_ADMIN_DASHBOARD_REPORT = (_para) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n    let todayDate = convertDateToString(new Date())\n\n\n    if (userType == ADMIN_USER) {\n\n        let params =\n        {\n\n            \"requestType\": 509,\n            \"version\": \"2.0\",\n            \"data\": {\n                \"operation\": \"find\",\n                \"browserTimeZone\": \"GMT+05:30\",\n                \"startDate\": todayDate,\n                \"endDate\": todayDate,\n                // \"startDate\": \"20-May-2022\",\n                // \"endDate\": \"21-May-2022\",\n                \"Type\": \"excel\",\n            }\n        }\n\n        \n\n        let response = await loginedApi.post(\"getappointments\", params, { headers: authHeader() })\n\n        console.log(\"getappointments..........\",response);\n\n\n        if (response.status == \"200\") {\n\n            if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n                dispatch({\n                    type: INTERBRANCH_ADMIN_DASHBOARD,\n                    payload: {\n                        data: response.data.data,\n                        totalPages: response.data.totalNumberOfPages\n                    }\n                });\n                return true\n            }\n            else {\n                dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n               \n              \n            }\n        }\n\n\n\n\n    }\n    else if (userType == CLINIC_ADMIN_USER) {\n\n        let params =\n        {\n            \"data\": {\n                \"Type\": null,\n                \"operation\": \"find\",\n                \"startDate\": todayDate,\n                \"endDate\": todayDate,\n                // \"startDate\": \"20-May-2022\",\n                // \"endDate\": \"21-May-2022\",\n                \"browserTimeZone\": \"GMT+05:30\",\n                \"clinicId\": clinicId\n            },\n            \"browserTimeZone\": \"\",\n            \"requestType\": 518,\n            \"version\": \"2.0\"\n        }\n\n        let response = await loginedApi.post(\"getclinicappointments\", params, { headers: authHeader() })\n\n        console.log(\"getclinicappointments responce ->\", response.data.data);\n\n        if (response.status == \"200\") {\n\n            if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n                dispatch({\n                    type: INTERBRANCH_ADMIN_DASHBOARD,\n                    payload: {\n                        data: response.data.data,\n                        totalPages: response.data.totalNumberOfPages\n                    }\n                });\n                return true\n\n            }\n            else {\n\n                dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n            }\n        }\n\n\n\n    }\n\n\n}\n\n\nexport const FETCH_ADMIN_DETAILED_REPORT = (_para) => async (dispatch) => {\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n\n    let todayDate = convertDateToString(new Date())\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : null\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : null\n\n    //console.log(\"Calling getsummaryreport................................................................... ->\");\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            // \"Type\": \"excel\",\n            \"startDate\": fromDate ? fromDate : convertDateToStringThreeMonthBack(todayDate),\n            \"endDate\": toDate ? toDate : todayDate,\n            \"offset\": _para?.offset ? _para.offset.toString() : \"0\"\n        }\n\n    }\n\n\n    if (userType == ADMIN_USER) {\n    }\n    else if (userType == CLINIC_ADMIN_USER) {\n\n        params.data.clinic = clinicId\n\n    }\n\n\n\n\n\n\n\n    let response = await loginedApi.post(\"getsummaryreport\", params, { headers: authHeader() })\n\n    //console.log(\"getsummaryreport responce ->\", responce.data.data);\n\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            dispatch({\n                type: INTERBRANCH_ADMIN_DETAILED,\n                payload: {\n                    data: response.data.data.data,\n                    totalPages: response.data.data.totalNumberOfPages\n                }\n            });\n\n            return true\n\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n\n}\n\n\nexport const FETCH_DASHBOARD_MORE = (_id) => async dispatch => {\n\n\n\n\n    let params = { \"token\": \"token\", \"version\": \"2.0\", \"requestType\": \"1101\", \"data\": { \"appointmentId\": _id, \"browserTimeZone\": \"GMT+05:30\" } }\n\n    // console.log(\"Calling getappointments................................................................... ->\");\n\n    let response = await loginedApi.post(\"getappointmentsdetails\", params, { headers: authHeader() })\n\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            dispatch({\n                type: INTERBRANCH_ADMIN_DASHBOARD_SELECTED_v2,\n                payload: response.data.data[0]\n            });\n\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n\n\n\n\n}\n\nexport const FETCH_DETAILED_MORE = (_id) => async dispatch => {\n\n\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1041\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"browserTimeZone\": \"GMT+05:30\"\n        }\n    }\n\n    let response = await c2mdApi.post(\"getdetailreport\", params, { headers: authHeader() })\n\n\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            dispatch({\n                type: INTERBRANCH_ADMIN_DETAILED_SELECTED,\n                payload: response.data.data\n            });\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n}\n\n\n\nexport const FETCH_CONSOLIDATED_REPORTS = (_para) => async dispatch => {\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n\n    //console.log(_para);\n\n\n    let todayDate = convertDateToString(new Date())\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : convertDateToStringOneYear(todayDate)\n    let toDate = _para?.endDate ? convertDateToString(_para.endDate) : todayDate\n\n    console.log(_para?.filterData);\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            // \"operation\": _para.filterData.date || _para.filterData.hospital? \"filter\" : \"search\",\n            \"operation\":\"filter\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"offset\": _para?.offset ? _para.offset.toString() : \"0\"\n        }\n    }\n\n    if (userType == CLINIC_ADMIN_USER) {\n        params.data.clinic = clinicId\n    }\n\n    if (_para?.filterData) {\n\n        if (_para.filterData.date && _para.filterData.hospital) {\n\n            params.data[\"filterType\"] = \"all\"\n            params.data[\"filterMonthYear\"] = _para.filterData.date\n            params.data[\"filterHospital\"] = _para.filterData.hospital\n        }\n        else if (_para.filterData.date) {\n            params.data[\"filterType\"] = \"monthYear\"\n            params.data[\"filterMonthYear\"] = _para.filterData.date\n        }\n\n        else if (_para.filterData.hospital) {\n            params.data[\"filterType\"] = \"hospital\"\n            params.data[\"filterHospital\"] = _para.filterData.hospital\n        }\n    }\n\n    let response = await c2mdApi.post(\"getconsolidatedreport\", params, { headers: authHeader() })\n\n    console.log(\"getconsolidatedreport responce ->\", response.data.data);\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            dispatch({\n                type: INTERBRANCH_ADMIN_CONSOLIDATED,\n                payload: {\n                    data: response.data.data.data,\n                    totalPages: response.data.data.totalNumberOfPages\n                }\n            });\n\n            return true\n\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n\n}\n\n\nexport const updateMisReportComment = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"notes\": value\n        }\n    }\n\n    let response = await c2mdApi.post(\"updatereportdata\", params, { headers: authHeader() })\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            if (response.status == 200 && response.data.data.info === \"Successfully Updated\") {\n\n                return true\n\n            }\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n\n\n}\n\n\n\nexport const updateMisReportAttachments = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"consolReportId\": _id,\n            \"uploadedFile\": value\n        }\n    }\n\n    let response = await c2mdApi.post(\"updateconsolreport\", params, { headers: authHeader() })\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            if (response.status == 200 && response.data.data.info === \"Successfully Updated\") {\n\n                return true\n\n            }\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n\n}\n\nexport const updateConsolodatedReportComment = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"consolReportId\": _id,\n            \"adjustments\": value\n        }\n    }\n\n    let response = await c2mdApi.post(\"updateconsolreport\", params, { headers: authHeader() })\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            if (response.status == 200 && response.data.data.info === \"Successfully Updated\") {\n\n                return true\n\n            }\n\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n}\n\nexport const downloadSummaryReport = (_para) => async (dispatch) => {\n\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : convertDateToStringThreeMonthBack(convertDateToString(new Date()))\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : convertDateToString(new Date())\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n\n\n    //console.log(fromDate, toDate);\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"startDate\": fromDate,\n            \"endDate\": toDate\n\n        }\n    }\n\n    if (userType == ADMIN_USER) {\n    }\n    else if (userType == CLINIC_ADMIN_USER) {\n\n        params.data.clinic = clinicId\n\n    }\n\n    let response = await loginedApi.post(\"getsummaryreport\", params, { headers: authHeader() })\n\n    //console.log(\"getsummaryreport responce ->\", responce.data.data);\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n\n            if (response.data?.data?.filename) {\n                return `https://uat.c2mdr.com/c2mydruat/Connect2MyDoctorRequest?requestType=256&uploadBy=ConsultationProcess&name=${response.data?.data?.filename}&type=Attachement&uploadRefId=123&from=web`\n            }\n\n\n        }\n        else {\n\n            dispatch({ type: MANAGE_SESSION, payload: { isSessionActive: false } });\n        }\n    }\n\n\n\n\n}\n\n\nexport const getHospitalsList = () => async (dispatch) => {\n\n\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1111\",\n        \"data\": { \"browserTimeZone\": \"GMT+05:30\" }\n    }\n\n\n    let response = await loginedApi.post(\"gethospitals\", params, { headers: authHeader() })\n\n    // console.log(\"gethospitals response===>\", response);\n\n    dispatch({\n        type: MANAGE_HOSPITALS_LIST,\n        payload: response.data.data\n    });\n\n\n\n}\n\n\n\n\n\n","import loginedApi from \"../apis\";\nimport { toast } from \"react-toastify\";\nimport CryptoJS from \"crypto-js\";\nimport axios from \"axios\";\nimport { LOGIN_SUCCESS_ACTION, LOG_OUT_ACTION, UPDATE_LOGIN } from \"./type\";\nimport { ADMIN_USER, BETHANY_CLINIC_ID, USER_DATA } from \"../constants/const\";\nimport { CLINIC_ADMIN_USER } from \"../constants/const\";\nimport { getFromLocalStorage } from \"../Helpers/localStorageHelper\";\nconst qs = require('qs')\nconst FormData = require('form-data');\n\nconst publicIp = require(\"public-ip\");\nlet IP = publicIp.v4();\nconst { detect } = require(\"detect-browser\");\nconst browser = detect();\n\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nexport const loginAction =\n  ({\n    loginType,\n    userName,\n    accessCountry,\n    password,\n    history,\n    backupData,\n    setDrSign,\n  }) =>\n    async (dispatch) => {\n      let resp = await loginedApi.post(\"getcountrycode\", {\n        token: \"token\",\n        version: \"2.0\",\n        data: { browserTimeZone: `GMT${formatTime}` },\n        requestType: 1058,\n      });\n      const doctorscountrycode = resp.data.data;\n\n      console.log(backupData);\n      var hash = CryptoJS.SHA512(\"C2MD|\" + password);\n      // var hash = CryptoJS.SHA512(password);\n      const res = await loginedApi.post(\"login\", {\n        token: \"token\",\n        data: {\n          isFromMobile: true,\n          clinicId: \"20\",\n          deviceId: \"\",\n          appname: \"C2MD Patient\",\n          hashPassword: hash.toString(CryptoJS.enc.Base64),\n          password: hash.toString(),\n          loginType: loginType,\n          userName: userName,\n          browserTimeZone: `GMT${formatTime}`,\n          Ipaddress: doctorscountrycode.Ipaddress,\n          useragent: userAgent,\n          Browser: browser.name + \" \" + browser.version,\n          Os: platform,\n          currency: doctorscountrycode.currency,\n          accessCountry: doctorscountrycode.Country,\n        },\n        requestType: 3,\n      });\n\n      if (res?.data?.data?.info) {\n        return res.data.data;\n      } else {\n        dispatch({ type: LOGIN_SUCCESS_ACTION, payload: res.data.data });\n\n        await localStorage.setItem(\"userData\", JSON.stringify(res.data.data));\n\n        if (res.data?.data?.userType == \"Patient\") {\n\n          if (backupData && backupData?.redirection) {\n            history.push(backupData?.redirection);\n          } else if (history?.location?.state?.redirection) {\n            history.push(history?.location?.state?.redirection);\n          } else {\n            history.push(\"/dashboard\");\n          }\n        }\n        else if (res.data?.data?.userType == ADMIN_USER || res.data?.data?.userType == CLINIC_ADMIN_USER) {\n          history.push(\"/dashboard\");\n        }\n\n        // else if ( res.data?.data?.userType == CLINIC_ADMIN_USER) {\n        //   history.push(\"/admindashboard\");\n        // }\n\n        else {\n          // history.push(\"/dashboard\");\n          // setDrSign(true)\n\n\n          let login = {\n            isFromMobile: true,\n            Ipaddress: IP,\n            clinicId: \"20\",\n            deviceId: \"\",\n            browserTimeZone: `GMT${formatTime}`,\n            appname: \"C2MD Patient\",\n            Os: platform,\n            hashPassword: \"\",\n            useragent: userAgent,\n            password: \"\",\n            accessCountry: accessCountry,\n            loginType: loginType,\n            userName: userName,\n            isotpverified: true,\n            Browser: browser.name + \" \" + browser.version,\n          };\n\n          axios({\n            method: 'post',\n            url: 'https://uat.c2mdr.com/demo/Connect2MyDoctorRequest',\n            data: {\n              requestType: 3,\n              loginDetails: JSON.stringify(login)\n            },\n\n            headers: {\n              'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n            }\n          }).then(response => {\n            console.log(response)\n          })\n            .catch(err => {\n              throw err;\n            });\n\n\n\n\n\n\n        }\n      }\n      return res.data.data;\n    };\n\nexport const checkUser =\n  ({ type, searchkey }) =>\n    async (dispatch) => {\n      const response = await loginedApi.post(\"loginwithotp\", {\n        requestType: 15,\n        token: \"C2MDVerificationToken\",\n        data: { type: type, searchKey: searchkey },\n      });\n\n      if (response.status === 200) {\n        return response.data && response.data;\n      }\n    };\n\nexport const logoutAction = (user,history) => async (dispatch) => {\n\n  // dispatch({ type: LOG_OUT_ACTION });\n  // localStorage.removeItem(\"userData\");\n\n  let userData = await getFromLocalStorage(USER_DATA)\n  userData = JSON.parse(userData)\n  let { userType, clinicId, userId } = userData\n\n  const response = await loginedApi.post(\"logout\", {\n    requestType: 4,\n    token: \"C2MDVerificationToken\",\n    data: { userId },\n  });\n\n  console.log(response);\n\n  if (response.data.data.info === \"home.html\") {\n   \n    history.push(\"/signin\")\n    dispatch({ type: LOG_OUT_ACTION });\n    localStorage.removeItem(\"userData\");\n    return true\n  }\n\n};\n\nexport const loginwithotp =\n  ({ loginType, userName, accessCountry, history, appoinment_form }) =>\n    async (dispatch) => {\n      const res = await loginedApi.post(\"login\", {\n        token: \"token\",\n        data: {\n          isFromMobile: true,\n          Ipaddress: IP,\n          clinicId: \"20\",\n          deviceId: \"\",\n          browserTimeZone: `GMT${formatTime}`,\n          appname: \"C2MD Patient\",\n          Os: platform,\n          hashPassword: \"\",\n          useragent: userAgent,\n          password: \"\",\n          accessCountry: accessCountry,\n          loginType: loginType,\n          userName: userName,\n          isotpverified: true,\n          Browser: browser.name + \" \" + browser.version,\n        },\n        requestType: 3,\n      });\n\n      console.log(res);\n\n      if (res.data.data.info) {\n        toast.error(\"Invalid username or password !\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        dispatch({\n          type: LOGIN_SUCCESS_ACTION,\n          payload: res.data.data,\n        });\n\n        //await localStorage.setItem(\"userData\", JSON.stringify(res.data.data));\n        console.log(res.data?.data?.userType);\n        if (res.data?.data?.userType == \"Patient\") {\n          if (appoinment_form?.routing) {\n            let doctrId = localStorage.getItem(\"doctrID\");\n\n            history.push(`/BookAppointment/${doctrId}`);\n          } else {\n            history.push(\"/dashboard\");\n          }\n        } else {\n          let requestOptions = {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          };\n\n          let body = {\n            token: \"token\",\n            data: {\n              isFromMobile: true,\n              Ipaddress: IP,\n              clinicId: \"20\",\n              deviceId: \"\",\n              browserTimeZone: `GMT${formatTime}`,\n              appname: \"C2MD Patient\",\n              Os: platform,\n              hashPassword: \"\",\n              useragent: userAgent,\n              password: \"\",\n              accessCountry: accessCountry,\n              loginType: loginType,\n              userName: userName,\n              isotpverified: true,\n              Browser: browser.name + \" \" + browser.version,\n            },\n            requestType: 3,\n          };\n\n          return axios.post('https://uat.c2mdr.com/demo/Connect2MyDoctorRequest', JSON.stringify(body), requestOptions)\n            .then(response => {\n              return response;\n            })\n            .catch(err => {\n              throw err;\n            });\n          //history.push(\"/dashboard\");\n        }\n      }\n    };\n\nexport const loginWithGoogle =\n  ({ Data, history }) =>\n    async (dispatch) => {\n\n      const res = await loginedApi.post(\"login\", {\n        token: \"token\",\n        data: {\n          isFromMobile: true,\n          Ipaddress: IP,\n          clinicId: \"20\",\n          deviceId: \"\",\n          browserTimeZone: `GMT${formatTime}`,\n          appname: \"C2MD Patient\",\n          Os: platform,\n          hashPassword: \"\",\n          useragent: userAgent,\n          password: \"\",\n          accessCountry: \"IN\",\n          loginType: \"email\",\n          userName: Data?.email,\n          isotpverified: true,\n          Browser: browser.name + \" \" + browser.version,\n        },\n        requestType: 3,\n      });\n\n      if (res.data.data.info) {\n        return res.data.data;\n      } else {\n        dispatch({ type: LOGIN_SUCCESS_ACTION, payload: res.data.data });\n\n        await localStorage.setItem(\"userData\", JSON.stringify(res.data.data));\n        history.push(\"/DoctorListing\");\n      }\n      return res.data.data;\n    };\n\nexport const updateLoginDetails = (data) => async (dispatch) => {\n  dispatch({ type: UPDATE_LOGIN, payload: data });\n};\n","import loginedApi from \"../apis\";\n//import authHeader from './auth-header';\nimport { convertDateToString } from \"../Helpers/dateFunctions\";\nimport { INTERBRANCH_ADMIN_DASHBOARD, REDUX_LOADING, SET_CR_DASHBOARD, UPDATE_REDUX_PRESCRIPTION } from \"./type\";\nimport { USER_DATA } from \"../constants/const\";\nimport { getFromLocalStorage } from \"../Helpers/localStorageHelper\";\n\n\n\n\nexport const getDepartments = () => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n//params\n    let params = {\n        requestType: \"1062\",\n        browserTimeZone: \"\",\n        //\"version\": \"2\",\n        data: {\n            type: \"department\"\n        },\n    };\n\n\n    const response = await loginedApi.post(\"getdepartments\", params);\n\n\n    if (response.status == \"200\") {\n\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n        }\n    }\n\n\n}\n\nexport const getDoctors = ({ department_id }) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\n        requestType: \"1063\",\n        browserTimeZone: \"\",\n       // \"version\": \"2\",\n        data: {\n            \"type\": \"doctor\",\n            \"departmentId\": department_id\n        },\n    };\n\n\n    const response = await loginedApi.post(\"getdoctors\", params);\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n        }\n    }\n\n\n}\n\nexport const getTemplateList = ({ offset }) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\n        requestType: \"1070\",\n        browserTimeZone: \"\",\n       //\"version\": \"2\",\n        data: {\n            type: \"templatelist\",\n            offset: offset ? offset : 0\n        },\n    };\n\n\n    const response = await loginedApi.post(\"gettemplates\", params);\n\n    if (response.status == \"200\") {\n\n        console.log(response);\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            return {\n                data: response.data.data.data,\n                total: response.data.data.totalNumberOfPages\n            }\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n\n        }\n        /*if (response.data?.data?.data) {\n            return {\n                data: response.data.data.data,\n                total: response.data.data.totalNumberOfPages\n            }\n        }*/\n    }\n\n\n}\n\nexport const viewTemplate = (par_tempId) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = { \"data\": { \"templateId\": par_tempId }, \"browserTimeZone\": \"\", \"requestType\": 1068, \n   // \"version\": \"2\" \n};\n\n\n    const response = await loginedApi.post(\"viewtemplate\", params);\n\n    if (response.status == \"200\") {\n\n        /*if (response.data?.data) {\n            return response.data.data\n        }*/\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n        }\n    }\n\n\n}\n\nexport const FETCH_PR_ADMIN_DASHBOARD_REPORT = (_para) => async dispatch => {\n\n    console.log(\"Calling\");\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId, userId } = userData\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    dispatch({\n        type: REDUX_LOADING,\n        payload: true\n    });\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : null\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : null\n\n    let todayDate = convertDateToString(new Date())\n\n    let params = {\n        \"data\": {\n            \"userID\": userId,\n            \"operation\": \"find\",\n            \"startDate\": fromDate ? fromDate : todayDate,\n            \"endDate\": toDate ? toDate : todayDate,\n            \"browserTimeZone\": \"GMT+05:30\",\n            offset: _para?.offset ? _para.offset : \"0\"\n        },\n        \"browserTimeZone\": \"\",\n       // \"version\": \"2\",\n        \"requestType\": 236\n    }\n\n\n    let responce = await loginedApi.post(\"getbethanyprescriptions\", params)\n\n    console.log(\"getbethanyprescriptionlist responce ->\", responce);\n\n    if (responce.status == 200) {\n\n        if (responce.data.errorType != \"FAILURE\" && responce.data?.data) {\n\n            dispatch({\n                type: SET_CR_DASHBOARD,\n                payload: {\n                    data: responce.data.data,\n                    total: responce.data.data.totalNumberOfPages,\n                    isFresh:_para?.offset ?false:true\n                }\n            });\n\n            dispatch({\n                type: REDUX_LOADING,\n                payload: false\n            });\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n        }\n\n\n\n    }\n}\n\nexport const syncLabAndMedicine = () => async dispatch => {\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId, userId } = userData\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = { \"data\": { \"userID\": userId, \"browserTimeZone\": \"GMT+05:30\" }, \"browserTimeZone\": \"\", \"requestType\": 238,\n    // \"version\": \"2\" \n}\n\n\n    const response = await loginedApi.post(\"bethanysynclabmedicine\", params);\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n        }\n        //  return response.data.data\n    }\n\n\n\n}\n\nexport const pushToHisCall = (_id) => async dispatch => {\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId, userId } = userData\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = { \"data\": { \"userID\": userId, \"listid\": _id }, \"browserTimeZone\": \"\", \"requestType\": 237,\n   // \"version\": \"2\" \n}\n\n    const response = await loginedApi.post(\"bethanysynclabmedicine\", params);\n\n    if (response.status == \"200\") {\n\n        console.log(response);\n        if (response.data.errorType != \"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n        }\n        else {\n            //dispatch({ type: LOG_OUT_ACTION });\n\n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home';\n        }\n        //   return response.data.data\n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport '../badges.css'\n\nfunction StatusBadge({ text, varient }) {\n\n  let [style, setStyle] = useState(null)\n\n\n\n  useEffect(() => {\n\n    if (varient == \"Completed\") {\n      setStyle('completed-badge')\n    }\n    else if (varient == \"Pending\") {\n      setStyle('pending-badge')\n    }\n    else if (varient == \"Upcoming\") {\n      setStyle('upcoming-badge')\n    }\n    else {\n      setStyle('error-badge')\n    }\n\n  }, [varient])\n\n\n\n  return (\n    <div className={`badge-container ${style}`}>\n      {text}\n    </div>\n  )\n}\n\nexport default StatusBadge","import React from 'react'\nimport { ClipLoader, PuffLoader } from 'react-spinners'\nimport { FolderEmpty } from '../../../assets/Logos/Icons'\n\nfunction EmptyTableData({ isLoading, marginTop, text, caption, haveButton, onButtonClick }) {\n    return (\n        <div className=\"empty-table-data top-margin-50\">\n            <div className=\"empty-table-body\" style={{\n                height: isLoading && 70,\n                width: isLoading && 70\n            }} >\n                {\n                    isLoading ?\n\n                        <PuffLoader color={\"#ffffff\"} loading={true} size={70} />\n                        :\n                        <FolderEmpty />\n                }\n\n            </div>\n\n            <div className=\"empty-table-footer\">\n                <span className=\"title\">\n                    {\n                        isLoading ? \"Loading data please wait...\" : text ? text : \"No Results Found.\"\n                    }\n                </span>\n                <span className=\"caption\">\n                    {\n                        isLoading ? null : caption ? caption : \"Try adjusting your search or filter to find what you are looking for.\"\n                    }\n                </span>\n\n                {\n                    haveButton && !isLoading ?\n                        <div className=\"button\">\n                            <button onClick={onButtonClick}>CREATE TEMPLATE</button>\n                        </div>\n                        : null\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default EmptyTableData","import { DatePicker, Pagination, Tooltip } from 'antd'\nimport moment from 'moment'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FETCH_CONSOLIDATED_REPORTS, getHospitalsList, updateConsolodatedReportComment, updateMisReportAttachments } from '../../actions/InterbranchAdminActions'\nimport { AddIconV2, ClearFilterIcon } from '../../assets/Logos/Icons'\nimport { CLINIC_ADMIN_USER, USER_DATA } from '../../constants/const'\nimport EmptyTableData from '../Common/EmptyTableData/EmptyTableData'\nimport './consolidatedreport.css'\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\nfunction ConsolidatedReport() {\n\n    let [selectedDate, setSelectedDate] = useState({ from: null, to: null })\n    let [pagination, setPagination] = useState(null)\n    let [userType, setUserType] = useState(JSON.parse(localStorage.getItem(USER_DATA))?.userType)\n    let [filterData, setFilterData] = useState({\n        date: null,\n        hospital: null\n    })\n    let [isLoading, setLoading] = useState(true)\n\n    const monthFormat = 'MMM-YYYY';\n\n    useEffect(() => {\n\n        dispatch(getHospitalsList())\n        dispatch(FETCH_CONSOLIDATED_REPORTS()).then((res) => {\n\n            if (res) setLoading(false)\n\n        })\n\n\n    }, [])\n\n\n\n    let appointmentDetails = useSelector(state => state.interbranchAdmin.consolidatedreport)\n    let consolidatedreportTotalPages = useSelector(state => state.interbranchAdmin.consolidatedreportTotalPages)\n    let hospitalsList = useSelector(state => state.interbranchAdmin.hospitalsList)\n\n    let dispatch = useDispatch()\n\n\n    let handleCommentChange = (para_appointment_id, e) => {\n\n        dispatch(updateConsolodatedReportComment(para_appointment_id, e.target.value)).then((res) => {\n\n            if (res) {\n                dispatch(FETCH_CONSOLIDATED_REPORTS())\n            }\n\n        })\n\n\n    }\n\n\n    let handleFileOnChnage = (para_appointment_id, e) => {\n\n\n        let Files = e.target.files\n        let dummy_file = Files[0].name\n\n\n\n        dispatch(updateMisReportAttachments(para_appointment_id, dummy_file)).then((res) => {\n\n            if (res) {\n                dispatch(FETCH_CONSOLIDATED_REPORTS())\n            }\n\n        })\n\n    }\n\n    let handlePaginationChange = (e) => {\n\n        // console.log(e-1);\n        setPagination(e - 1)\n        dispatch(FETCH_CONSOLIDATED_REPORTS({ offset: e - 1, fromDate: selectedDate.from, toDate: selectedDate.to, filterData }))\n    }\n\n    let handleMonthFilter = (e, f) => {\n\n        //\"f\" is the date in string.\n        setFilterData({ ...filterData, date: f })\n    }\n\n\n    let handleHospitalFilter = (value) => {\n\n        setFilterData({ ...filterData, hospital: value })\n    }\n\n\n    useEffect(() => {\n\n        dispatch(FETCH_CONSOLIDATED_REPORTS({ filterData }))\n\n    }, [filterData])\n\n\n    let clearDatePicker = () => {\n        if (filterData.date) {\n            setFilterData({ ...filterData, date: null })\n        }\n    }\n\n    let clearHcoPicker = () => {\n        if (filterData.hospital) {\n            setFilterData({ ...filterData, hospital: null })\n        }\n    }\n\n\n\n\n    return (\n        <div className='appontment-history-container'>\n\n            <div className=\"header consolidated-report-header\">\n\n\n                {/* &nbsp; */}\n\n                {/* <Tooltip placement=\"topLeft\" title={\"For more than past 3 months report please use Download Report button.\"}>\n                    <div className=\"filter-button\" >\n                        <div className=\"icon\" onClick={filterOnClick}><i class=\"far fa-calendar-alt\"></i></div>\n                        <RangePicker open={isOpen}\n                            ref={dateRef}\n                            bordered={false}\n                            className=\"date-picker\"\n                            suffixIcon={null}\n                            onChange={handledateChange}\n\n                        />\n                    </div>\n                </Tooltip> */}\n                <div>&nbsp;</div>\n\n                {\n                    userType !== \"ClinicAdmin\" ?\n                        <div className=\"filter-button\" >\n\n                            {/* <Tooltip placement=\"topLeft\" title={filterData.hospital && \"Clear hospital filter\"}> */}\n\n                                <div className=\"icon\" onClick={clearHcoPicker}>\n\n                                    {\n                                        filterData.hospital ?\n\n\n                                            <ClearFilterIcon />\n\n\n                                            : <i class=\"far fa-filter\"></i>\n                                    }\n\n\n\n                                </div>\n                            {/* </Tooltip> */}\n                            <Select\n                                allowClear\n                                value={filterData.hospital ? filterData.hospital : []}\n                                onChange={handleHospitalFilter}\n                                showSearch\n                                style={{\n                                    width: 200,\n                                }}\n                                placeholder=\"Filter by hospital name\"\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                            >\n\n                                {\n                                    hospitalsList && hospitalsList.length > 0 ?\n\n                                        hospitalsList.map((each_hospitals) => {\n\n                                            return (\n                                                <Option value={each_hospitals.clinicname}>{each_hospitals.clinicname}</Option>\n                                            )\n\n                                        })\n                                        : null\n                                }\n\n                            </Select>\n                        </div> : null\n                }\n\n\n\n                <div className=\"filter-button\" >\n\n                    {/* <Tooltip placement=\"topLeft\" title={filterData.date && \"Clear date range filter\"}> */}\n\n                        <div className=\"icon\" onClick={clearDatePicker}>\n\n                            {\n                                filterData.date ?\n\n                                    <ClearFilterIcon />\n\n                                    : <i class=\"far fa-filter\"></i>\n                            }\n\n\n                        </div>\n                    {/* </Tooltip> */}\n\n                    <DatePicker value={filterData.date && moment(filterData?.date, \"MMM-YYYY\")} onChange={handleMonthFilter} className=\"date-picker\" placeholder='Filter by month and year' format={monthFormat} picker=\"month\" />\n\n\n                </div>\n\n            </div>\n\n\n\n            <div className=\"todays_report_table_container\">\n\n                <table className='appoinment-table consolidated-table'>\n                    <tr>\n                        <th>Month - Year</th>\n                        {\n                            userType == CLINIC_ADMIN_USER ? null : <th>Hospital Name</th>\n                        }\n                        <th>Number of Appointments</th>\n                        <th>International</th>\n                        <th>Domestic</th>\n                        <th>Number of Doctors</th>\n                        <th>Hospital Gross Fees</th>\n                        <th>Tax</th>\n                        <th>Hospital Nett Fees</th>\n                        <th>Testing Appointments</th>\n                        <th>Refunds</th>\n                        <th>Comments</th>\n                        <th>Attachments</th>\n\n\n                    </tr>\n\n                    <tbody>\n\n                        {\n                            appointmentDetails ?\n                                appointmentDetails.length > 0 ?\n\n                                    appointmentDetails.map((element, key) => {\n\n\n\n\n\n                                        return (\n\n                                            <tr key={key}>\n                                                <td>{element[\"Month-Year\"]}</td>\n                                                {\n                                                    userType == CLINIC_ADMIN_USER ? null : <td>{element.Hospital}</td>\n                                                }\n                                                <td>{element.Number_Of_appointments}</td>\n                                                <td>{element.International}</td>\n                                                <td>{element.Domestic}</td>\n                                                <td>{element.Number_Of_doctors}</td>\n                                                <td>{element.Hospital_Gross_Fees}</td>\n                                                <td>{element.TDS}</td>\n                                                <td>{element.Hospital_Net_Fees}</td>\n                                                <td>{element.TestingAppointments}</td>\n                                                <td>{element.Refunds}</td>\n                                                <td><textArea onBlur={(e) => { handleCommentChange(element.recordId, e) }} rows={1} >{element.Adjustments}</textArea></td>\n                                                <td>\n                                                    <ul className='consolidated-table-report'>\n\n                                                        {\n                                                            element.uploadedFile.split(',').length > 0 ?\n\n                                                                element.uploadedFile.split(',').map((file, key) => {\n\n                                                                    if (file && file !== \"null\") {\n                                                                        return (\n\n                                                                            <>\n                                                                                <li>Rpt{key + 1}</li>\n                                                                                {key + 1 == element.uploadedFile.split(',').lenhth ? \"\" : <li>|</li>}\n                                                                            </>\n\n                                                                        )\n\n                                                                    }\n\n                                                                })\n\n\n                                                                : null\n                                                        }\n\n\n\n\n                                                        <label className=\"add-report\" htmlFor={element.recordId}>\n                                                            <AddIconV2 />\n                                                            &nbsp;Add new\n                                                            <input onChange={(e) => { handleFileOnChnage(element.recordId, e) }} id={element.recordId} style={{ display: \"none\" }} type=\"file\" name=\"\" />\n                                                        </label>\n                                                    </ul>\n                                                </td>\n\n\n                                            </tr>\n\n                                        )\n\n\n\n\n\n                                    })\n\n                                    : <tr>\n                                        <td colSpan={12}>\n                                            <EmptyTableData isLoading={isLoading} />\n                                        </td>\n                                    </tr>\n                                : null\n                        }\n\n\n\n\n\n                    </tbody>\n                </table>\n\n            </div>\n            {\n                consolidatedreportTotalPages && consolidatedreportTotalPages > 0 ?\n                    <div className=\"pagination-container-mis-report\">\n\n                        &nbsp;\n                        <Pagination onChange={handlePaginationChange} defaultCurrent={1} total={consolidatedreportTotalPages ? consolidatedreportTotalPages * 8 : 0} />\n\n                    </div> : null\n            }\n\n\n        </div>\n    )\n}\n\nexport default ConsolidatedReport","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { INTERBRANCH_MODAL } from '../../actions/type';\r\nimport './custommodal.css'\r\n\r\nfunction CustomeModal({ state, modalName,component,position, isRight,setModal }) {\r\n\r\n \r\n    let dispatch=useDispatch()\r\n\r\n    let handleClose = () => {\r\n\r\n        // console.log(modalName);\r\n\r\n        dispatch({\r\n            type: INTERBRANCH_MODAL,\r\n            payload: {\r\n                name: modalName,\r\n                value: false\r\n            }\r\n        });\r\n\r\n        if(setModal)\r\n        {\r\n            setModal(false)\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n               isRight?\r\n\r\n               state ?\r\n               <div className= {`custome-modal-container ${position}`}>\r\n\r\n                   <div className=\"clickable\" onClick={handleClose}>\r\n                       &nbsp;\r\n                   </div>\r\n\r\n                   <div className={`menu-container`}>\r\n                      {component}\r\n                   </div>\r\n\r\n               </div> : null\r\n\r\n               :\r\n\r\n               state ?\r\n               <div className= {`custome-modal-container-center`}>\r\n\r\n                 \r\n                   <div className={`menu-container`}>\r\n                      {component}\r\n                   </div>\r\n\r\n               </div> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomeModal\r\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction MisReportModalContent() {\n\n  \n\n    let appointmentDetails=useSelector(state=>state.interbranchAdmin.detaiedSelected)\n\n    let openFile = (file) => {\n        window.open(file, \"_blank\")\n    }\n\n    console.log(appointmentDetails);\n\n    return (\n        <div className='today-report-modal-content'>\n            <div className=\"header\">Appointment ID - {appointmentDetails?.appointmentid}</div>\n\n            <div className=\"todays-report-timeline\">\n\n                <table className='todays_report_table'>\n\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Appointment Details</td>\n\n                        </tr>\n\n                        <tr>\n\n                            <td className='cell1 odd'>Appointment ID</td>\n\n                            <td className='cell3 odd'>{appointmentDetails?.appointmentid}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Appointment Date</td>\n\n                            <td className='cell3 even'>{appointmentDetails?.appointmentdate}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Appointment Time</td>\n\n                            <td className='cell3 odd'>{appointmentDetails?.appointmenttime}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Booked from</td>\n\n                            <td className='cell3 even'>{appointmentDetails?.bookedfrom}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 odd'>Status</td>\n\n                            <td className='cell3 odd'>{appointmentDetails?.consultationstatus}</td>\n                        </tr>\n\n\n\n                    </tbody>\n\n   \n\n\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Patient Details</td>\n\n                        </tr>\n\n                        <tr>\n\n                            <td className='cell1 even'>Name</td>\n                            <td className='cell3 even'>{appointmentDetails?.patientname}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>New/Existing</td>\n                            <td className='cell3 odd'>{appointmentDetails?.NewOrExisting}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Visit Count</td>\n                            <td className='cell3 even'>{appointmentDetails?.Visit_Count}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>MRN Number</td>\n                            <td className='cell3 odd'>{appointmentDetails?.MRNnumber}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Location</td>\n                            <td className='cell3 even'>{appointmentDetails?.Location}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Email ID</td>\n                            <td className='cell3 odd'>{appointmentDetails?.PatientEmail}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Phone Number</td>\n                            <td className='cell3 even'>{appointmentDetails?.PatientPhonenumber}</td>\n                        </tr>\n\n                    </tbody>\n\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Doctor Details</td>\n\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Doctor ID</td>\n                            <td className='cell3 odd'>{appointmentDetails?.doctor_id}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Name</td>\n                            <td className='cell3 even'>{appointmentDetails?.doctor_name}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Specialty</td>\n                            <td className='cell3 odd'>{appointmentDetails?.doctor_speciality}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Hospital Name</td>\n                            <td className='cell3 even'>{appointmentDetails?.hospital_name}</td>\n                        </tr>\n\n\n\n\n\n                    </tbody>\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Fees Calculation</td>\n                        </tr>\n\n                        <tr>\n                           \n                            <td className='cell1 odd'>Status</td>\n                            <td className='cell3 odd'>{appointmentDetails?.Fees_status}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Payment ID</td>\n                            <td className='cell3 even'>{appointmentDetails?.payment_id}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Refund ID</td>\n                            <td className='cell3 odd'>{appointmentDetails?.refund_id}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 even'>Received from Patient</td>\n                            <td className='cell3 even'>{appointmentDetails?.patient_fee_received}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Payment Mode</td>\n                            <td className='cell3 odd'>{appointmentDetails?.payment_mode}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Payment Channel</td>\n                            <td className='cell3 even'>{appointmentDetails?.Payment_Channel}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Invoice file</td>\n                            <td className='cell3 odd'><span className='file_open_link' onClick={() => { openFile(appointmentDetails?.Invoice_File_Link) }}> {appointmentDetails?.Invoice_File?appointmentDetails.Invoice_File:\"-\"}</span></td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Doctor Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.doctor_fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Discounts</td>\n                            <td className='cell3 odd'>{appointmentDetails?.Discounts}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>C2MD Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.c2md_fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>GST on C2MD Fees</td>\n                            <td className='cell3 odd'>{appointmentDetails?.GST_on_C2MD_Fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>PG Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.PG_Fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Refund Amount</td>\n                            <td className='cell3 odd'>{appointmentDetails?.Refund_Amount}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 even'>PG Refund Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.PG_Refund_Fees}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 odd'>GST on Refund Fees</td>\n                            <td className='cell3 odd'>{appointmentDetails?.PG_Refund_GST}</td>\n                        </tr>\n\n\n\n                    </tbody>\n\n\n\n                    <tbody>\n\n                    <tr>\n                            <td className='title' colSpan={2}>Pay Out</td>\n                           \n                        </tr>\n\n                        <tr>\n                           \n                            <td className='cell1 even'>Gross Amount</td>\n                            <td className='cell3 even'>{appointmentDetails?.Gross_Amount}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Tax</td>\n                            <td className='cell3 odd'>{appointmentDetails?.TAX}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Net Amount Payable</td>\n                            <td className='cell3 even'>{appointmentDetails?.nett_amount_payable}</td>\n                        </tr>\n\n\n                    </tbody>\n\n\n                </table>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default MisReportModalContent\n\n\n","import { Pagination, Tooltip } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DatePicker, Space } from 'antd';\r\nimport './todaysreport.css'\r\n// import { FETCH_MIS_REPORT, GET_DASHBOARD_MORE } from '../../Redux/Slice/DetailedReportSlice';\r\nimport { INTERBRANCH_ADMIN_DASHBOARD_SELECTED, INTERBRANCH_MODAL } from '../../actions/type';\r\nimport { FETCH_ADMIN_DASHBOARD_REPORT, FETCH_DASHBOARD_MORE } from '../../actions/InterbranchAdminActions';\r\nimport { separaetdateAndTime } from '../../Helpers/dateFunctions';\r\nimport { getFromLocalStorage } from '../../Helpers/localStorageHelper';\r\nimport { CLINIC_ADMIN_USER, USER_DATA, USER_TYPE } from '../../constants/const';\r\nimport EmptyTableData from '../Common/EmptyTableData/EmptyTableData';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction TodaysReport() {\r\n\r\n    const dispatch = useDispatch()\r\n    const dateRef = useRef(null)\r\n\r\n    let dashboardData = useSelector(state => state.interbranchAdmin.dashboardTable)\r\n\r\n    let [isOpen, setOpen] = useState(false)\r\n    let [pagination, setPagination] = useState(1)\r\n    let [userType, setUserType] = useState(JSON.parse(localStorage.getItem(USER_DATA))?.userType)\r\n\r\n    let [isLoading,setLoading]=useState(true)\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(FETCH_ADMIN_DASHBOARD_REPORT()).then((res)=>{\r\n            if(res) setLoading(false)\r\n        })\r\n     \r\n    }, [])\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setPagination(10)\r\n\r\n    }, [dashboardData])\r\n\r\n\r\n\r\n    let handleTableClick = (eachRow) => {\r\n\r\n\r\n\r\n        dispatch({\r\n            type: INTERBRANCH_ADMIN_DASHBOARD_SELECTED,\r\n            payload: eachRow\r\n        });\r\n\r\n        dispatch(FETCH_DASHBOARD_MORE(eachRow.appointmentId))\r\n\r\n        dispatch({\r\n            type: INTERBRANCH_MODAL,\r\n            payload: {\r\n                name: \"todaysReportModal\",\r\n                value: true\r\n            }\r\n        });\r\n\r\n        // dispatch(setModalRedux({\r\n        //     name: \"todaysReportModal\",\r\n        //     value: true\r\n        // }))\r\n\r\n    }\r\n\r\n\r\n    let filterOnClick = () => {\r\n\r\n        // dateRef.current.focus();\r\n\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n\r\n\r\n    let handledateChange = () => {\r\n\r\n        setOpen(!isOpen)\r\n\r\n    }\r\n\r\n    let handlePaginationChange = (e, s) => {\r\n\r\n        // console.log(e,s);\r\n        // dispatch(FETCH_ADMIN_DASHBOARD_REPORT({offset:e-1}))\r\n\r\n        // if (pagination < dashboardData.length) {\r\n        //     setPagination(pagination + 10)\r\n        // }\r\n\r\n    }\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <div className='appontment-history-container'>\r\n\r\n            <div className=\"header\">\r\n\r\n\r\n                {/* &nbsp; */}\r\n\r\n                {/* <Tooltip placement=\"topLeft\" title={\"For more than past 3 months report please use Download Report button.\"}>\r\n                    <div className=\"filter-button\" >\r\n                        <div className=\"icon\" onClick={filterOnClick}><i class=\"far fa-calendar-alt\"></i></div>\r\n                        <RangePicker open={isOpen}\r\n                            ref={dateRef}\r\n                            bordered={false}\r\n                            className=\"date-picker\"\r\n                            suffixIcon={null}\r\n                            onChange={handledateChange}\r\n\r\n                        />\r\n                    </div>\r\n                </Tooltip> */}\r\n\r\n\r\n                <div>&nbsp;</div>\r\n\r\n                <button >\r\n\r\n                    {/* <div className=\"icon\">\r\n                        <i class=\"far fa-download\"></i>\r\n                    </div> */}\r\n\r\n                    Today's Report\r\n                </button>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"todays_report_table_container\">\r\n\r\n                <table className='appoinment-table'>\r\n\r\n\r\n                    {\r\n                        userType == CLINIC_ADMIN_USER ?\r\n\r\n                            // CLINIC ADMIN TABLE........................................................\r\n                            <>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Appointment ID</th>\r\n                                        <th>Doctor Name</th>\r\n                                        <th>Patient Name</th>\r\n                                        <th>Appointment Date & Time</th>\r\n                                        <th>Appointment Duration</th>\r\n                                        <th>Appointment fees</th>\r\n                                        <th>Payment Id</th>\r\n                                        <th>Hospital Id</th>\r\n                                        <th>Appointment Status</th>\r\n                                        <th className=''>{`Doctor Consultation \\n Screen status`}</th>\r\n                                        <th>{`Patient Consultation \\n Screen status`}</th>\r\n                                        <th>Follow up Details</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        dashboardData ?\r\n                                            dashboardData.length > 0 ?\r\n\r\n                                                dashboardData.map((eachRow, key) => {\r\n\r\n                                                    if (eachRow.appointmentId) {\r\n                                                        return (\r\n\r\n                                                            <tr>\r\n                                                                <td>{eachRow.appointmentId}</td>\r\n                                                                <td>{eachRow.doctorname}</td>\r\n                                                                <td>\r\n                                                                    <div className='dashboard-appointment-date-time-2'>\r\n                                                                        <span>{eachRow.patientname}</span>\r\n                                                                        <span>{eachRow.timezone}</span>\r\n                                                                    </div>\r\n\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <div className='dashboard-appointment-date-time'>\r\n                                                                        <span>{eachRow.appointmentdate} (P)</span>\r\n                                                                        <span>{eachRow.doctorappointmentdate} (D)</span>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>{eachRow.duration} Minutes</td>\r\n                                                                <td>\r\n                                                                    <div className='dashboard-appointment-date-time'>\r\n                                                                        <span>{eachRow.fees}</span>\r\n                                                                        <span>{eachRow.paymentgatway}</span>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>{eachRow.paymentId}</td>\r\n                                                                <td>{eachRow.Hospitalid}</td>\r\n                                                                <td>{eachRow.appointmentStatus}</td>\r\n                                                                <td>{eachRow.doctorstatus}</td>\r\n                                                                <td>{eachRow.patientstatus}</td>\r\n                                                                <td>{eachRow.followupdetails}</td>\r\n                                                                <td ><button onClick={() => { handleTableClick(eachRow) }} className='more-btn' >More</button></td>\r\n\r\n                                                            </tr>\r\n\r\n                                                        )\r\n\r\n                                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                                })\r\n\r\n                                                : <tr>\r\n                                                    <td colSpan={13}>\r\n                                                        <EmptyTableData isLoading={isLoading} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            : null\r\n                                    }\r\n\r\n\r\n                                </tbody>\r\n                            </>\r\n                            :\r\n                            // SUPER ADMIN TABLE........................................................\r\n                            <>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Appointment ID</th>\r\n                                        <th>Appoinment Date & Time</th>\r\n                                        <th>Patient Name</th>\r\n                                        <th>Doctor Name</th>\r\n                                        <th>Fees Paid</th>\r\n                                        <th>Consultation Status</th>\r\n                                        <th>Next Steps</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        dashboardData ?\r\n                                            dashboardData.length > 0 ?\r\n\r\n                                                dashboardData.map((eachRow, key) => {\r\n\r\n                                                    if (key <= 10 && eachRow.appointmentId) {\r\n                                                        return (\r\n\r\n                                                            <tr>\r\n                                                                <td>{eachRow.appointmentId}</td>\r\n                                                                <td>\r\n                                                                    <div className='dashboard-appointment-date-time'>\r\n                                                                        <span>{eachRow.appointmentdate} (P)</span>\r\n                                                                        <span>{eachRow.doctorappointmentdate} (D)</span>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                {/* <td>{separaetdateAndTime(eachRow.appointmentdate)?.date}</td> */}\r\n                                                                {/* <td>{separaetdateAndTime(eachRow.appointmentdate)?.time} (GMT+05:30)</td> */}\r\n                                                                <td>\r\n                                                                    <div className='dashboard-appointment-date-time-2'>\r\n                                                                        <span>{eachRow.patientname}</span>\r\n                                                                        <span>{eachRow.timezone}</span>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>{eachRow.doctorname}</td>\r\n                                                                <td>\r\n\r\n                                                                    <div className='dashboard-appointment-date-time'>\r\n                                                                        <span>{eachRow.fees}</span>\r\n                                                                        <span>{eachRow.paymentgatway}</span>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>{eachRow.appointmentStatus}</td>\r\n                                                                <td>{eachRow.followupdetails}</td>\r\n                                                                <td ><button onClick={() => { handleTableClick(eachRow) }} className='more-btn' >More</button></td>\r\n\r\n                                                            </tr>\r\n\r\n                                                        )\r\n\r\n                                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                                })\r\n\r\n                                                : <tr>\r\n                                                    <td colSpan={9}>\r\n                                                        <EmptyTableData isLoading={isLoading} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            : null\r\n                                    }\r\n\r\n\r\n                                </tbody>\r\n                            </>\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </table>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"pagination-container-mis-report\">\r\n\r\n                &nbsp;\r\n                {/* <Pagination onChange={handlePaginationChange} defaultCurrent={1} total={ dashboardData?dashboardData*8:0}/> */}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodaysReport\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { CLINIC_ADMIN_USER, USER_DATA } from '../../constants/const'\r\nimport './index.css'\r\n\r\nfunction TodaysReportModalContent() {\r\n\r\n\r\n    let appointmentDetails = useSelector(state => state.interbranchAdmin.dashboardSelected)\r\n    let appointmentDetailsV2 = useSelector(state => state.interbranchAdmin.dashboardSelectedV2)\r\n    \r\n    let [userType, setUserType] = useState(JSON.parse(localStorage.getItem(USER_DATA))?.userType)\r\n\r\n    // console.log(appointmentDetails);\r\n\r\n\r\n    return (\r\n        <div className='today-report-modal-content'>\r\n            <div className=\"header\">Appointment ID - {appointmentDetails?.appointmentId}</div>\r\n\r\n            <div className=\"todays-report-timeline\">\r\n\r\n                <table className='todays_report_table'>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Appointment Details</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Appointment ID</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.appointmentId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Appointment Date</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.appointmentdate?.split(' ')[0]}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Appointment Time</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.appointmenttime}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Booked from</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetailsV2?.booked_from}</td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Consultation Status</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Status</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.status}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Session ID (TokBox)</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.sessionId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Patient Availability and On Screen Status</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.PatientScreenStatus}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Doctor Availability and On Screen Status</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.DoctorScreenStatus}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Appointment Duration</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.duration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Notifications Details</td>\r\n\r\n                        </tr>\r\n\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Patient</td>\r\n\r\n                            <td className='cell3 odd'>\r\n\r\n                                Email sent date: {appointmentDetailsV2?.emailPatientDate}<br />\r\n                                Email sent time: {appointmentDetailsV2?.emailPatientTime} <br />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Doctor</td>\r\n\r\n                            <td className='cell3 even'>\r\n                                Email sent date: {appointmentDetailsV2?.emailDoctorDate} <br />\r\n                                Email sent time: {appointmentDetailsV2?.emailDoctorTime} <br />\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Patient Details</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Name</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.patientname}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>New/Existing</td>\r\n                            <td className='cell3 even'>{appointmentDetailsV2?.NewOrExisting}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>MRN Number</td>\r\n                            <td className='cell3 odd'>{appointmentDetailsV2?.MRNNumber}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Location</td>\r\n                            <td className='cell3 even'>{appointmentDetailsV2?.PatientLocation}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Email ID</td>\r\n                            <td className='cell3 odd'>{appointmentDetailsV2?.PatientEmail}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Phone Number</td>\r\n                            <td className='cell3 even'>{appointmentDetailsV2?.PatientMobile}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Timezone</td>\r\n                            <td className='cell3 odd'>{appointmentDetailsV2?.PatientTimeZone}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Booked By (For Loved One)</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.bookedby}</td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={6}>Doctor Details</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Doctor ID</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.doctorId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Name</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.doctorname}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Specialty</td>\r\n                            <td className='cell3 odd'>{appointmentDetailsV2?.speciality}</td>\r\n                        </tr>\r\n\r\n                        {\r\n                            userType == CLINIC_ADMIN_USER ? null :\r\n                                <tr>\r\n                                    <td className='cell1 even'>Hospital Name</td>\r\n                                    <td className='cell3 even'>{appointmentDetails?.Hospital}</td>\r\n                                </tr>\r\n                        }\r\n\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Email ID</td>\r\n                            <td className='cell3 odd'>{appointmentDetailsV2?.DoctorEmail}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Phone Number</td>\r\n                            <td className='cell3 even'>{appointmentDetailsV2?.DoctorMobile}</td>\r\n                        </tr>\r\n\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Fees Calculation</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Status</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.paymentStatus}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Payment ID</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.paymentId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Refund ID</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.refundid}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Fees Paid</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.fees}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Payment Mode</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.paymentMode}</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodaysReportModalContent\r\n"],"names":["convertDateToString","_date","moment","format","convertDateToStringThreeMonthBack","subtract","convertDateToStringOneYear","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","FETCH_ADMIN_DASHBOARD_REPORT","_para","dispatch","getFromLocalStorage","USER_DATA","userData","userType","clinicId","todayDate","Date","ADMIN_USER","params","loginedApi","headers","response","console","log","status","data","errorType","type","INTERBRANCH_ADMIN_DASHBOARD","payload","totalPages","totalNumberOfPages","MANAGE_SESSION","isSessionActive","CLINIC_ADMIN_USER","FETCH_ADMIN_DETAILED_REPORT","fromDate","toDate","offset","toString","clinic","INTERBRANCH_ADMIN_DETAILED","FETCH_DASHBOARD_MORE","_id","INTERBRANCH_ADMIN_DASHBOARD_SELECTED_v2","FETCH_DETAILED_MORE","c2mdApi","INTERBRANCH_ADMIN_DETAILED_SELECTED","FETCH_CONSOLIDATED_REPORTS","endDate","filterData","date","hospital","INTERBRANCH_ADMIN_CONSOLIDATED","updateMisReportComment","value","info","updateMisReportAttachments","updateConsolodatedReportComment","downloadSummaryReport","filename","getHospitalsList","MANAGE_HOSPITALS_LIST","IP","require","v4","browser","detect","platform","window","navigator","userAgent","off","replace","formatTime","split","slice","search","loginAction","loginType","userName","accessCountry","password","history","backupData","setDrSign","version","browserTimeZone","requestType","resp","doctorscountrycode","hash","CryptoJS","isFromMobile","deviceId","appname","hashPassword","Ipaddress","useragent","Browser","name","Os","currency","Country","res","LOGIN_SUCCESS_ACTION","setItem","stringify","redirection","push","location","state","login","isotpverified","axios","method","url","loginDetails","then","catch","err","checkUser","searchkey","searchKey","logoutAction","userId","LOG_OUT_ACTION","removeItem","loginwithotp","appoinment_form","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","routing","doctrId","requestOptions","body","loginWithGoogle","Data","email","updateLoginDetails","UPDATE_LOGIN","getDepartments","clear","href","getDoctors","department_id","getTemplateList","total","viewTemplate","par_tempId","FETCH_PR_ADMIN_DASHBOARD_REPORT","REDUX_LOADING","responce","SET_CR_DASHBOARD","isFresh","syncLabAndMedicine","pushToHisCall","text","varient","useState","style","setStyle","useEffect","className","isLoading","marginTop","caption","haveButton","onButtonClick","height","width","PuffLoader","color","loading","size","onClick","Option","Select","from","to","selectedDate","setPagination","setFilterData","setLoading","appointmentDetails","useSelector","interbranchAdmin","consolidatedreport","consolidatedreportTotalPages","hospitalsList","useDispatch","class","allowClear","onChange","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","filterSort","optionA","optionB","localeCompare","length","map","each_hospitals","clinicname","e","f","picker","element","key","Hospital","Number_Of_appointments","International","Domestic","Number_Of_doctors","Hospital_Gross_Fees","TDS","Hospital_Net_Fees","TestingAppointments","Refunds","onBlur","para_appointment_id","target","handleCommentChange","recordId","rows","Adjustments","uploadedFile","file","lenhth","htmlFor","dummy_file","files","handleFileOnChnage","id","display","colSpan","EmptyTableData","defaultCurrent","modalName","component","isRight","setModal","INTERBRANCH_MODAL","detaiedSelected","appointmentid","appointmentdate","appointmenttime","bookedfrom","consultationstatus","patientname","NewOrExisting","Visit_Count","MRNnumber","Location","PatientEmail","PatientPhonenumber","doctor_id","doctor_name","doctor_speciality","hospital_name","Fees_status","payment_id","refund_id","patient_fee_received","payment_mode","Payment_Channel","Invoice_File_Link","open","Invoice_File","doctor_fees","Discounts","c2md_fees","GST_on_C2MD_Fees","PG_Fees","Refund_Amount","PG_Refund_Fees","PG_Refund_GST","Gross_Amount","TAX","nett_amount_payable","DatePicker","dashboardData","useRef","dashboardTable","handleTableClick","eachRow","INTERBRANCH_ADMIN_DASHBOARD_SELECTED","appointmentId","doctorname","timezone","doctorappointmentdate","duration","fees","paymentgatway","paymentId","Hospitalid","appointmentStatus","doctorstatus","patientstatus","followupdetails","dashboardSelected","appointmentDetailsV2","dashboardSelectedV2","booked_from","sessionId","PatientScreenStatus","DoctorScreenStatus","emailPatientDate","emailPatientTime","emailDoctorDate","emailDoctorTime","MRNNumber","PatientLocation","PatientMobile","PatientTimeZone","bookedby","doctorId","speciality","DoctorEmail","DoctorMobile","paymentStatus","refundid","paymentMode"],"sourceRoot":""}