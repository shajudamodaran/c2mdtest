{"version":3,"file":"static/js/8510.d02a0562.chunk.js","mappings":"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","sources":["Helpers/dateFunctions.js","actions/AuthHeader.js","actions/InterbranchAdminActions.js","components/Badges/StatusBadge/StatusBadge.jsx","components/Common/EmptyTableData/EmptyTableData.jsx","components/ConsolidatedReport/ConsolidatedReport.jsx","components/CustomeModal/CustomeModal.jsx","components/MisReportModal/MisReportModalContent.jsx","components/TodaysReport/TodaysReport.jsx","components/TodaysReportModalContent/TodaysReportModalContent.jsx"],"sourcesContent":["import moment from \"moment\";\n\nexport const isWithinMinutes = (date, time) => {\n\n  var date = new Date()\n\n\n\n  var appointmentDate = moment(time, 'hh:mm A')._d\n  var FIVE_MIN = 5 * 60 * 1000;\n\n   console.log(appointmentDate-date,date,FIVE_MIN);\n\n\n  if ((appointmentDate-date) > FIVE_MIN) {\n    return true\n  }\n\n\n}\n\nfunction setDateTime(date, time) {\n\n\n  var index = time.indexOf(\":\"); // replace with \":\" for differently displayed time.\n  var index2 = time.indexOf(\" \");\n\n  var hours = time.substring(0, index).toString();\n  var minutes = time.substring(index + 1, index2);\n\n  var mer = time.substring(index2 + 1, time.length);\n\n  if (mer == \"PM\") {\n    hours = hours + 12;\n  }\n\n\n  date.setHours(hours);\n  date.setMinutes(minutes);\n  date.setSeconds(\"00\");\n\n  console.log(hours);\n\n  return date;\n}\n\nexport const separaetdateAndTime = (date_string) => {\n\n\n  if (date_string) {\n    let arr = date_string.split(\" \");\n    return {\n      date: arr[0],\n      time: arr[1]\n    }\n\n\n\n  }\n\n}\n\n\nexport const convertDateToString = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).format(\"DD-MMM-YYYY\"); \n\n  }\n\n}\n\nexport const convertDateToStringThreeMonthBack = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).subtract(3, 'months').format(\"DD-MMM-YYYY\"); \n\n  }\n\n}\n\nexport const convertDateToStringOneYear = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).subtract(1, 'year').format(\"DD-MMM-YYYY\"); \n\n  }\n\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('userData'));\r\n    if (user && user.token) {\r\n      return { Authorization: 'Bearer ' + user.token };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import loginedApi, { c2mdApi } from \"../apis\"\n// import { USER_TOKEN } from \"../constants/const\";\nimport { convertDateToString, convertDateToStringOneYear, convertDateToStringThreeMonthBack } from \"../Helpers/dateFunctions\";\nimport { getFromLocalStorage } from \"../Helpers/localStorageHelper\";\nimport authHeader from \"./AuthHeader\";\nimport { INTERBRANCH_ADMIN_CONSOLIDATED, INTERBRANCH_ADMIN_DASHBOARD, INTERBRANCH_ADMIN_DASHBOARD_SELECTED, INTERBRANCH_ADMIN_DETAILED, INTERBRANCH_ADMIN_DETAILED_SELECTED } from \"./type\";\n\nimport { ADMIN_USER, CLINIC_ADMIN_USER, USER_DATA } from '../constants/const'\n\n\n\nexport const FETCH_ADMIN_DASHBOARD_REPORT = (_para) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n    let todayDate = convertDateToString(new Date())\n\n\n    if (userType == ADMIN_USER) {\n\n        let params =\n        {\n            \"token\": \"token\",\n            \"requestType\": 509,\n            \"version\": \"2.0\",\n            \"data\": {\n                \"operation\": \"find\",\n                \"browserTimeZone\": \"GMT+05:30\",\n                \"startDate\": todayDate,\n                \"endDate\": todayDate,\n                \"Type\": \"excel\",\n            }\n        }\n\n\n        let responce = await loginedApi.post(\"getappointments\", params, { headers: authHeader() })\n\n        console.log(\"getappointments responce ->\", responce.data.data);\n\n        if (responce.status == 200) {\n\n            dispatch({\n                type: INTERBRANCH_ADMIN_DASHBOARD,\n                payload: {\n                    data: responce.data.data,\n                    totalPages: responce.data.totalNumberOfPages\n                }\n            });\n\n        }\n\n    }\n    else if (userType == CLINIC_ADMIN_USER) {\n\n        let params =\n        {\n            \"data\": {\n                \"Type\": null,\n                \"operation\": \"find\",\n                \"startDate\": todayDate,\n                \"endDate\": todayDate,\n                \"browserTimeZone\": \"GMT+05:30\",\n                \"clinicId\": clinicId\n            },\n            \"browserTimeZone\": \"\",\n            \"requestType\": 518,\n            \"version\": \"2.0\"\n        }\n\n        let responce = await loginedApi.post(\"getclinicappointments\", params, { headers: authHeader() })\n\n        console.log(\"getclinicappointments responce ->\", responce.data.data);\n\n        if (responce.status == 200) {\n\n            dispatch({\n                type: INTERBRANCH_ADMIN_DASHBOARD,\n                payload: {\n                    data: responce.data.data,\n                    totalPages: responce.data.totalNumberOfPages\n                }\n            });\n\n        }\n\n\n\n    }\n\n}\n\n\nexport const FETCH_ADMIN_DETAILED_REPORT = (_para) => async (dispatch) => {\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n\n    let todayDate = convertDateToString(new Date())\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : null\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : null\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            // \"Type\": \"excel\",\n            \"startDate\": fromDate ? fromDate : convertDateToStringThreeMonthBack(todayDate),\n            \"endDate\": toDate ? toDate : todayDate,\n            \"offset\": _para?.offset ? _para.offset.toString() : \"0\"\n        }\n\n    }\n\n\n    if (userType == ADMIN_USER) {\n    }\n    else if (userType == CLINIC_ADMIN_USER) {\n\n        params.data.clinic = clinicId\n\n    }\n\n\n\n\n\n\n\n    let responce = await loginedApi.post(\"getsummaryreport\", params, { headers: authHeader() })\n\n    console.log(\"getsummaryreport responce ->\", responce.data.data);\n\n    if (responce.status == 200) {\n\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DETAILED,\n            payload: {\n                data: responce.data.data.data,\n                totalPages: responce.data.data.totalNumberOfPages\n            }\n        });\n\n\n    }\n\n\n}\n\n\nexport const FETCH_DASHBOARD_MORE = (_id) => async dispatch => {\n\n\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1041\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"browserTimeZone\": \"GMT+05:30\"\n        }\n    }\n\n    let responce = await c2mdApi.post(\"getdetailreport\", params, { headers: authHeader() })\n\n    console.log(responce.data.data);\n\n\n    if (responce.status == 200) {\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DASHBOARD_SELECTED,\n            payload: responce.data.data\n        });\n\n        //    console.log(responce.data.data);\n        //    dispatch(setSelectedDash(responce.data.data))\n\n    }\n\n\n}\n\nexport const FETCH_DETAILED_MORE = (_id) => async dispatch => {\n\n\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1041\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"browserTimeZone\": \"GMT+05:30\"\n        }\n    }\n\n    let responce = await c2mdApi.post(\"getdetailreport\", params, { headers: authHeader() })\n\n\n\n    if (responce.status == 200) {\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_DETAILED_SELECTED,\n            payload: responce.data.data\n        });\n\n        //    console.log(responce.data.data);\n        //    dispatch(setSelectedDash(responce.data.data))\n\n    }\n\n\n}\n\n\n\nexport const FETCH_CONSOLIDATED_REPORTS = (_para) => async dispatch => {\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n\n    console.log(_para);\n\n\n    let todayDate = convertDateToString(new Date())\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : convertDateToStringOneYear(todayDate)\n    let toDate = _para?.endDate ? convertDateToString(_para.endDate) : todayDate\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"search\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"startDate\": fromDate,\n            \"endDate\": toDate,\n            \"offset\": _para?.offset ? _para.offset.toString() : \"0\"\n        }\n    }\n\n    if (clinicId) {\n        params.data.clinic = clinicId\n    }\n\n    let responce = await c2mdApi.post(\"getconsolidatedreport\", params, { headers: authHeader() })\n\n    console.log(\"getconsolidatedreport responce ->\", responce.data.data);\n\n    if (responce.status == 200) {\n\n        dispatch({\n            type: INTERBRANCH_ADMIN_CONSOLIDATED,\n            payload: {\n                data: responce.data.data.data,\n                totalPages: responce.data.data.totalNumberOfPages\n            }\n        });\n\n        //    console.log(responce.data.data);\n        //    dispatch(setSelectedDash(responce.data.data))\n\n    }\n\n\n}\n\n\nexport const updateMisReportComment = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        \"data\": {\n            \"appointmentId\": _id,\n            \"notes\": value\n        }\n    }\n\n    let responce = await c2mdApi.post(\"updatereportdata\", params)\n\n    if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n\n        return true\n\n    }\n\n\n}\n\n\n\nexport const updateMisReportAttachments = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        \"data\": {\n            \"consolReportId\": _id,\n            \"uploadedFile\": value\n        }\n    }\n\n    let responce = await c2mdApi.post(\"updateconsolreport\", params)\n\n    if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n\n        return true\n\n    }\n\n\n}\n\nexport const updateConsolodatedReportComment = (_id, value) => async dispatch => {\n\n\n    let params = {\n\n        \"requestType\": \"1046\",\n        // \"version\": 2,\n        \"data\": {\n            \"consolReportId\": _id,\n            \"adjustments\": value\n        }\n    }\n\n    let responce = await c2mdApi.post(\"updateconsolreport\", params)\n\n    if (responce.status == 200 && responce.data.data.info === \"Successfully Updated\") {\n\n        return true\n\n    }\n\n\n}\n\nexport const downloadSummaryReport = (_para) => async (dispatch) => {\n\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : null\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : null\n\n    let userData = await getFromLocalStorage(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType, clinicId } = userData\n\n\n    console.log(fromDate, toDate);\n\n    let params = {\n        \"token\": \"token\",\n        \"requestType\": \"1040\",\n        \"version\": \"2.0\",\n        \"data\": {\n            \"operation\": \"find\",\n            \"browserTimeZone\": \"GMT+05:30\",\n            \"Type\": \"excel\",\n            \"startDate\": fromDate ? fromDate : \"16-Mar-2022\",\n            \"endDate\": toDate ? toDate : \"17-Mar-2022\",\n            \"clinic\": clinicId,\n        }\n    }\n\n    let responce = await loginedApi.post(\"getsummaryreport\", params, { headers: authHeader() })\n\n    console.log(\"getsummaryreport responce ->\", responce.data.data);\n\n    if (responce.status == 200) {\n\n        if (responce.data?.data?.filename) {\n            return `https://uat.c2mdr.com/c2mydruat/Connect2MyDoctorRequest?requestType=256&uploadBy=ConsultationProcess&name=${responce.data?.data?.filename}&type=Attachement&uploadRefId=123&from=web`\n        }\n\n\n\n    }\n\n\n}\n\n\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport '../badges.css'\n\nfunction StatusBadge({ text, varient }) {\n\n  let [style, setStyle] = useState(null)\n\n\n\n  useEffect(() => {\n\n    if (varient == \"completed\") {\n      setStyle('completed-badge')\n    }\n    else if (varient == \"ongoing\") {\n      setStyle('ongoing-badge')\n    }\n    else {\n      setStyle('normal-badge')\n    }\n\n  }, [varient])\n\n\n\n  return (\n    <div className={`badge-container ${style}`}>\n      {text}\n    </div>\n  )\n}\n\nexport default StatusBadge","import React from 'react'\nimport { ClipLoader, PuffLoader } from 'react-spinners'\nimport { FolderEmpty } from '../../../assets/Logos/Icons'\n\nfunction EmptyTableData({ isLoading,marginTop }) {\n    return (\n        <div className=\"empty-table-data top-margin-50\">\n            <div className=\"empty-table-body\" style={{\n                height:isLoading&&70,\n                width:isLoading&&70\n            }} >\n                {\n                    isLoading ?\n\n                        <PuffLoader color={\"#ffffff\"} loading={true} size={70} />\n                        :\n                        <FolderEmpty />\n                }\n\n            </div>\n\n            <div className=\"empty-table-footer\">\n                <span className=\"title\">\n                    {\n                        isLoading ? \"Loading data please wait...\" : \"No Results Found.\"\n                    }\n                </span>\n                <span className=\"caption\">\n                    {\n                        isLoading ? null : \"Try adjusting your search or filter to find what you are looking for.\"\n                    }\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default EmptyTableData","import { DatePicker, Pagination } from 'antd'\nimport TextArea from 'antd/lib/input/TextArea'\nimport moment from 'moment'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FETCH_CONSOLIDATED_REPORTS, updateConsolodatedReportComment, updateMisReportAttachments } from '../../actions/InterbranchAdminActions'\nimport { AddIconV2 } from '../../assets/Logos/Icons'\nimport { convertDateToString } from '../../Helpers/dateFunctions'\nimport EmptyTableData from '../Common/EmptyTableData/EmptyTableData'\nimport './consolidatedreport.css'\n\nconst { RangePicker } = DatePicker;\n\nfunction ConsolidatedReport() {\n\n    let [selectedDate, setSelectedDate] = useState({ from: null, to: null })\n    let [pagination, setPagination] = useState(null)\n\n\n    let appointmentDetails = useSelector(state => state.interbranchAdmin.consolidatedreport)\n    let consolidatedreportTotalPages = useSelector(state => state.interbranchAdmin.consolidatedreportTotalPages)\n\n    let dispatch = useDispatch()\n\n\n    let handleCommentChange = (para_appointment_id, e) => {\n\n        dispatch(updateConsolodatedReportComment(para_appointment_id, e.target.value)).then((res) => {\n\n            if (res) {\n                dispatch(FETCH_CONSOLIDATED_REPORTS())\n            }\n\n        })\n\n\n    }\n\n\n    let handleFileOnChnage = (para_appointment_id, e) => {\n\n\n        let Files = e.target.files\n        let dummy_file = Files[0].name\n\n\n\n        dispatch(updateMisReportAttachments(para_appointment_id, dummy_file)).then((res) => {\n\n            if (res) {\n                dispatch(FETCH_CONSOLIDATED_REPORTS())\n            }\n\n        })\n\n    }\n\n    let handlePaginationChange = (e) => {\n\n        // console.log(e-1);\n        setPagination(e - 1)\n        dispatch(FETCH_CONSOLIDATED_REPORTS({ offset: e - 1, fromDate: selectedDate.from, toDate: selectedDate.to }))\n    }\n\n    let handledateChange = (e) => {\n\n\n        if (e) {\n            let [startDate, endDate] = e\n\n            let prevDate = moment().subtract(3, 'months')\n\n            console.log(convertDateToString(prevDate));\n\n            setSelectedDate({ from: startDate, to: endDate })\n            dispatch(FETCH_CONSOLIDATED_REPORTS({ fromDate: startDate, toDate: endDate, offset: pagination, context: \"Date Change\" }))\n            // downloadReport(startDate, endDate)\n\n\n            if (startDate < prevDate) {\n\n                // Modal.confirm({\n                //     title: 'Confirm',\n                //     // icon: <ExclamationCircleOutlined />,\n                //     content: 'You can only view report within a 3 month span. Do you want to download the report before 3 months?',\n                //     okText: 'Download Report',\n                //     cancelText: 'cancel',\n                //     onOk() {\n                //         downloadReport()\n                //     },\n                // });\n            }\n            else {\n\n                //setSelectedDate({ from: startDate, to: endDate })\n                //dispatch(FETCH_ADMIN_DETAILED_REPORT({ fromDate: startDate, toDate: endDate, offset: pagination, context: \"Date Change\" }))\n                //downloadReport(startDate, endDate)\n            }\n\n\n\n        }\n\n\n    }\n\n\n\n\n\n    return (\n        <div className='appontment-history-container'>\n\n            <div className=\"header\">\n\n\n                {/* &nbsp; */}\n\n                {/* <Tooltip placement=\"topLeft\" title={\"For more than past 3 months report please use Download Report button.\"}>\n                    <div className=\"filter-button\" >\n                        <div className=\"icon\" onClick={filterOnClick}><i class=\"far fa-calendar-alt\"></i></div>\n                        <RangePicker open={isOpen}\n                            ref={dateRef}\n                            bordered={false}\n                            className=\"date-picker\"\n                            suffixIcon={null}\n                            onChange={handledateChange}\n\n                        />\n                    </div>\n                </Tooltip> */}\n                <div>&nbsp;</div>\n\n                <div className=\"filter-button\" >\n\n                    <div className=\"icon\"><i class=\"far fa-calendar-alt\"></i></div>\n\n\n                    <RangePicker\n                        // open={isOpen}\n                        bordered={false}\n                        className=\"date-picker\"\n                        suffixIcon={null}\n                        // disabledDate={(current) => {\n                        //     return moment().add(-3, 'month') >= current\n                        //     // ||\n                        //     //  moment().add(1, 'month')  <= current;\n                        // }}\n                        onChange={handledateChange}\n                    />\n                </div>\n\n            </div>\n\n            <div className=\"todays_report_table_container\">\n\n                <table className='appoinment-table consolidated-table'>\n                    <tr>\n                        <th>Month - Year</th>\n                        <th>Number of Appointments</th>\n                        <th>International</th>\n                        <th>Domestic</th>\n                        <th>Number of Doctors</th>\n                        <th>Hospital Gross Fees</th>\n                        <th>Tax</th>\n                        <th>Hospital Nett Fees</th>\n\n                        <th>Comments</th>\n                        <th>Attachments</th>\n\n\n                    </tr>\n\n                    <tbody>\n\n                        {\n                            appointmentDetails ?\n                                appointmentDetails.length > 0 ?\n\n                                    appointmentDetails.map((element, key) => {\n\n\n\n                                        if (key <= 8) {\n\n                                            return (\n\n                                                <tr key={key}>\n                                                    <td>{element[\"Month-Year\"]}</td>\n                                                    <td>{element.Number_Of_appointments}</td>\n                                                    <td>{element.International}</td>\n                                                    <td>{element.Domestic}</td>\n                                                    <td>{element.Number_Of_doctors}</td>\n                                                    <td>{element.Hospital_Gross_Fees}</td>\n                                                    <td>{element.TDS}</td>\n                                                    <td>{element.Hospital_Net_Fees}</td>\n                                                    <td><textArea onBlur={(e) => { handleCommentChange(element.recordId, e) }} rows={1} >{element.Adjustments}</textArea></td>\n                                                    <td>\n                                                        <ul className='consolidated-table-report'>\n\n                                                            {\n                                                                element.uploadedFile.split(',').length > 0 ?\n\n                                                                    element.uploadedFile.split(',').map((file, key) => {\n\n                                                                        if (file && file !== \"null\") {\n                                                                            return (\n\n                                                                                <>\n                                                                                    <li>Rpt{key + 1}</li>\n                                                                                    {key + 1 == element.uploadedFile.split(',').lenhth ? \"\" : <li>|</li>}\n                                                                                </>\n\n                                                                            )\n\n                                                                        }\n\n                                                                    })\n\n\n                                                                    : null\n                                                            }\n\n\n\n\n                                                            <label className=\"add-report\" htmlFor={element.recordId}>\n                                                                <AddIconV2 />\n                                                                &nbsp;Add new\n                                                                <input onChange={(e) => { handleFileOnChnage(element.recordId, e) }} id={element.recordId} style={{ display: \"none\" }} type=\"file\" name=\"\" />\n                                                            </label>\n                                                        </ul>\n                                                    </td>\n\n\n                                                </tr>\n\n                                            )\n\n                                        }\n\n\n\n                                    })\n\n                                    : <tr>\n                                        <td colSpan={12}>\n                                            <EmptyTableData />\n                                        </td>\n                                    </tr>\n                                : null\n                        }\n\n\n\n\n\n                    </tbody>\n                </table>\n\n            </div>\n            <div className=\"pagination-container-mis-report\">\n\n                &nbsp;\n                <Pagination onChange={handlePaginationChange} defaultCurrent={1} total={consolidatedreportTotalPages ? consolidatedreportTotalPages * 8 : 0} />\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default ConsolidatedReport","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { INTERBRANCH_MODAL } from '../../actions/type';\r\nimport './custommodal.css'\r\n\r\nfunction CustomeModal({ state, modalName,component,position, isRight,setModal }) {\r\n\r\n \r\n    let dispatch=useDispatch()\r\n\r\n    let handleClose = () => {\r\n\r\n        // console.log(modalName);\r\n\r\n        dispatch({\r\n            type: INTERBRANCH_MODAL,\r\n            payload: {\r\n                name: modalName,\r\n                value: false\r\n            }\r\n        });\r\n\r\n        if(setModal)\r\n        {\r\n            setModal(false)\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n               isRight?\r\n\r\n               state ?\r\n               <div className= {`custome-modal-container ${position}`}>\r\n\r\n                   <div className=\"clickable\" onClick={handleClose}>\r\n                       &nbsp;\r\n                   </div>\r\n\r\n                   <div className={`menu-container`}>\r\n                      {component}\r\n                   </div>\r\n\r\n               </div> : null\r\n\r\n               :\r\n\r\n               state ?\r\n               <div className= {`custome-modal-container-center`}>\r\n\r\n                 \r\n                   <div className={`menu-container`}>\r\n                      {component}\r\n                   </div>\r\n\r\n               </div> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomeModal\r\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction MisReportModalContent() {\n\n  \n\n    let appointmentDetails=useSelector(state=>state.interbranchAdmin.detaiedSelected)\n\n    let openFile = () => {\n        window.open(\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\", \"_blank\")\n    }\n\n    console.log(appointmentDetails);\n\n    return (\n        <div className='today-report-modal-content'>\n            <div className=\"header\">Appointment ID - {appointmentDetails?.appointmentid}</div>\n\n            <div className=\"todays-report-timeline\">\n\n                <table className='todays_report_table'>\n\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Appointment Details</td>\n\n                        </tr>\n\n                        <tr>\n\n                            <td className='cell1 odd'>Appointment ID</td>\n\n                            <td className='cell3 odd'>{appointmentDetails?.appointmentid}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Appointment Date</td>\n\n                            <td className='cell3 even'>{appointmentDetails?.appointmentdate}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Appointment Time</td>\n\n                            <td className='cell3 odd'>{appointmentDetails?.appointmenttime}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Booked from</td>\n\n                            <td className='cell3 even'>{appointmentDetails?.bookedfrom}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 odd'>Status</td>\n\n                            <td className='cell3 odd'>{appointmentDetails?.consultationstatus}</td>\n                        </tr>\n\n\n\n                    </tbody>\n\n   \n\n\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Patient Details</td>\n\n                        </tr>\n\n                        <tr>\n\n                            <td className='cell1 even'>Name</td>\n                            <td className='cell3 even'>{appointmentDetails?.patientname}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>New/Existing</td>\n                            <td className='cell3 odd'>{appointmentDetails?.NewOrExisting}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Visit Count</td>\n                            <td className='cell3 even'>{appointmentDetails?.Visit_Count}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>MRN Number</td>\n                            <td className='cell3 odd'>{appointmentDetails?.MRNnumber}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Location</td>\n                            <td className='cell3 even'>{appointmentDetails?.Location}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Email ID</td>\n                            <td className='cell3 odd'>{appointmentDetails?.PatientEmail}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Phone Number</td>\n                            <td className='cell3 even'>{appointmentDetails?.PatientPhonenumber}</td>\n                        </tr>\n\n                    </tbody>\n\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Doctor Details</td>\n\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Doctor ID</td>\n                            <td className='cell3 odd'>{appointmentDetails?.doctor_id}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Name</td>\n                            <td className='cell3 even'>{appointmentDetails?.doctor_name}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Specialty</td>\n                            <td className='cell3 odd'>{appointmentDetails?.doctor_speciality}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Hospital Name</td>\n                            <td className='cell3 even'>{appointmentDetails?.hospital_name}</td>\n                        </tr>\n\n\n\n\n\n                    </tbody>\n                    <tbody>\n\n                        <tr>\n                            <td className='title' colSpan={2}>Fees Calculation</td>\n                        </tr>\n\n                        <tr>\n                           \n                            <td className='cell1 odd'>Status</td>\n                            <td className='cell3 odd'>{appointmentDetails?.Fees_status}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Payment ID</td>\n                            <td className='cell3 even'>{appointmentDetails?.payment_id}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Refund ID</td>\n                            <td className='cell3 odd'>{appointmentDetails?.refund_id}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 even'>Received from Patient</td>\n                            <td className='cell3 even'>{appointmentDetails?.patient_fee_received}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Payment Mode</td>\n                            <td className='cell3 odd'>{appointmentDetails?.payment_mode}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Payment Channel</td>\n                            <td className='cell3 even'>{appointmentDetails?.Payment_Channel}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Invoice file</td>\n                            <td className='cell3 odd'><span className='file_open_link' onClick={() => { openFile() }}> {appointmentDetails?.Invoice_File}</span></td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Doctor Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.doctor_fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Discounts</td>\n                            <td className='cell3 odd'>{appointmentDetails?.Discounts}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>C2MD Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.c2md_fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>GST on C2MD Fees</td>\n                            <td className='cell3 odd'>{appointmentDetails?.GST_on_C2MD_Fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>PG Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.PG_Fees}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Refund Amount</td>\n                            <td className='cell3 odd'>{appointmentDetails?.Refund_Amount}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 even'>PG Refund Fees</td>\n                            <td className='cell3 even'>{appointmentDetails?.PG_Refund_Fees}</td>\n                        </tr>\n\n\n                        <tr>\n                            <td className='cell1 odd'>GST on Refund Fees</td>\n                            <td className='cell3 odd'>{appointmentDetails?.PG_Refund_GST}</td>\n                        </tr>\n\n\n\n                    </tbody>\n\n\n\n                    <tbody>\n\n                    <tr>\n                            <td className='title' colSpan={2}>Pay Out</td>\n                           \n                        </tr>\n\n                        <tr>\n                           \n                            <td className='cell1 even'>Gross Amount</td>\n                            <td className='cell3 even'>{appointmentDetails?.Gross_Amount}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 odd'>Tax</td>\n                            <td className='cell3 odd'>{appointmentDetails?.TAX}</td>\n                        </tr>\n\n                        <tr>\n                            <td className='cell1 even'>Net Amount Payable</td>\n                            <td className='cell3 even'>{appointmentDetails?.nett_amount_payable}</td>\n                        </tr>\n\n\n                    </tbody>\n\n\n                </table>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default MisReportModalContent\n\n\n","import { Pagination, Tooltip } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DatePicker, Space } from 'antd';\r\nimport './todaysreport.css'\r\n// import { FETCH_MIS_REPORT, GET_DASHBOARD_MORE } from '../../Redux/Slice/DetailedReportSlice';\r\nimport { INTERBRANCH_ADMIN_DASHBOARD_SELECTED, INTERBRANCH_MODAL } from '../../actions/type';\r\nimport { FETCH_ADMIN_DASHBOARD_REPORT, FETCH_DASHBOARD_MORE } from '../../actions/InterbranchAdminActions';\r\nimport { separaetdateAndTime } from '../../Helpers/dateFunctions';\r\nimport { getFromLocalStorage } from '../../Helpers/localStorageHelper';\r\nimport { CLINIC_ADMIN_USER, USER_DATA, USER_TYPE } from '../../constants/const';\r\nimport EmptyTableData from '../Common/EmptyTableData/EmptyTableData';\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction TodaysReport() {\r\n\r\n    const dispatch = useDispatch()\r\n    const dateRef = useRef(null)\r\n\r\n    let dashboardData = useSelector(state => state.interbranchAdmin.dashboardTable)\r\n\r\n\r\n    let [isOpen, setOpen] = useState(false)\r\n    let [pagination, setPagination] = useState(1)\r\n    let [userType, setUserType] = useState(JSON.parse(localStorage.getItem(USER_DATA))?.userType)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setPagination(10)\r\n\r\n    }, [dashboardData])\r\n\r\n\r\n\r\n    let handleTableClick = (data) => {\r\n\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: INTERBRANCH_ADMIN_DASHBOARD_SELECTED,\r\n            payload: data\r\n        });\r\n\r\n        // dispatch(FETCH_DASHBOARD_MORE(_id))\r\n\r\n        dispatch({\r\n            type: INTERBRANCH_MODAL,\r\n            payload: {\r\n                name: \"todaysReportModal\",\r\n                value: true\r\n            }\r\n        });\r\n\r\n        // dispatch(setModalRedux({\r\n        //     name: \"todaysReportModal\",\r\n        //     value: true\r\n        // }))\r\n\r\n    }\r\n\r\n\r\n    let filterOnClick = () => {\r\n\r\n        // dateRef.current.focus();\r\n\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n\r\n\r\n    let handledateChange = () => {\r\n\r\n        setOpen(!isOpen)\r\n\r\n    }\r\n\r\n    let handlePaginationChange = (e, s) => {\r\n\r\n        // console.log(e,s);\r\n        // dispatch(FETCH_ADMIN_DASHBOARD_REPORT({offset:e-1}))\r\n\r\n        // if (pagination < dashboardData.length) {\r\n        //     setPagination(pagination + 10)\r\n        // }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='appontment-history-container'>\r\n\r\n            <div className=\"header\">\r\n\r\n\r\n                {/* &nbsp; */}\r\n\r\n                {/* <Tooltip placement=\"topLeft\" title={\"For more than past 3 months report please use Download Report button.\"}>\r\n                    <div className=\"filter-button\" >\r\n                        <div className=\"icon\" onClick={filterOnClick}><i class=\"far fa-calendar-alt\"></i></div>\r\n                        <RangePicker open={isOpen}\r\n                            ref={dateRef}\r\n                            bordered={false}\r\n                            className=\"date-picker\"\r\n                            suffixIcon={null}\r\n                            onChange={handledateChange}\r\n\r\n                        />\r\n                    </div>\r\n                </Tooltip> */}\r\n\r\n\r\n                <div>&nbsp;</div>\r\n\r\n                <button >\r\n\r\n                    {/* <div className=\"icon\">\r\n                        <i class=\"far fa-download\"></i>\r\n                    </div> */}\r\n\r\n                    Today's Report\r\n                </button>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"todays_report_table_container\">\r\n\r\n                <table className='appoinment-table'>\r\n\r\n\r\n                    {\r\n                        userType == CLINIC_ADMIN_USER ?\r\n\r\n                            // CLINIC ADMIN TABLE........................................................\r\n                            <>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Appointment ID</th>\r\n                                        <th>Doctor Name</th>\r\n                                        <th>Patient Name</th>\r\n                                        <th>Appointment Date & Time</th>\r\n                                        <th>Appointment Duration</th>\r\n                                        <th>Appointment fees</th>\r\n                                        <th>Payment Id</th>\r\n                                        <th>Hospital Id</th>\r\n                                        <th>Appointment Status</th>\r\n                                        <th className=''>{`Doctor Consultation \\n Screen status`}</th>\r\n                                        <th>{`Patient Consultation \\n Screen status`}</th>\r\n                                        <th>Follow up Details</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        dashboardData ?\r\n                                            dashboardData.length > 0 ?\r\n\r\n                                                dashboardData.map((eachRow, key) => {\r\n\r\n                                                    if ( eachRow.appointmentId) {\r\n                                                        return (\r\n\r\n                                                            <tr>\r\n                                                                <td>{eachRow.appointmentId}</td>\r\n                                                                <td>{eachRow.doctorname}</td>\r\n                                                                <td>{eachRow.patientname}</td>\r\n                                                                <td>{eachRow.doctorappointmentdate} ({eachRow.timezone})</td>\r\n                                                                <td>{eachRow.duration} Minutes</td>\r\n                                                                <td>{eachRow.fees}</td>\r\n                                                                <td>{eachRow.paymentId}</td>\r\n                                                                <td>{eachRow.Hospitalid}</td>\r\n                                                                <td>{eachRow.appointmentStatus}</td>\r\n                                                                <td>{eachRow.doctorstatus}</td>\r\n                                                                <td>{eachRow.patientstatus}</td>\r\n                                                                <td>{eachRow.followupdetails}</td>\r\n                                                                <td ><button onClick={() => { handleTableClick(eachRow) }} className='more-btn' >More</button></td>\r\n\r\n                                                            </tr>\r\n\r\n                                                        )\r\n\r\n                                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                                })\r\n\r\n                                                : <tr>\r\n                                                    <td colSpan={13}>\r\n                                                        <EmptyTableData />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            : null\r\n                                    }\r\n\r\n\r\n                                </tbody>\r\n                            </>\r\n                            :\r\n                            // SUPER ADMIN TABLE........................................................\r\n                            <>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Appointment ID</th>\r\n                                        <th>Appoinment Date</th>\r\n                                        <th>Appointment Time</th>\r\n                                        <th>Patient Name</th>\r\n                                        <th>Doctor Name</th>\r\n\r\n                                        <th>Fees Paid</th>\r\n                                        <th>Consultation Status</th>\r\n                                        <th>Next Steps</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        dashboardData ?\r\n                                            dashboardData.length > 0 ?\r\n\r\n                                                dashboardData.map((eachRow, key) => {\r\n\r\n                                                    if (key <= 10 && eachRow.appointmentId) {\r\n                                                        return (\r\n\r\n                                                            <tr>\r\n                                                                <td>{eachRow.appointmentId}</td>\r\n                                                                <td>{separaetdateAndTime(eachRow.appointmentdate)?.date}</td>\r\n                                                                <td>{separaetdateAndTime(eachRow.appointmentdate)?.time} (GMT+05:30)</td>\r\n                                                                <td>{eachRow.patientname}</td>\r\n                                                                <td>{eachRow.doctorname}</td>\r\n                                                                <td>{eachRow.fees}</td>\r\n                                                                <td>{eachRow.appointmentStatus}</td>\r\n                                                                <td>{eachRow.followupdetails}</td>\r\n                                                                <td ><button onClick={() => { handleTableClick(eachRow) }} className='more-btn' >More</button></td>\r\n\r\n                                                            </tr>\r\n\r\n                                                        )\r\n\r\n                                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                                })\r\n\r\n                                                : <tr>\r\n                                                <td colSpan={9}>\r\n                                                    <EmptyTableData />\r\n                                                </td>\r\n                                            </tr>\r\n                                            : null\r\n                                    }\r\n\r\n\r\n                                </tbody>\r\n                            </>\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </table>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"pagination-container-mis-report\">\r\n\r\n                &nbsp;\r\n                {/* <Pagination onChange={handlePaginationChange} defaultCurrent={1} total={ dashboardData?dashboardData*8:0}/> */}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodaysReport\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './index.css'\r\n\r\nfunction TodaysReportModalContent() {\r\n\r\n\r\n    let appointmentDetails=useSelector(state=>state.interbranchAdmin.dashboardSelected)\r\n\r\n    console.log(appointmentDetails);\r\n\r\n\r\n    return (\r\n        <div className='today-report-modal-content'>\r\n            <div className=\"header\">Appointment ID - {appointmentDetails?.appointmentId}</div>\r\n\r\n            <div className=\"todays-report-timeline\">\r\n\r\n                <table className='todays_report_table'>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Appointment Details</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Appointment ID</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.appointmentId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Appointment Date</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.appointmentdate}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Appointment Time*</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.appointmenttime}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Booked from*</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.bookedfrom}</td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Consultation Status</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Status*</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.consultationstatus}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Session ID (TokBox)</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.sessionId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Patient Availability and On Screen Status</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.PatientScreenStatus}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Doctor Availability and On Screen Status</td>\r\n\r\n                            <td className='cell3 even'>{appointmentDetails?.DoctorScreenStatus}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Appointment Duration</td>\r\n\r\n                            <td className='cell3 odd'>{appointmentDetails?.duration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Notifications Details</td>\r\n\r\n                        </tr>\r\n\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Patient*</td>\r\n\r\n                            <td className='cell3 odd'>\r\n\r\n                                Email sent date: {appointmentDetails?.Patient_Email_sent_Date}<br />\r\n                                Email sent time: {appointmentDetails?.Patient_Email_sent_Time} <br />\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Doctor*</td>\r\n\r\n                            <td className='cell3 even'>\r\n                                Email sent date: {appointmentDetails?.Doctor_Email_sent_Date} <br />\r\n                                Email sent time: {appointmentDetails?.Doctor_Email_sent_Time} <br />\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Patient Details</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Name</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.patientname}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>New/Existing*</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.NewOrExisting}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>MRN Number*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.MRNnumber}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Location*</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.Location}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Email ID*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.PatientEmail}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Phone Number*</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.PatientPhonenumber}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Timezone*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.PatientTimeZone}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Booked By (For Loved One)</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.bookedby}</td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={6}>Doctor Details</td>\r\n\r\n                        </tr>\r\n\r\n                        <tr>\r\n\r\n                            <td className='cell1 odd'>Doctor ID</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.doctorId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Name</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.doctorname}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Specialty*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.doctor_speciality}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Hospital Name</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.Hospital}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Email ID*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.DoctorEmail}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Phone Number*</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.DoctorMobile}</td>\r\n                        </tr>\r\n\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <td className='title' colSpan={2}>Fees Calculation</td>\r\n                           \r\n                        </tr>\r\n\r\n                        <tr>\r\n                         \r\n                            <td className='cell1 odd'>Status*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.Fees_status}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Payment ID</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.paymentId}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Refund ID</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.refundid}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 even'>Fees Paid*</td>\r\n                            <td className='cell3 even'>{appointmentDetails?.patient_fee_received}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td className='cell1 odd'>Payment Mode*</td>\r\n                            <td className='cell3 odd'>{appointmentDetails?.payment_mode}</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodaysReportModalContent\r\n"],"names":["separaetdateAndTime","date_string","arr","split","date","time","convertDateToString","_date","moment","format","convertDateToStringThreeMonthBack","subtract","convertDateToStringOneYear","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","FETCH_ADMIN_DASHBOARD_REPORT","_para","dispatch","getFromLocalStorage","USER_DATA","userData","userType","clinicId","todayDate","Date","ADMIN_USER","params","loginedApi","headers","responce","console","log","data","status","type","INTERBRANCH_ADMIN_DASHBOARD","payload","totalPages","totalNumberOfPages","CLINIC_ADMIN_USER","FETCH_ADMIN_DETAILED_REPORT","fromDate","toDate","offset","toString","clinic","INTERBRANCH_ADMIN_DETAILED","FETCH_DETAILED_MORE","_id","c2mdApi","INTERBRANCH_ADMIN_DETAILED_SELECTED","FETCH_CONSOLIDATED_REPORTS","endDate","INTERBRANCH_ADMIN_CONSOLIDATED","updateMisReportComment","value","info","updateMisReportAttachments","updateConsolodatedReportComment","downloadSummaryReport","filename","text","varient","useState","style","setStyle","useEffect","className","isLoading","marginTop","height","width","PuffLoader","color","loading","size","RangePicker","DatePicker","from","to","selectedDate","setSelectedDate","pagination","setPagination","appointmentDetails","useSelector","state","interbranchAdmin","consolidatedreport","consolidatedreportTotalPages","useDispatch","class","bordered","suffixIcon","onChange","e","startDate","prevDate","context","length","map","element","key","Number_Of_appointments","International","Domestic","Number_Of_doctors","Hospital_Gross_Fees","TDS","Hospital_Net_Fees","onBlur","para_appointment_id","target","then","res","handleCommentChange","recordId","rows","Adjustments","uploadedFile","file","lenhth","htmlFor","dummy_file","files","name","handleFileOnChnage","id","display","colSpan","EmptyTableData","defaultCurrent","total","modalName","component","position","isRight","setModal","onClick","INTERBRANCH_MODAL","detaiedSelected","appointmentid","appointmentdate","appointmenttime","bookedfrom","consultationstatus","patientname","NewOrExisting","Visit_Count","MRNnumber","Location","PatientEmail","PatientPhonenumber","doctor_id","doctor_name","doctor_speciality","hospital_name","Fees_status","payment_id","refund_id","patient_fee_received","payment_mode","Payment_Channel","window","open","Invoice_File","doctor_fees","Discounts","c2md_fees","GST_on_C2MD_Fees","PG_Fees","Refund_Amount","PG_Refund_Fees","PG_Refund_GST","Gross_Amount","TAX","nett_amount_payable","dashboardData","useRef","dashboardTable","handleTableClick","INTERBRANCH_ADMIN_DASHBOARD_SELECTED","eachRow","appointmentId","doctorname","doctorappointmentdate","timezone","duration","fees","paymentId","Hospitalid","appointmentStatus","doctorstatus","patientstatus","followupdetails","dashboardSelected","sessionId","PatientScreenStatus","DoctorScreenStatus","Patient_Email_sent_Date","Patient_Email_sent_Time","Doctor_Email_sent_Date","Doctor_Email_sent_Time","PatientTimeZone","bookedby","doctorId","Hospital","DoctorEmail","DoctorMobile","refundid"],"sourceRoot":""}