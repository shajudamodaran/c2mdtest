{"version":3,"file":"static/js/1084.45e58c7f.chunk.js","mappings":"+NACA,EAAmC,8CAAnC,EAA8G,wD,uDCMxGA,EAASC,EAAAA,MAAW,kBAAM,wHAC1BC,EAAkBD,EAAAA,MAAW,kBACjC,oGAEIE,EAASF,EAAAA,MAAW,kBACxB,mCAgGF,MA7FA,YAA0G,IAA3EG,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,mBAC1DC,GAD+F,EAAjBC,eACpEC,EAAAA,EAAAA,KAAVF,OACR,GAAoCG,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,iBAC/CG,GAAsBC,EAAAA,EAAAA,UAItBC,IAFWC,EAAAA,EAAAA,MAEO,mCAAG,4FAI2BH,EAAoBI,QAA9DC,EAJe,EAIfA,UAAWC,EAJI,EAIJA,aAAcC,EAJV,EAIUA,aAE7BF,EAAYE,IAAiBD,IAG1BpB,GAA0C,OAApBA,IAEzBsB,QAAQC,IAAI,kBAYTxB,GAEDA,EAAcD,EAAa,MAzBV,2CAAH,sDA4CtB,OACE,iBAAK0B,UAAWC,EAAkCC,IAAKZ,EAAqBa,SAAU,WAAQX,KAAwBY,MAAO,CAAEC,OAAQ,QAASC,SAAU,QAA1J,UACG7B,GAAS,KACR,SAACN,EAAD,CACEU,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjBG,cAAeA,KAGjB,SAAClB,EAAD,CACEY,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjBG,cAAe,MAGnB,gBAAKa,UAAWC,EAAhB,SACGxB,GAAS,IACNJ,EACAH,EAAAA,aAAmBG,EAAU,CAC7BQ,WAAAA,EACAC,cAAAA,EACAC,aAAAA,EACAC,gBAAAA,OAG2C,GAAhDC,EAASsB,SAASC,OAAO,oBAA4B/B,GAAS,KAC7D,SAACL,EAAD,IACE,MAC6C,GAAhDa,EAASsB,SAASC,OAAO,oBAA4B/B,EAAQ,KAC5D,SAAC,IAAD,IACE,U,mGCzEV,UA1BA,WAEE,OAAkCG,EAAAA,EAAAA,UAAS,GAA3C,eAAKN,EAAL,KAAiBC,EAAjB,KAEMkC,GAAeC,EAAAA,EAAAA,MAAfD,WAEN,GAA4C7B,EAAAA,EAAAA,UAC1C6B,GAA0B,IAD5B,eAAOjC,EAAP,KAA2BE,EAA3B,KAKA,OACE,SAAC,IAAD,CACEJ,WAAYA,EACZC,cAAeA,EACfC,mBAAoBA,EACpBE,cAAeA,EAJjB,UAKE,SAAC,IAAD,CACEJ,WAAYA,EACZC,cAAeA,EACfC,mBAAoBA,EACpBE,cAAeA","sources":["webpack://connect2mydoctor/./src/components/Layout/DoctorListingLayout/DoctorListingLayout.module.scss?ab1c","components/Layout/DoctorListingLayout/index.js","pages/DoctorListing.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"LoginLayout_body\":\"DoctorListingLayout_LoginLayout_body__xk5wt\",\"DoctorlistingLayout_scroll\":\"DoctorListingLayout_DoctorlistingLayout_scroll__WAduY\"};","import React, { lazy, useEffect, useRef, useState } from \"react\";\nimport MobileFooter from \"../../FooterMobileScreen\";\nimport Style from \"./DoctorListingLayout.module.scss\";\nimport { useDimensions } from \"../../../logic/Dimensions\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetch_doctors } from \"../../../actions/DoctorListingAction\";\nconst Header = React.lazy(() => import(\"../../Header\"));\nconst MicrositeHeader = React.lazy(() =>\n  import(\"../../MicrositeLayout/MicrositeHeader\")\n);\nconst Footer = React.lazy(() =>\n  import(\"../../MicrositeLayout/MicrositeFooter\")\n);\n\nfunction DoctorlistingLayout({ children, pagination, setPagination, selectedSpeciality, setSpeciality }) {\n  const { width } = useDimensions();\n  const [showFilter, setShowFilter] = useState(false);\n  const [searchDoctor, setSearchDoctor] = useState(\"\");\n  const location = useLocation();\n  const clientDetails = useSelector((state) => state.clientDetails);\n  let doctorListingScroll = useRef()\n\n  let dispatch = useDispatch()\n\n  let onScrollDoctorList = async () => {\n\n\n\n    const { scrollTop, scrollHeight, clientHeight } = doctorListingScroll.current;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n\n\n      if (!selectedSpeciality || selectedSpeciality==\"ALL\") {\n        // TO SOMETHING HERE\n        console.log('Reached bottom')\n\n        // if (FilterItem.length % 4 == 0) {\n\n        // await setLoader(true);\n        // await dispatch(\n        //   fetch_doctors(\n        //     selectedSpeciality,\n        //     clientDetails ? clientDetails.clinicurl : \"\",\n        //     pagination + 10\n        //   )\n        // );\n        if(setPagination)\n        {\n          setPagination(pagination + 10)\n        }\n       \n        // await setLoader(false);\n\n\n        // }\n\n      }\n\n\n\n\n    }\n\n  }\n\n\n\n  return (\n    <div className={Style.DoctorlistingLayout_scroll} ref={doctorListingScroll} onScroll={() => { onScrollDoctorList() }} style={{ height: \"100vh\", overflow: \"auto\" }}>\n      {width >= 992 ? (\n        <MicrositeHeader\n          showFilter={showFilter}\n          setShowFilter={setShowFilter}\n          searchDoctor={searchDoctor}\n          setSearchDoctor={setSearchDoctor}\n          clientDetails={clientDetails}\n        />\n      ) : (\n        <Header\n          showFilter={showFilter}\n          setShowFilter={setShowFilter}\n          searchDoctor={searchDoctor}\n          setSearchDoctor={setSearchDoctor}\n          clientDetails={\"\"}\n        />\n      )}\n      <div className={Style.LoginLayout_body}>\n        {width >= 992\n          ? children\n          : React.cloneElement(children, {\n            showFilter,\n            setShowFilter,\n            searchDoctor,\n            setSearchDoctor,\n          })}\n      </div>\n      {location.pathname.search(\"bookAppointment\") == -1 && width >= 992 ? (\n        <Footer />\n      ) : null}\n      {location.pathname.search(\"bookAppointment\") == -1 && width < 992 ? (\n        <MobileFooter />\n      ) : null}\n    </div>\n  );\n}\n\nexport default DoctorlistingLayout;\n","import React, { useState } from \"react\";\nimport DoctorlistingLayout from \"../components/Layout/DoctorListingLayout\";\nimport DoctorListing from \"../components/DoctorListing\";\nimport { useParams } from \"react-router-dom\";\nfunction DoctorListingPage() {\n\n  let [pagination, setPagination] = useState(0)\n\n  let { speciality } = useParams();\n\n  const [selectedSpeciality, setSpeciality] = useState(\n    speciality ? speciality : \"\"\n  );\n// Doctor listing\n\n  return (\n    <DoctorlistingLayout\n      pagination={pagination}\n      setPagination={setPagination}\n      selectedSpeciality={selectedSpeciality}\n      setSpeciality={setSpeciality} >\n      <DoctorListing\n        pagination={pagination}\n        setPagination={setPagination}\n        selectedSpeciality={selectedSpeciality}\n        setSpeciality={setSpeciality} />\n    </DoctorlistingLayout>\n  );\n}\n\nexport default DoctorListingPage;\n"],"names":["Header","React","MicrositeHeader","Footer","children","pagination","setPagination","selectedSpeciality","width","setSpeciality","useDimensions","useState","showFilter","setShowFilter","searchDoctor","setSearchDoctor","location","useLocation","clientDetails","useSelector","state","doctorListingScroll","useRef","onScrollDoctorList","useDispatch","current","scrollTop","scrollHeight","clientHeight","console","log","className","Style","ref","onScroll","style","height","overflow","pathname","search","speciality","useParams"],"sourceRoot":""}