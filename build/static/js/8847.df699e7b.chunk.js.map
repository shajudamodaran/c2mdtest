{"version":3,"file":"static/js/8847.df699e7b.chunk.js","mappings":"0KASe,SAASA,EAAeC,GACrC,IAAIC,ECFS,SAAuBC,GACpC,IAAIC,GAAWC,EAAAA,EAAAA,QAAOF,GAEtB,OADAC,EAASE,QAAUH,EACZC,EDDSG,CAAcN,IAC9BO,EAAAA,EAAAA,YAAU,WACR,OAAO,WACL,OAAON,EAAUI,aAElB,M,gFERU,SAASG,EAAcC,QACxB,IAARA,IACFA,GAAMC,EAAAA,EAAAA,MAKR,IACE,IAAIC,EAASF,EAAID,cAGjB,OAAKG,GAAWA,EAAOC,SAChBD,EADiC,KAExC,MAAOE,GAEP,OAAOJ,EAAIK,M,6HClBFC,EAAsB,SAACC,EAAKC,GACvC,IAAIC,EAEJ,OAAKC,EAAAA,EACM,MAAPH,GAAqBC,IAAYP,EAAAA,EAAAA,MAAiBI,MACnC,oBAARE,IAAoBA,EAAMA,KACjCA,GAAO,YAAaA,IAAKA,EAAMA,EAAIX,SACnB,OAAfa,EAAOF,IAAgBE,EAAKE,UAAiBJ,GAC3C,MALgB,M,ICerBK,E,WAtBEC,EAAY,CAAC,OAAQ,OAAQ,YAAa,QAAS,WAAY,WAAY,WAAY,kBAAmB,kBAAmB,aAAc,qBAAsB,YAAa,eAAgB,eAAgB,sBAAuB,eAAgB,iBAAkB,UAAW,YAAa,SAAU,SAAU,SAAU,WAAY,YAAa,UAAW,aAAc,aA+BrX,SAASC,EAAgBC,GACvB,IAAMC,GAASC,EAAAA,EAAAA,KACTC,EAAeH,GATvB,SAAoBC,GAIlB,OAHKJ,IAASA,EAAU,IAAIO,EAAAA,EAAa,CACvClB,cAAyB,MAAVe,OAAiB,EAASA,EAAOR,YAE3CI,EAK0BQ,CAAWJ,GACtCK,GAAQ1B,EAAAA,EAAAA,QAAO,CACnB2B,OAAQ,KACRC,SAAU,OAEZ,OAAOC,OAAOC,OAAOJ,EAAMzB,QAAS,CAClC8B,IAAK,kBAAMR,EAAaQ,IAAIL,EAAMzB,UAClC+B,OAAQ,kBAAMT,EAAaS,OAAON,EAAMzB,UACxCgC,WAAY,kBAAMV,EAAaU,WAAWP,EAAMzB,UAChDiC,cAAcC,EAAAA,EAAAA,cAAY,SAAAvB,GACxBc,EAAMzB,QAAQ0B,OAASf,IACtB,IACHwB,gBAAgBD,EAAAA,EAAAA,cAAY,SAAAvB,GAC1Bc,EAAMzB,QAAQ2B,SAAWhB,IACxB,MAIP,IAAMyB,GAAqBC,EAAAA,EAAAA,aAAW,SAACxB,EAAMF,GAC3C,MA4BIE,EA3BFyB,KAAAA,OADF,WA4BIzB,EA1BF0B,KAAAA,OAFF,MAES,SAFT,EAGEC,EAyBE3B,EAzBF2B,UACAC,EAwBE5B,EAxBF4B,MACAC,EAuBE7B,EAvBF6B,SALF,EA4BI7B,EAtBFc,SAAAA,OANF,WA4BId,EArBF8B,SAAAA,OAPF,SAQEC,EAoBE/B,EApBF+B,gBACAC,EAmBEhC,EAnBFgC,gBACAC,EAkBEjC,EAlBFiC,WACAC,EAiBElC,EAjBFkC,mBAXF,EA4BIlC,EAhBFmC,UAAAA,OAZF,WA4BInC,EAfFoC,aAAAA,OAbF,WA4BIpC,EAdFqC,aAAAA,OAdF,SAeEC,EAaEtC,EAbFsC,oBACAC,EAYEvC,EAZFuC,aAhBF,EA4BIvC,EAXFwC,eAAAA,OAjBF,MAiBmB,SAAAC,GAAK,OAAiBC,EAAAA,EAAAA,KAAK,MAAO3B,OAAOC,OAAO,GAAIyB,KAjBvE,EAkBWE,EAUP3C,EAVFG,QACWyC,EAST5C,EATF6C,UACAC,EAQE9C,EARF8C,OApBF,EA4BI9C,EAPF+C,OAAAA,OArBF,MAqBW,aArBX,EAsBEC,EAMEhD,EANFgD,OACAC,EAKEjD,EALFiD,SACAC,EAIElD,EAJFkD,UACAC,EAGEnD,EAHFmD,QACAC,EAEEpD,EAFFoD,WACAC,EACErD,EADFqD,UAEEC,GA/EN,SAAuCC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,GAAI,IAA2DE,EAAKC,EAA5DC,EAAS,GAAQC,EAAa7C,OAAO8C,KAAKN,GAAqB,IAAKG,EAAI,EAAGA,EAAIE,EAAWE,OAAQJ,IAAOD,EAAMG,EAAWF,GAAQF,EAASO,QAAQN,IAAQ,IAAaE,EAAOF,GAAOF,EAAOE,IAAQ,OAAOE,EA+E7RK,CAA8BhE,EAAMI,GAEzCyC,GDrEO,SAA0B/C,EAAKmE,GAC5C,IAAM1D,GAASC,EAAAA,EAAAA,KACf,GAA8B0D,EAAAA,EAAAA,WAAS,kBAAMrE,EAAoBC,EAAe,MAAVS,OAAiB,EAASA,EAAOR,aAAvG,eAAOoE,EAAP,KAAoBC,EAApB,KAEA,IAAKD,EAAa,CAChB,IAAME,EAAWxE,EAAoBC,GACjCuE,GAAUD,EAAOC,GAevB,OAZAhF,EAAAA,EAAAA,YAAU,WACJ4E,GAAcE,GAChBF,EAAWE,KAEZ,CAACF,EAAYE,KAChB9E,EAAAA,EAAAA,YAAU,WACR,IAAMiF,EAAUzE,EAAoBC,GAEhCwE,IAAYH,GACdC,EAAOE,KAER,CAACxE,EAAKqE,IACFA,ECgDWI,CAAiB3B,GAC7BhC,GAAQP,EAAgBsC,GACxB6B,IAAYC,EAAAA,EAAAA,KACZC,IAAWC,EAAAA,EAAAA,GAAYlD,GAC7B,IAA4ByC,EAAAA,EAAAA,WAAUzC,GAAtC,iBAAOmD,GAAP,MAAeC,GAAf,MACMC,IAAe5F,EAAAA,EAAAA,QAAO,OAC5B6F,EAAAA,EAAAA,qBAAoBjF,GAAK,kBAAMc,KAAO,CAACA,KAEnCX,EAAAA,IAAcyE,IAAYjD,IAC5BqD,GAAa3F,QAAUG,KAGpB2C,GAAeR,GAASmD,GAElBnD,GAAQmD,IACjBC,IAAU,GAFVA,IAAU,GAKZ,IAAMG,IAAaC,EAAAA,EAAAA,IAAiB,WAalC,GAZArE,GAAMK,MACNiE,GAAyB/F,SAAUgG,EAAAA,EAAAA,GAAOpF,SAAU,UAAWqF,IAC/DC,GAAuBlG,SAAUgG,EAAAA,EAAAA,GAAOpF,SAAU,SAElD,kBAAMuF,WAAWC,OAAqB,GAElCzC,GACFA,IAKEX,EAAW,CACb,IAAMqD,EAAuBlG,EAAcS,UAEvCa,GAAMC,QAAU2E,KAAyBC,EAAAA,EAAAA,GAAS7E,GAAMC,OAAQ2E,KAClEV,GAAa3F,QAAUqG,EACvB5E,GAAMC,OAAO6E,aAIbC,IAAaV,EAAAA,EAAAA,IAAiB,WAMhC,IAAIW,GALNhF,GAAMM,SAC8B,MAApCgE,GAAyB/F,SAA2B+F,GAAyB/F,UAC3C,MAAlCkG,GAAuBlG,SAA2BkG,GAAuBlG,UAErEkD,KAIgD,OAAjDuD,EAAwBd,GAAa3F,UAA2D,MAA/ByG,EAAsBF,OAAyBE,EAAsBF,MAAMpD,GAC7IwC,GAAa3F,QAAU,UAM3BE,EAAAA,EAAAA,YAAU,WACHoC,GAASoB,IACdmC,OACC,CAACvD,EAAMoB,GAEVmC,MAIA3F,EAAAA,EAAAA,YAAU,WACHuF,IACLe,OACC,CAACf,GAAQe,MACZ9G,EAAAA,EAAAA,IAAe,WACb8G,QAGF,IAAMJ,IAAqBN,EAAAA,EAAAA,IAAiB,WAC1C,GAAK7C,GAAiBoC,MAAgB5D,GAAMO,aAA5C,CAIA,IAAMqE,EAAuBlG,IAEzBsB,GAAMC,QAAU2E,KAAyBC,EAAAA,EAAAA,GAAS7E,GAAMC,OAAQ2E,IAClE5E,GAAMC,OAAO6E,YAGXG,IAAsBZ,EAAAA,EAAAA,IAAiB,SAAAtF,GACvCA,EAAEgE,SAAWhE,EAAEmG,gBAIA,MAAnB/D,GAAmCA,EAAgBpC,IAElC,IAAbmB,GACFiC,QAGEqC,IAAwBH,EAAAA,EAAAA,IAAiB,SAAAtF,GACzCmC,GAA0B,KAAdnC,EAAEoG,SAAkBnF,GAAMO,eACrB,MAAnBa,GAAmCA,EAAgBrC,GAE9CA,EAAEqG,kBACLjD,QAIAsC,IAAyBnG,EAAAA,EAAAA,UACzBgG,IAA2BhG,EAAAA,EAAAA,UAO3B+G,GAAahE,EAEnB,IAAKY,MAAepB,GAAQwE,KAAerB,IACzC,OAAO,KAGT,IAAMsB,GAAcnF,OAAOC,OAAO,CAChCU,KAAAA,EACA5B,IAAKc,GAAMQ,aAEX,aAAuB,WAATM,QAA2ByE,GACxC7C,GAAM,CACP1B,MAAAA,EACAD,UAAAA,EACAyE,UAAW,IAETvF,GAAS0B,EAAeA,EAAa2D,KAA4BxD,EAAAA,EAAAA,KAAK,MAAO3B,OAAOC,OAAO,GAAIkF,GAAa,CAC9GrE,SAAuBwE,EAAAA,aAAmBxE,EAAU,CAClDH,KAAM,gBAINuE,KACFpF,IAAsB6B,EAAAA,EAAAA,KAAKuD,GAAY,CACrCK,QAAQ,EACRC,eAAe,EACfC,KAAM/E,EACNuB,OAAQA,EACRE,UAAWA,EACXD,SAlCiB,WACnB4B,IAAU,GACE,MAAZ5B,GAA4BA,EAAQ,WAAR,cAiC1BE,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXxB,SAAUhB,MAId,IAAI4F,GAAkB,KAEtB,GAAI3F,EAAU,CACZ,IAAM4F,GAAqBxE,EAC3BuE,GAAkBjE,EAAe,CAC/B1C,IAAKc,GAAMU,eACXqF,QAASd,KAGPa,KACFD,IAA+B/D,EAAAA,EAAAA,KAAKgE,GAAoB,CACtDJ,QAAQ,EACRE,KAAM/E,EACNI,SAAU4E,MAKhB,OAAoB/D,EAAAA,EAAAA,KAAKkE,EAAAA,SAAW,CAClC/E,SAAuBgF,EAAAA,cAAoCC,EAAAA,EAAAA,MAAMF,EAAAA,SAAW,CAC1E/E,SAAU,CAAC4E,GAAiB5F,MAC1BgC,SAGRtB,EAAMwF,YAAc,QACpB,MAAehG,OAAOC,OAAOO,EAAO,CAClCyF,QAAStG,EAAAA,K,gHC/PJ,IAAMuG,GAAsBC,E,SAAAA,IAAS,cAMtCxG,EAAAA,WACJ,aAIQ,6DAAJ,GAHFlB,EAGM,EAHNA,cAGM,IAFN2H,wBAAAA,OAEM,aADNC,MAAAA,OACM,yBACNC,KAAKF,wBAA0BA,EAC/BE,KAAKD,MAAQA,EACbC,KAAKC,OAAS,GACdD,KAAK7H,cAAgBA,E,gDAGvB,WACE,OCnBW,WAAyD,IAA1BA,EAA0B,uDAAVO,SACtDQ,EAASf,EAAc+H,YAC7B,OAAOC,KAAKC,IAAIlH,EAAOmH,WAAalI,EAAcmI,gBAAgBC,aDiBzDC,CAAsBR,KAAK7H,iB,wBAGpC,WACE,OAAQ6H,KAAK7H,eAAiBO,UAAUH,O,gCAG1C,SAAmBkI,M,mCAGnB,SAAsBA,M,+BAGtB,SAAkBC,GAChB,IAAMnG,EAAQ,CACZoG,SAAU,UAINC,EAAcZ,KAAKD,MAAQ,cAAgB,eAC3CvE,EAAYwE,KAAKa,aACvBH,EAAenG,OAAf,QACEoG,SAAUnF,EAAUjB,MAAMoG,UACzBC,EAAcpF,EAAUjB,MAAMqG,IAG7BF,EAAeI,iBAGjBvG,EAAMqG,GAAN,UAAwBG,UAASC,EAAAA,EAAAA,GAAIxF,EAAWoF,IAAgB,IAAK,IAAMF,EAAeI,eAA1F,OAGFtF,EAAUyF,aAAarB,EAAqB,KAC5CoB,EAAAA,EAAAA,GAAIxF,EAAWjB,K,mBAGjB,WAAQ,YACN,OAAIyF,KAAKC,QAAQiB,SAAQ,SAAAC,GAAC,OAAI,EAAKtH,OAAOsH,Q,kCAG5C,SAAqBT,GACnB,IAAMlF,EAAYwE,KAAKa,aACvBrF,EAAU4F,gBAAgBxB,GAC1BlG,OAAOC,OAAO6B,EAAUjB,MAAOmG,EAAenG,S,iBAGhD,SAAIhB,GACF,IAAI8H,EAAWrB,KAAKC,OAAOvD,QAAQnD,GAEnC,OAAkB,IAAd8H,EACKA,GAGTA,EAAWrB,KAAKC,OAAOxD,OACvBuD,KAAKC,OAAOqB,KAAK/H,GACjByG,KAAKuB,mBAAmBhI,GAEP,IAAb8H,IAIJrB,KAAKwB,MAAQ,CACXV,eAAgBd,KAAKyB,oBACrBlH,MAAO,IAGLyF,KAAKF,yBACPE,KAAK0B,kBAAkB1B,KAAKwB,QATrBH,K,oBAeX,SAAO9H,GACL,IAAM8H,EAAWrB,KAAKC,OAAOvD,QAAQnD,IAEnB,IAAd8H,IAIJrB,KAAKC,OAAO0B,OAAON,EAAU,IAGxBrB,KAAKC,OAAOxD,QAAUuD,KAAKF,yBAC9BE,KAAK4B,qBAAqB5B,KAAKwB,OAGjCxB,KAAK6B,sBAAsBtI,M,wBAG7B,SAAWA,GACT,QAASyG,KAAKC,OAAOxD,QAAUuD,KAAKC,OAAOD,KAAKC,OAAOxD,OAAS,KAAOlD,M,EAxGrEF,GA6GN,K,gFEpHMyI,GAAuBC,EAAAA,EAAAA,eAAcnJ,EAAAA,EAAYM,YAAS4F,GAClCgD,EAAQE,SAQvB,SAAS7I,IACtB,OAAO8I,EAAAA,EAAAA,YAAWH,K,sBCJL,SAASI,EAASC,EAAS7H,GACpC6H,EAAQC,UAAWD,EAAQC,UAAUxI,IAAIU,GCHhC,SAAkB6H,EAAS7H,GACxC,OAAI6H,EAAQC,YAAoB9H,GAAa6H,EAAQC,UAAUhE,SAAS9D,IACkC,KAAlG,KAAO6H,EAAQ7H,UAAU+H,SAAWF,EAAQ7H,WAAa,KAAKoC,QAAQ,IAAMpC,EAAY,KDC9BgI,CAASH,EAAS7H,KAA6C,kBAAtB6H,EAAQ7H,UAAwB6H,EAAQ7H,UAAY6H,EAAQ7H,UAAY,IAAMA,EAAe6H,EAAQlB,aAAa,SAAUkB,EAAQ7H,WAAa6H,EAAQ7H,UAAU+H,SAAW,IAAM,IAAM/H,I,uDEDxR,SAAS8D,EAASmE,EAASC,GAGxC,OAAID,EAAQnE,SAAiBmE,EAAQnE,SAASoE,GAC1CD,EAAQE,wBAAgCF,IAAYC,MAAmD,GAAxCD,EAAQE,wBAAwBD,SAAnG,E,uDCZF,SAASE,EAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,IAUvH,SAASE,EAAYZ,EAAS7H,GACvC6H,EAAQC,UACVD,EAAQC,UAAUvI,OAAOS,GACa,kBAAtB6H,EAAQ7H,UACxB6H,EAAQ7H,UAAYoI,EAAiBP,EAAQ7H,UAAWA,GAExD6H,EAAQlB,aAAa,QAASyB,EAAiBP,EAAQ7H,WAAa6H,EAAQ7H,UAAU+H,SAAW,GAAI/H,I,mNCbnG0I,EAAY,CAChB,aAAcC,IAAAA,OACd3D,QAAS2D,IAAAA,KAOTC,QAASD,IAAAA,MAAgB,CAAC,WAKtBE,EAA2BnE,EAAAA,YAAiB,WAI/CvG,GAJ+C,IAChD6B,EADgD,EAChDA,UACA4I,EAFgD,EAEhDA,QACG9H,GAH6C,mBAI1BC,EAAAA,EAAAA,KAAK,UAAD,QAC1B5C,IAAKA,EACL2K,KAAM,SACN9I,UAAW+I,GAAAA,CAAW,YAAaH,GAAW,aAAJ,OAAiBA,GAAW5I,IACnEc,OAEL+H,EAAYzD,YAAc,cAC1ByD,EAAYH,UAAYA,EACxBG,EAAYG,aAfS,CACnB,aAAc,SAehB,Q,6ECpBMC,EAAmCvE,EAAAA,YAAiB,WAOvDvG,GAAQ,IANT+K,EAMS,EANTA,WACAC,EAKS,EALTA,aACAC,EAIS,EAJTA,YACAhI,EAGS,EAHTA,OACAlB,EAES,EAFTA,SACGY,GACM,YACHmH,GAAUN,EAAAA,EAAAA,YAAW0B,EAAAA,GACrBC,GAAchG,EAAAA,EAAAA,IAAiB,WACxB,MAAX2E,GAA2BA,EAAQ7G,SACzB,MAAVA,GAA0BA,OAE5B,OAAoB+D,EAAAA,EAAAA,MAAM,OAAD,QAAC,QACxBhH,IAAKA,GACF2C,GAFoB,IAGvBZ,SAAU,CAACA,EAAUkJ,IAA4BrI,EAAAA,EAAAA,KAAK8H,EAAa,CACjE,aAAcK,EACdN,QAASO,EACTnE,QAASsE,WAIfL,EAAoBD,aA3BC,CACnBE,WAAY,QACZE,aAAa,GA0Bf,S,0DCuBIG,E,mIArDEC,EACW,oDADXA,EAEY,cAFZA,EAGY,kBAGZC,EAAAA,SAAAA,I,qIACJ,SAAeC,EAAM7B,EAAS8B,GAC5B,IAAMC,EAAS/B,EAAQ5H,MAAMyJ,GAG7B7B,EAAQgC,QAAQH,GAAQE,GACxBlD,EAAAA,EAAAA,GAAImB,GAAD,UACA6B,EADA,UACUI,YAAWpD,EAAAA,EAAAA,GAAImB,EAAS6B,IAASC,EAD3C,U,qBAKL,SAAQD,EAAM7B,GACZ,IAAMxK,EAAQwK,EAAQgC,QAAQH,QAEhBlF,IAAVnH,WACKwK,EAAQgC,QAAQH,IACvBhD,EAAAA,EAAAA,GAAImB,GAAD,UACA6B,EAAOrM,O,+BAKd,SAAkB+I,GAAgB,YAChC,gEAAwBA,GACxB,IAAMlF,EAAYwE,KAAKa,aAEvB,IADAqB,EAAAA,EAAAA,GAAS1G,EAAW,cACfkF,EAAeI,eAApB,CACA,IAAMF,EAAcZ,KAAKD,MAAQ,cAAgB,eAC3CsE,EAAarE,KAAKD,MAAQ,aAAe,eAC/CuE,EAAAA,EAAAA,GAAI9I,EAAWsI,GAAwB5C,SAAQ,SAAAqD,GAAE,OAAI,EAAKC,eAAe5D,EAAa2D,EAAI7D,EAAeI,oBACzGwD,EAAAA,EAAAA,GAAI9I,EAAWsI,GAAyB5C,SAAQ,SAAAqD,GAAE,OAAI,EAAKC,eAAeH,EAAYE,GAAK7D,EAAeI,oBAC1GwD,EAAAA,EAAAA,GAAI9I,EAAWsI,GAAyB5C,SAAQ,SAAAqD,GAAE,OAAI,EAAKC,eAAeH,EAAYE,EAAI7D,EAAeI,sB,kCAG3G,SAAqBJ,GAAgB,YACnC,mEAA2BA,GAC3B,IAAMlF,EAAYwE,KAAKa,cACvBkC,EAAAA,EAAAA,GAAYvH,EAAW,cACvB,IAAMoF,EAAcZ,KAAKD,MAAQ,cAAgB,eAC3CsE,EAAarE,KAAKD,MAAQ,aAAe,eAC/CuE,EAAAA,EAAAA,GAAI9I,EAAWsI,GAAwB5C,SAAQ,SAAAqD,GAAE,OAAI,EAAKE,QAAQ7D,EAAa2D,OAC/ED,EAAAA,EAAAA,GAAI9I,EAAWsI,GAAyB5C,SAAQ,SAAAqD,GAAE,OAAI,EAAKE,QAAQJ,EAAYE,OAC/ED,EAAAA,EAAAA,GAAI9I,EAAWsI,GAAyB5C,SAAQ,SAAAqD,GAAE,OAAI,EAAKE,QAAQJ,EAAYE,U,EA1C7ER,CAA8B1K,EAAAA,GAgD7B,SAASqL,EAAiBC,GAE/B,OADKd,IAAeA,EAAgB,IAAIE,EAAsBY,IACvDd,EAET,O,0BC9DMF,E,SAA4B3E,cAAoB,CAEpDtD,OAFoD,eAKtD,O,qECLe,SAASkJ,EAAeC,EAAQC,GAC7C,MAAQpL,OAAOqL,UAAUC,eAAeC,KAAKJ,EAAQC,IAEpC,QADfD,GAAS,EAAAK,EAAA,GAAeL,MAI1B,OAAOA,ECNM,SAASM,IAiBtB,OAfEA,EADqB,qBAAZC,SAA2BA,QAAQC,IACrCD,QAAQC,IAER,SAAc/I,EAAQwI,EAAUQ,GACrC,IAAIC,EAAO,EAAcjJ,EAAQwI,GACjC,GAAKS,EAAL,CACA,IAAIC,EAAO9L,OAAO+L,yBAAyBF,EAAMT,GAEjD,OAAIU,EAAKH,IACAG,EAAKH,IAAIJ,KAAKS,UAAUjJ,OAAS,EAAIH,EAASgJ,GAGhDE,EAAK7N,QAITwN,EAAKQ,MAAM3F,KAAM0F","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","body","resolveContainerRef","ref","document","_ref","canUseDOM","nodeType","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","getManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","Provider","useContext","addClass","element","classList","baseVal","hasClass","context","node","compareDocumentPosition","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","propTypes","PropTypes","variant","CloseButton","type","classNames","defaultProps","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","options","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}