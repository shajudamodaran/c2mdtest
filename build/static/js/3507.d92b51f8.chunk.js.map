{"version":3,"file":"static/js/3507.d92b51f8.chunk.js","mappings":"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","sources":["Helpers/dateFunctions.js","actions/auth-header.js","actions/PrescriptionFormActions.js","components/PrescriptionForm/ViewPrescription/ViewPrescription.jsx"],"sourcesContent":["import moment from \"moment\";\n\nexport const isWithinMinutes = (date, time) => {\n\n  var date = new Date()\n\n\n\n  var appointmentDate = moment(time, 'hh:mm A')._d\n  var FIVE_MIN = 5 * 60 * 1000;\n\n   console.log(appointmentDate-date,date,FIVE_MIN);\n\n\n  if ((appointmentDate-date) > FIVE_MIN) {\n    return true\n  }\n\n\n}\n\nfunction setDateTime(date, time) {\n\n\n  var index = time.indexOf(\":\"); // replace with \":\" for differently displayed time.\n  var index2 = time.indexOf(\" \");\n\n  var hours = time.substring(0, index).toString();\n  var minutes = time.substring(index + 1, index2);\n\n  var mer = time.substring(index2 + 1, time.length);\n\n  if (mer == \"PM\") {\n    hours = hours + 12;\n  }\n\n\n  date.setHours(hours);\n  date.setMinutes(minutes);\n  date.setSeconds(\"00\");\n\n  console.log(hours);\n\n  return date;\n}\n\nexport const separaetdateAndTime = (date_string) => {\n\n\n  if (date_string) {\n    let arr = date_string.split(\" \");\n    return {\n      date: arr[0],\n      time: arr[1]\n    }\n\n\n\n  }\n\n}\n\n\nexport const convertDateToString = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).format(\"DD-MMM-YYYY\"); \n\n  }\n\n}\n\nexport const convertDateToStringThreeMonthBack = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).subtract(3, 'months').format(\"DD-MMM-YYYY\"); \n\n  }\n\n}\n\nexport const convertDateToStringOneYear = (_date) => {\n\n  if (_date) {\n\n   return moment(_date).subtract(1, 'year').format(\"DD-MMM-YYYY\"); \n\n  }\n\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('userData'));\r\n    if (user && user.token) {\r\n      return { Authorization: 'Bearer ' + user.token };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import loginedApi from \"../apis\";\nimport authHeader from './auth-header';\nimport { convertDateToString } from \"../Helpers/dateFunctions\";\nimport { INTERBRANCH_ADMIN_DASHBOARD, REDUX_LOADING, SET_CR_DASHBOARD, UPDATE_REDUX_PRESCRIPTION } from \"./type\";\n\n\nexport const getDepartments = () => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\n        requestType: \"1062\",\n        browserTimeZone: \"\",\n        \"version\":\"2\",\n        data: {\n            type: \"department\"\n        },\n    };\n\n\n    const response = await loginedApi.post(\"getdepartments\", params,{ headers: authHeader() });\n\n   \n    if (response.status == \"200\") {\n\n      \n        if (response.data.errorType!=\"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n    }\n\n\n}\n\nexport const getDoctors = ({ department_id }) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\n        requestType: \"1063\",\n        browserTimeZone: \"\",\n        \"version\":\"2\",\n        data: {\n            \"type\": \"doctor\",\n            \"departmentId\": department_id\n        },\n    };\n\n\n    const response = await loginedApi.post(\"getdoctors\", params,{ headers: authHeader() });\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType!=\"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n    }\n\n\n}\n\nexport const getTemplateList = ({ offset }) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\n        requestType: \"1070\",\n        browserTimeZone: \"\",\n        \"version\":\"2\",\n        data: {\n            type: \"templatelist\",\n            offset: offset ? offset : 0\n        },\n    };\n\n\n    const response = await loginedApi.post(\"gettemplates\", params,{ headers: authHeader() });\n\n    if (response.status == \"200\") {\n\n        console.log(response);\n\n        if (response.data.errorType!=\"FAILURE\" && response.data?.data) {\n\n            return {\n                data: response.data.data.data,\n                total: response.data.data.totalNumberOfPages\n            }\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n        /*if (response.data?.data?.data) {\n            return {\n                data: response.data.data.data,\n                total: response.data.data.totalNumberOfPages\n            }\n        }*/\n    }\n\n\n}\n\nexport const viewTemplate = (par_tempId) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = { \"data\": { \"templateId\": par_tempId }, \"browserTimeZone\": \"\", \"requestType\": 1068,\"version\":\"2\" };\n\n\n    const response = await loginedApi.post(\"viewtemplate\", params,{ headers: authHeader() });\n\n    if (response.status == \"200\") {\n\n        /*if (response.data?.data) {\n            return response.data.data\n        }*/\n        if (response.data.errorType!=\"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n    }\n\n\n}\n\nexport const FETCH_PR_ADMIN_DASHBOARD_REPORT = (_para) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    dispatch({\n        type: REDUX_LOADING,\n        payload: true\n    });\n\n    let fromDate = _para?.fromDate ? convertDateToString(_para.fromDate) : null\n    let toDate = _para?.toDate ? convertDateToString(_para.toDate) : null\n\n    let todayDate=convertDateToString(new Date())\n\n    let params={\n        \"data\": {\n            \"userID\": 98278532,\n            \"operation\": \"find\",\n            \"startDate\": fromDate?fromDate:todayDate,\n            \"endDate\": toDate?toDate:todayDate,\n            \"browserTimeZone\": \"GMT+05:30\",\n            offset:_para?.offset?_para.offset:\"0\"\n        },\n        \"browserTimeZone\": \"\",\n        \"version\":\"2\",\n        \"requestType\": 236\n    }\n   \n\n   \n\n    let responce = await loginedApi.post(\"getbethanyprescriptions\", params,{ headers: authHeader() })\n\n    console.log(\"getbethanyprescriptionlist responce ->\", responce);\n\n    if (responce.status == 200) {\n\n        console.log();\n\n        if (responce.data.errorType!=\"FAILURE\" && responce.data?.data) {\n\n            dispatch({\n                type: SET_CR_DASHBOARD,\n                payload: {\n                    data: responce.data.data,\n                    total: responce.data.data.totalNumberOfPages\n                }\n            });\n    \n             dispatch({\n            type: REDUX_LOADING,\n            payload: false\n        });\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n       \n\n\n  }\n}\n\nexport const syncLabAndMedicine = () => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\"data\":{\"userID\":\"98278532\",\"browserTimeZone\":\"GMT+05:30\"},\"browserTimeZone\":\"\",\"requestType\":238,\"version\":\"2\"}\n\n\n    const response = await loginedApi.post(\"bethanysynclabmedicine\", params,{ headers: authHeader() });\n\n    if (response.status == \"200\") {\n\n        if (response.data.errorType!=\"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n          //  return response.data.data\n    }\n\n\n\n}\n\n\nexport const pushToHisCall = (_id) => async dispatch => {\n\n    // let userToken = await getFromLocalStorage(USER_TOKEN)\n\n    // dispatch({\n    //     type: UPDATE_REDUX_PRESCRIPTION,\n    //     payload: {\n    //         data: responce.data.data,\n    //         totalPages: responce.data.totalNumberOfPages\n    //     }\n    // });\n\n\n    let params = {\"data\":{\"userID\":\"98278532\",\"listid\":_id},\"browserTimeZone\":\"\",\"requestType\":237,\"version\":\"2\"}\n\n    const response = await loginedApi.post(\"bethanysynclabmedicine\", params,{ headers: authHeader() });\n\n    if (response.status == \"200\") {\n\n        console.log(response);\n        if (response.data.errorType!=\"FAILURE\" && response.data?.data) {\n\n            return response.data.data\n          }\n          else\n          {\n            //dispatch({ type: LOG_OUT_ACTION });\n      \n            localStorage.clear();\n            localStorage.removeItem(\"userData\");\n            window.location.href = '/home'; \n          }\n         //   return response.data.data\n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Popover } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { viewTemplate } from '../../../actions/PrescriptionFormActions'\nimport '../prescriptionform.css'\n\nfunction ViewPrescription({ location }) {\n\n\n    let [finalInvestigations, setFinalInvestigationData] = useState([])\n    let [finalMedicinesdata, setFinalMedicinesdata] = useState([])\n    let [template, setTemplate] = useState(null)\n\n    let [consultationDetails, setConsultationDetails] = useState(null)\n\n    useEffect(() => {\n        setConsultationDetails(template?.tempData?.consultationDetails)\n    }, [template])\n\n\n\n\n    let NO_DATA_MESSAGE = \"No data available\"\n    let NO_DATA_MESSAGE2 = \"-\"\n\n    const { prname } = useParams();\n    let dispatch = useDispatch()\n\n    useEffect(() => {\n\n        loadTemplateDetails()\n\n    }, [])\n\n\n    let loadTemplateDetails = () => {\n\n        dispatch(viewTemplate(prname)).then((res) => {\n\n            if (res) {\n                setFinalInvestigationData(res[0]?.tempData?.consultationDetails?.labTest)\n                setFinalMedicinesdata(res[0]?.tempData?.consultationDetails?.medicine)\n                setTemplate(res[0])\n            }\n\n        })\n\n\n\n    }\n\n\n\n    console.log(consultationDetails);\n\n    const Content = ({ data }) => {\n\n\n        return (\n            <div className='view-prescription-doctor-list-container-small'>\n                <ul>\n                    {\n                        data.split(\",\")?.length > 0 ?\n\n                            data.split(\",\").map((element, key) => {\n                                return (\n                                    <li>{element}{key > data.split(\",\").length - 2 ? \"\" : \"\"} </li>\n                                )\n                            })\n\n                            : null\n                    }\n                </ul>\n\n            </div>\n        )\n    }\n\n\n    let convertToArray = (data, context) => {\n\n        if (context == \"first\") {\n\n            if (data) {\n                return data.split(\",\")[0]\n            }\n            else {\n                return null\n            }\n        }\n        else {\n\n            if (data) {\n                return data.split(\",\")\n            }\n            else return[]\n        }\n\n\n\n    }\n\n    return (\n        <div className=\"prescription-form-main-container-view full-height\">\n\n            <div className='prescription-form-container-view full-height '>\n\n\n                <div className=\"prescription-form-content-container\" style={{ height: \"100vh\" }}>\n                    <div\n                        // onScroll={(e) => { setScrollAmount(e.target.scrollTop) }}\n                        className=\"prescription-form-content\">\n\n                        \n\n\n\n\n                        <div className=\"container\">\n\n                        </div>\n\n                        <div style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"flex-start\",\n                            width: \"100%\",\n                            padding: \"1rem\",\n\n                            position: \"relative\",\n                            minWidth: \"100%\",\n                            flexWrap: \"wrap\"\n                        }}>\n\n\n\n                            <div></div>\n\n\n\n                            <ul className='report-list shadow-underline'>\n                                <li>\n                                    <div>\n                                        <span className='form-small-tittle' >Choose Speciality <span style={{ color: \"red\" }}>*</span> </span>\n                                        <span className='form-caption'></span>\n                                    </div>\n\n                                    <div className='form-light-background-big'>\n                                        <input id=\"releventPoint\"\n                                            style={{ width: \"290px\" }}\n                                            value={template?.assignedDepartments}\n                                            className='form-input-text'\n                                            readOnly\n                                        />\n                                    </div>\n\n\n                                </li>\n\n                                <li>\n                                    <div>\n                                        <span className='form-small-tittle' >Choose Doctor <span style={{ color: \"red\" }}>*</span></span>\n                                        <span className='form-caption' ></span>\n                                    </div>\n\n                                    <Popover overlayClassName=\"wrapper-popover-view\" content={  convertToArray(template?.assignedDoctors).length>1?<Content data={template?.assignedDoctors} />:null} \n                                    title={convertToArray(template?.assignedDoctors).length>1?`Doctors list (${template?.assignedDoctors.split(\",\").length})`:null}>\n                                        <div className='form-light-background-big'>\n                                            <input id=\"releventPoint\"\n                                                style={{ maxWidth: \"290px\", minWidth: \"290px\" }}\n                                                // value={template?.assignedDoctors.toString()}\n                                                value={\n\n                                                    convertToArray(template?.assignedDoctors).length>1?\n                                                    `${convertToArray(template?.assignedDoctors, \"first\")}, + ${convertToArray(template?.assignedDoctors)?.length - 1}`\n                                                    : `${convertToArray(template?.assignedDoctors, \"first\")}`\n\n\n                                                    \n                                                    }\n                                                className='form-input-text'\n\n                                                readOnly\n                                            />\n                                        </div>\n                                    </Popover>\n\n\n                                    {/* \n                                    <b>\n                                        {\n                                            template?.tempData?.basicinfo?.doctorIds?.map((element) => {\n\n                                                return `${element}, `\n\n                                            })\n                                        }\n                                    </b> */}\n\n\n\n\n                                </li>\n\n                                <li>\n                                    <div>\n                                        <span className='form-small-tittle' >Template Name <span style={{ color: \"red\" }}>*</span></span>\n                                        <span className='form-caption' ></span>\n                                    </div>\n\n                                    <div className='form-light-background-big'>\n                                        <input id=\"releventPoint\"\n                                            style={{ width: \"290px\" }}\n                                            value={template?.tempData?.basicinfo?.templateName}\n                                            className='form-input-text'\n\n                                            readOnly\n                                        />\n                                    </div>\n\n\n\n\n\n                                </li>\n\n\n\n\n\n                            </ul>\n\n\n\n                            <span className='form-heading-2' style={{ marginTop: \"1rem\" }}>Patient Reports</span>\n\n\n                            <div className='report-list-container'>\n\n\n                                <div style={{ padding: \"0rem\", display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", marginTop: \"1rem\", width: \"100%\", justifyContent: \"space-between\" }}>\n\n                                    <div style={{ display: \"fex\", flexDirection: \"column\" }}>\n                                        <span className='form-small-tittle' >Chief Complaints</span>\n\n                                        <div className='form-light-background-big'>\n                                            <textarea\n                                                id=\"chiefComplaints\"\n                                                value={consultationDetails ? consultationDetails.chiefcomplaints : NO_DATA_MESSAGE}\n                                                className='form-input-text-area'\n                                                name=\"chiefcomplaints\"\n\n                                                rows={4}\n                                                readOnly={true}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div style={{ display: \"fex\", flexDirection: \"column\", marginLeft: \"1rem\" }}>\n                                        <span className='form-small-tittle' >Relevant points from history</span>\n\n                                        <div className='form-light-background-big'>\n                                            <textarea id=\"releventPoint\"\n                                                value={consultationDetails?.notes ? consultationDetails.notes : NO_DATA_MESSAGE}\n                                                className='form-input-text-area'\n                                                rows={4}\n                                                readOnly\n                                            />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n\n                                <div style={{ padding: \".0rem\", display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", marginTop: \"1rem\", width: \"100%\", justifyContent: \"space-between\" }}>\n\n                                    <div style={{ display: \"fex\", flexDirection: \"column\" }}>\n                                        <span className='form-small-tittle' >Diagnosis or Provisional Diagnosis</span>\n\n                                        <div className='form-light-background-big'>\n                                            <textarea\n                                                value={consultationDetails?.diagnosis ? consultationDetails.diagnosis : NO_DATA_MESSAGE}\n\n                                                id=\"diagnosis\" className='form-input-text-area' rows={4} onChange={(e) => {\n                                                    // setPrescriptioninfo({ ...presciptioninfor, diagnosis: e.target.value })\n\n                                                }} readOnly />\n                                        </div>\n                                    </div>\n\n                                    <div style={{ display: \"fex\", flexDirection: \"column\", marginLeft: \"1rem\" }}>\n                                        <span className='form-small-tittle' >Examination/Lab Findings</span>\n\n                                        <div className='form-light-background-big'>\n                                            <textarea id=\"examination\"\n                                                value={consultationDetails?.investigation ? consultationDetails.investigation : NO_DATA_MESSAGE}\n\n                                                className='form-input-text-area' rows={4} onChange={(e) => {\n                                                    // setPrescriptioninfo({ ...presciptioninfor, examinationlabfindings: e.target.value })\n\n\n                                                }} readOnly />\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n\n                            <div className=\"separator\"></div>\n\n                            {/* <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", width: \"99%\", }}>\n                                <span className='form-heading-2' style={{ marginTop: \"1rem\" }}>Investigations</span>\n\n                                {\n                                    isReadyToAddInvestigation ?\n\n\n                                        <button className={isReadyToAddInvestigation ? \"add-investigation-btn\" : \"add-investigation-btn-disabled\"} onClick={() => { addInvestigation() }}>\n                                            <AddIcon_Prescription /> {getAddInvestigationButtonText(investigationData.length)}\n                                        </button>\n\n\n                                        :\n\n                                        <Popover trigger=\"click\" content={isReadyToAddInvestigation ? null : noInvestigationPopOver}>\n\n                                            <button className={isReadyToAddInvestigation ? \"add-investigation-btn\" : \"add-investigation-btn-disabled\"} onClick={() => { addInvestigation() }}>\n                                                <AddIcon_Prescription /> {getAddInvestigationButtonText(investigationData.length)}\n                                            </button>\n\n                                        </Popover>\n\n                                }\n\n                            </div> */}\n\n\n\n\n                            {finalInvestigations.length > 0 ?\n\n\n                                <table className='investigations-table'>\n\n                                    <tr>\n                                        <th><div>#</div></th>\n                                        <th><div>Investigation Name(s)</div></th>\n                                        <th colSpan=\"2\"><div>Comments/Instructions</div></th>\n\n                                    </tr>\n\n\n                                    {\n\n\n                                        finalInvestigations.map((obj, key) => {\n\n\n\n\n                                            return (\n\n                                                <tr>\n                                                    <td>{key + 1}</td>\n                                                    <td>{obj.testType ? obj.testType : NO_DATA_MESSAGE2}</td>\n                                                    <td>{obj.testComment ? obj.testComment : NO_DATA_MESSAGE2}</td>\n\n\n                                                </tr>\n\n                                            )\n                                        })\n\n\n                                    }\n\n                                </table>\n\n                                :\n\n                                <div className=\"no-table-data\">\n                                    ( No Investigations found )\n                                </div>\n\n                            }\n\n                            <div className=\"separator\"></div>\n\n\n                            {\n                                finalMedicinesdata.length > 0 ?\n\n                                    <div className='medicine-table-container'>\n\n\n\n                                        <table\n                                            className='medicine-table'>\n\n                                            <tr>\n                                                <th><div>#</div></th>\n                                                {/* <th><div>Medicine Type</div></th> */}\n                                                <th><div>Name of Medicine</div></th>\n                                                <th><div>When to have</div></th>\n                                                <th><div>Frequency</div></th>\n                                                <th><div>Quantity</div></th>\n                                                <th><div>Unit</div></th>\n                                                <th><div>Starting Date</div></th>\n                                                <th><div>No.of Days</div></th>\n                                                <th colspan=\"2\"><div>Instructions</div></th>\n\n                                            </tr>\n\n\n\n                                            {\n\n\n                                                finalMedicinesdata.map((obj, key) => {\n\n                                                    return (\n\n                                                        <tr>\n                                                            <td>{key + 1}</td>\n                                                            {/* <td>\n\n                                                                DRUGS\n\n                                                            </td> */}\n                                                            <td>{obj.name ? obj.name : NO_DATA_MESSAGE2}</td>\n                                                            <td>{obj.medtakeMethod ? obj.medtakeMethod : NO_DATA_MESSAGE2}</td>\n                                                            <td>{obj.displayTablet ? obj.displayTablet : NO_DATA_MESSAGE2}</td>\n                                                            <td>{obj.quandity ? obj.quandity : NO_DATA_MESSAGE2} </td>\n                                                            <td>{obj.measurement ? obj.measurement : NO_DATA_MESSAGE2}</td>\n                                                            <td>{obj.StartVal ? obj.StartVal : NO_DATA_MESSAGE2}</td>\n                                                            <td>{obj.totalDays ? obj.totalDays : NO_DATA_MESSAGE2}</td>\n                                                            <td>{obj.mediComment ? obj.mediComment : NO_DATA_MESSAGE2}</td>\n                                                        </tr>\n\n                                                    )\n                                                })\n\n\n\n\n                                            }\n\n\n\n\n\n                                        </table>\n\n                                    </div>\n\n                                    : <div className=\"no-table-data\">\n                                        ( No Medicines found )\n                                    </div>\n                            }\n\n\n\n\n\n\n\n\n\n                            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", width: \"99%\", }}>\n\n                                <span className='form-heading-2' style={{ marginTop: \"1rem\" }}>Additional Instructions</span>\n\n                            </div>\n\n                            <div className='form-light-background' style={{ width: \"45%\" }}>\n                                <textarea\n                                    value={consultationDetails?.instruction ? consultationDetails.instruction : NO_DATA_MESSAGE}\n\n                                    className='form-input-text-area' rows={3} style={{ width: \"100%\" }} readOnly />\n                            </div>\n\n\n\n                            {/* <input className='focusPoint' ref={AddInstructionElement} type=\"text\" name=\"\" id=\"\" /> */}\n\n\n\n\n\n\n                        </div>\n                    </div>\n\n\n                </div>\n\n\n            </div>\n\n        </div >\n    )\n}\n\nexport default ViewPrescription"],"names":["separaetdateAndTime","date_string","arr","split","date","time","convertDateToString","_date","moment","format","convertDateToStringThreeMonthBack","subtract","convertDateToStringOneYear","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","getDepartments","dispatch","params","requestType","browserTimeZone","data","type","loginedApi","headers","response","status","errorType","clear","removeItem","window","location","href","getDoctors","department_id","getTemplateList","offset","console","log","total","totalNumberOfPages","viewTemplate","par_tempId","FETCH_PR_ADMIN_DASHBOARD_REPORT","_para","REDUX_LOADING","payload","fromDate","toDate","todayDate","Date","responce","SET_CR_DASHBOARD","syncLabAndMedicine","pushToHisCall","_id","useState","finalInvestigations","setFinalInvestigationData","finalMedicinesdata","setFinalMedicinesdata","template","setTemplate","consultationDetails","setConsultationDetails","useEffect","tempData","NO_DATA_MESSAGE","NO_DATA_MESSAGE2","prname","useParams","useDispatch","loadTemplateDetails","then","res","labTest","medicine","Content","className","length","map","element","key","convertToArray","context","style","height","display","flexDirection","alignItems","width","padding","position","minWidth","flexWrap","color","id","value","assignedDepartments","readOnly","overlayClassName","content","assignedDoctors","title","maxWidth","basicinfo","templateName","marginTop","justifyContent","chiefcomplaints","name","rows","marginLeft","notes","diagnosis","onChange","e","investigation","colSpan","obj","testType","testComment","colspan","medtakeMethod","displayTablet","quandity","measurement","StartVal","totalDays","mediComment","instruction"],"sourceRoot":""}