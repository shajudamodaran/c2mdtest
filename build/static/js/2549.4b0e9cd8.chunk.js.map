{"version":3,"file":"static/js/2549.4b0e9cd8.chunk.js","mappings":"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","sources":["Helpers/localStorageHelper.js","constants/const.js","components/Common/AdminTextArea/AdminTextArea.jsx","Helpers/ClinicAdminHelper.js","components/MisReport/Misreport.jsx","pages/InterbranchAdmin/constants.js","pages/InterbranchAdmin/InterbranchAdminHome.jsx"],"sourcesContent":["\nexport const getFromLocalStorage = async (key) =>{\n\n   return localStorage.getItem(key);\n\n}","\nexport const USER_TYPE=\"c2mdUserUserType\"\nexport const USER_DATA=\"userData\"\nexport const ADMIN_USER=\"C2MDAdmin\"\nexport const CLINIC_ADMIN_USER=\"ClinicAdmin\"\nexport const USER_TOKEN=\"c2mdUserToken\"\nexport const BETHANY_CLINIC_ID=\"14\"\n","import { Input } from 'antd';\nimport React, { useEffect, useState } from 'react'\nconst { TextArea } = Input;\n\n\nfunction AdminTextArea({value,element,onBlur}) {\n\n    let[_value,setValue]=useState(null)\n\n\n    useEffect(() => {\n\n        if(value)\n        {\n            setValue(value)\n        }\n     \n    }, [value])\n    \n\n    return (\n        <TextArea\n            onChange={(e)=>{setValue(e.target.value)}}\n            value={_value!=\"\"?_value:\"-\"}\n            onBlur={(e) => { onBlur(element.appointmentId, e) }}\n            rows={1} />\n\n    )\n}\n\nexport default AdminTextArea","\nlet ConsultationStatusArray = [\n    { status: \"Upcoming\", flag: \"Upcoming\" },\n    { status: \"Completed\", flag: \"Completed\" },\n    { status: \"Cancelled by Patient\", flag: \"Error\" },\n    { status: \"Cancelled by Doctor\", flag: \"Error\" },\n    { status: \"Technical Error - Doctor\", flag: \"Error\" },\n    { status: \"Technical Error - Patient\", flag: \"Error\" },\n    { status: \"Doctor Unavailable\", flag: \"Pending\" },\n    { status: \"Patient Unavailable\", flag: \"Pending\" },\n    { status: \"Doctor & Patient No-show\", flag: \"Pending\" },\n    { status: \"Not Available\", flag: \"Upcoming\" },\n]\n\nexport const getConsultationStatusFlag = (status) => {\n\n    if (status) {\n\n        let flag = ConsultationStatusArray.filter((element) => element.status === status)\n        return flag.length > 0 ? flag[0].flag : \"Upcoming\"\n    }\n    else{\n        return \"Upcoming\"\n    }\n\n}","import { DatePicker, Modal, Pagination, Tooltip } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react'\nimport moment from \"moment\"\nimport './misreport.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport StatusBadge from '../Badges/StatusBadge/StatusBadge';\nimport { downloadSummaryReport, FETCH_ADMIN_DASHBOARD_REPORT, FETCH_ADMIN_DETAILED_REPORT, FETCH_DASHBOARD_MORE, FETCH_DETAILED_MORE, updateMisReportComment } from '../../actions/InterbranchAdminActions';\nimport { INTERBRANCH_MODAL } from '../../actions/type';\nimport { convertDateToString } from '../../Helpers/dateFunctions';\nimport { Input } from 'antd';\nimport AdminTextArea from '../Common/AdminTextArea/AdminTextArea';\nimport { getFromLocalStorage } from '../../Helpers/localStorageHelper';\nimport { ADMIN_USER, USER_DATA } from '../../constants/const';\nimport { FolderEmpty } from '../../assets/Logos/Icons';\nimport EmptyTableData from '../Common/EmptyTableData/EmptyTableData';\nimport { getConsultationStatusFlag } from '../../Helpers/ClinicAdminHelper';\n\nconst { TextArea } = Input;\n\n\nconst { RangePicker } = DatePicker;\n\nfunction Misreport() {\n\n    const dateRef = useRef(null)\n\n    let [isOpen, setOpen] = useState(false)\n    let [pagination, setPagination] = useState(null)\n    let [selectedDate, setSelectedDate] = useState({ from: null, to: null })\n\n    const dispatch = useDispatch()\n\n    let misReports = useSelector(state => state.interbranchAdmin.detailedReportTable)\n    let misReportsPageLength = useSelector(state => state.interbranchAdmin.detailedReportTableTotalPages)\n\n    let userData = localStorage.getItem(USER_DATA)\n    userData = JSON.parse(userData)\n    let { userType } = userData\n\n    let [isLoading,setLoading]=useState(true)\n\n\n    useEffect(() => {\n     \n        dispatch(FETCH_ADMIN_DETAILED_REPORT({ context: \"Admin Home useEffect\" })).then((res)=>{\n\n            if(res)setLoading(false)\n\n        })\n\n    }, [])\n    \n\n\n\n\n    let handleTableClick = (_id) => {\n\n        dispatch(FETCH_DETAILED_MORE(_id))\n\n        dispatch({\n            type: INTERBRANCH_MODAL,\n            payload: {\n                name: \"misReportModal\",\n                value: true\n            }\n        });\n\n\n\n    }\n\n    let filterOnClick = () => {\n\n        setOpen(!isOpen)\n\n    }\n\n    let handledateChange = (e) => {\n\n\n        if (e) {\n            let [startDate, endDate] = e\n\n            let prevDate = moment().subtract(3, 'months')\n\n            console.log(convertDateToString(prevDate));\n\n\n            if (startDate < prevDate) {\n\n                Modal.confirm({\n                    title: 'Confirm',\n                    // icon: <ExclamationCircleOutlined />,\n                    content: 'You can only view report within a 3 month span. Do you want to download the report before 3 months?',\n                    okText: 'Download Report',\n                    cancelText: 'cancel',\n                    onOk() {\n                        downloadReport()\n                    },\n                });\n            }\n            else {\n\n                setSelectedDate({ from: startDate, to: endDate })\n                dispatch(FETCH_ADMIN_DETAILED_REPORT({ fromDate: startDate, toDate: endDate, offset: pagination, context: \"Date Change\" }))\n                //downloadReport(startDate, endDate)\n            }\n\n\n\n        }\n\n\n    }\n\n\n\n    let downloadReport = () => {\n\n        console.log(\"Downloading report..............\");\n\n        dispatch(downloadSummaryReport({ fromDate: selectedDate.from, toDate: selectedDate.to })).then((resp) => {\n\n            if (resp) {\n                window.open(resp, '_blank');\n            }\n        })\n    }\n\n\n    let handleCommentChange = (para_appointment_id, e) => {\n\n        dispatch(updateMisReportComment(para_appointment_id, e.target.value)).then((res) => {\n\n            if (res) {\n                dispatch(FETCH_ADMIN_DETAILED_REPORT({ offset: pagination, context: \"Comment Change\", fromDate: selectedDate.from, toDate: selectedDate.to }))\n            }\n\n        })\n\n\n    }\n\n    let handlePaginationChange = (e) => {\n\n\n        dispatch(FETCH_ADMIN_DETAILED_REPORT({ offset: e - 1, context: \"Pagination Change\", fromDate: selectedDate.from, toDate: selectedDate.to }))\n        setPagination(e - 1)\n        // console.log(e-1);\n    }\n\n\n\nconsole.log(misReports)\n\n\n\n\n    return (\n        <div className='mis_report_container'>\n\n            <div className=\"header\">\n\n                <button onClick={() => { downloadReport() }}>\n\n                    <div className=\"icon\"><i class=\"far fa-download\"></i></div> Download Report</button>\n\n                <div className=\"filter-button\" >\n\n                    <div className=\"icon\" onClick={filterOnClick}><i class=\"far fa-calendar-alt\"></i></div>\n\n\n                    <RangePicker\n                        // open={isOpen}\n                        ref={dateRef}\n                        bordered={false}\n                        className=\"date-picker\"\n                        suffixIcon={null}\n                        // disabledDate={(current) => {\n                        //     return moment().add(-3, 'month') >= current\n                        //     // ||\n                        //     //  moment().add(1, 'month')  <= current;\n                        // }}\n                        onChange={handledateChange} />\n                </div>\n\n\n            </div>\n\n\n            <div className='mis_report_table_container'>\n\n\n                <table className='appoinment-table'>\n                    <tr>\n                        <th>Appoinment ID</th>\n                        <th>Appoinment Date & Time</th>\n                        <th>Patient Name</th>\n                        <th>Doctor Name</th>\n                        {\n                            userType === ADMIN_USER ? <th>Hospital Name</th> : null\n                        }\n\n                        <th>Fees Paid</th>\n                        <th>C2MD Fees</th>\n                        <th>Nett Fees</th>\n                        <th>Consultation Status</th>\n                        <th>Payment Status</th>\n                        <th>Notes</th>\n                        <th></th>\n                    </tr>\n\n                    <tbody>\n\n                        {\n                            misReports ?\n                                misReports.length > 0 ?\n\n                                    misReports.map((element, key) => {\n\n                                        if (key == 7) {\n                                            console.log(element.Comments);\n                                        }\n\n                                        if (key <= 8) {\n\n                                            return (\n\n                                                <tr>\n                                                    <td>{element.appointmentId}</td>\n                                                    <td>{element.appointmentDate} {element.appointmentTime}</td>\n                                                    <td>{element.patientName}</td>\n                                                    <td>{element.doctorName}</td>\n                                                    {\n                                                        userType === ADMIN_USER ? <td>{element.hospital}</td> : null\n                                                    }\n\n                                                    <td>{element.feesPaid}</td>\n                                                    <td>{element.c2mdFees}</td>\n                                                    <td>{element.nettFees}</td>\n                                                    <td><StatusBadge text={element.consultationStatus} varient={getConsultationStatusFlag(element.consultationStatus)} /></td>\n                                                    <td>{element.paymentStatus}</td>\n                                                    <td><AdminTextArea\n                                                        value={element.Comments}\n                                                        element={element}\n                                                        onBlur={handleCommentChange}\n                                                    /></td>\n                                                    {/* <td><TextArea  onBlur={(e) => { handleCommentChange(element.appointmentId, e) }} rows={1}></TextArea></td> */}\n\n                                                    <td  ><button onClick={() => { handleTableClick(element.appointmentId) }} className='more-btn' >More</button></td>\n\n                                                </tr>\n                                            )\n                                        }\n                                    })\n\n                                    : <tr>\n                                        <td colSpan={12}>\n                                            <EmptyTableData isLoading={isLoading} />\n                                        </td>\n                                    </tr>\n                                : console.log(\"no mis report\")\n                        }\n\n\n\n\n\n\n\n\n\n                    </tbody>\n\n\n\n\n\n                </table>\n\n\n\n            </div>\n\n\n            <div className=\"pagination-container-mis-report\">\n\n                &nbsp;\n                <Pagination\n                    showSizeChanger={false}\n                    pageSize={8}\n                    onChange={handlePaginationChange}\n                    defaultCurrent={1}\n                    total={misReportsPageLength ? misReportsPageLength * 8 : 0} />\n            </div>\n\n\n\n        </div>\n    )\n}\n\nexport default Misreport","import ConsolidatedReport from \"../../components/ConsolidatedReport/ConsolidatedReport\";\nimport Misreport from \"../../components/MisReport/Misreport\";\nimport TodaysReport from \"../../components/TodaysReport/TodaysReport\";\n\nexport const interbranchAdminSideMenu=[\n    {\n        tittle:\"Dashboard\",\n        options:[\n            {\n                name:\"Dashboard\",\n                ico:<i class=\"fal fa-book-medical\"></i>,\n                component:<TodaysReport/>,\n                date:\"10, February, 2021 - Wednesday\"\n            },\n           \n            \n        ]\n    },\n    {\n        tittle:\"MIS REPORTS\",\n        options:[\n            // {\n            //     name:\"Today's Report\",\n            //     ico:<i class=\"fal fa-book-medical\"></i>,\n            //     component:<TodaysReport/>,\n            //     date:\"10, February, 2021 - Wednesday\"\n            // },\n            {\n                name:\"Detailed Report\",\n                ico:<i class=\"far fa-calendar-alt\"></i>,\n                component:<Misreport/>\n\n            },\n            {\n                name:\"Consolidate Report\",\n                ico:<i class=\"far fa-file-alt\"></i>,\n                component:<ConsolidatedReport/>\n\n            },\n            \n        ]\n    },\n    \n    \n]\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FETCH_ADMIN_DASHBOARD_REPORT, FETCH_ADMIN_DETAILED_REPORT, FETCH_CONSOLIDATED_REPORTS, getHospitalsList } from '../../actions/InterbranchAdminActions'\nimport { logoutAction } from '../../actions/LoginAction'\nimport { FETCH_PR_ADMIN_DASHBOARD_REPORT } from '../../actions/PrescriptionFormActions'\nimport CustomeModal from '../../components/CustomeModal/CustomeModal'\nimport MisReportModalContent from '../../components/MisReportModal/MisReportModalContent'\nimport TodaysReport from '../../components/TodaysReport/TodaysReport'\nimport TodaysReportModalContent from '../../components/TodaysReportModalContent/TodaysReportModalContent'\nimport { interbranchAdminSideMenu } from './constants'\nimport { useHistory } from \"react-router-dom\";\nimport './interbranchadminhome.css'\nimport { CLEAR_INTERBRANCH_ADMIN } from '../../actions/type'\n\nfunction InterbranchAdminHome() {\n\n    //Declerations..............................................................................\n    let dispatch = useDispatch()\n    let history = useHistory()\n\n    //States....................................................................................\n    let [activeLeft, setActiveleft] = useState({ menu: \"dashboard\", option: 0 })\n\n    const { ApointmentHistoryModal, ViewFileModal, deleteFileModel, commonDeleteModal, PatientDetailsModal, todaysReportModal, misReportModal } = useSelector((state) => state.interbranchModal)\n\n    const userData = useSelector(\n        (state) => state.login.user\n    );\n\n    //Refs......................................................................................\n    const ref = useRef(null)\n\n\n    //Functions................................................................................\n\n    useEffect(() => {\n\n\n\n\n\n    }, [])\n\n    let logoutFunction = () => {\n\n\n        dispatch(logoutAction(userData, history)).then((res) => {\n            if (res) {\n                dispatch({ type: CLEAR_INTERBRANCH_ADMIN });\n                history.push(\"/signin\")\n            }\n        });\n        // history.push(\"/signin\")\n\n    }\n\n    let onChangeLeftOptions = ({ menu, option }) => {\n\n        if (menu == 1 && option == 0) {\n            dispatch(FETCH_ADMIN_DETAILED_REPORT({ context: \"Dashboard click\" }))\n        }\n        else if (menu == 1 && option == 1) {\n            dispatch(FETCH_CONSOLIDATED_REPORTS())\n        }\n\n    }\n\n\n    //For Session handling...................................................................................\n\n    const isSessionActive = useSelector(\n        (state) => state.login.isSessionActive\n    );\n\n\n    useEffect(() => {\n\n\n        if (!isSessionActive || !userData.token) {\n\n            console.log(\"Session out............................................\");\n            history.push(\"/sessionExpired\")\n        }\n\n\n    }, [isSessionActive, userData])\n\n\n\n    return (\n        <div className='interbranch-container'>\n            <div className=\"left-container\" >\n\n                <div className=\"letf-top\">\n                    <div className=\"header-card\" style={{\n                        marginBottom: \"2.5rem\",\n                        width: \"100%\",\n                        height: \"79.14px\",\n                        color: \"rgba(0, 0, 0, 0.85)\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent:\"center\"\n                    }}>\n                        {\n                            userData.userType == \"C2MDAdmin\" ?\n\n                            <div className=\"dr-name-home text-center w-100\" style={{ fontWeight: \"500\" }} >C2MDAdmin</div>\n\n                            :\n                                <>\n                                    <div className=\"dr-name-home text-center w-100\" style={{ fontWeight: \"500\" }} >{userData ? userData.profileName : \"---\"}</div>\n                                    <div className=\"dr-id-home text-center w-100\" style={{ fontWeight: \"500\" }}>ID: {userData ? userData.profileId : \"---\"}</div>\n                                </>\n                        }\n\n\n\n                    </div>\n\n                    <div className=\"tittle\" onClick={() => {\n\n                        dispatch(FETCH_ADMIN_DASHBOARD_REPORT())\n                        setActiveleft({ menu: \"dashboard\", option: 0 })\n                    }} style={{ fontWeight: activeLeft.menu == \"dashboard\" ? \"bold\" : \"normal\", cursor: \"pointer\" }} >Dashboard</div>\n\n\n                    {\n                        interbranchAdminSideMenu.map((object, menuKey) => {\n\n                            if (object.tittle !== \"Dashboard\") {\n                                return (\n\n                                    <React.Fragment key={menuKey}>\n\n                                        <div className=\"list-tittle\">{object.tittle}</div>\n\n                                        <ul className='side-nav'>\n\n                                            {\n                                                object.options.map((element, optionKey) => {\n                                                    return (\n                                                        <li key={optionKey} className={activeLeft.menu === menuKey && activeLeft.option === optionKey ? \"interbranch-active\" : null} onClick={() => {\n\n\n                                                            onChangeLeftOptions({ menu: menuKey, option: optionKey })\n                                                            setActiveleft({ menu: menuKey, option: optionKey })\n                                                            // dispatch(setSelectedAppointmentRedux(null))\n\n                                                        }}>\n                                                            <div className=\"icon\">\n                                                                {element.ico}\n                                                            </div>\n                                                            <div className=\"text\">{element.name}</div>\n                                                        </li>\n                                                    )\n                                                })\n                                            }\n\n\n                                        </ul>\n\n\n                                    </React.Fragment>\n\n                                )\n                            }\n\n                        })\n                    }\n\n                    {/* <div className=\"tittle list-tittle\" onClick={() => { setActiveleft({ menu: \"consolidated\", option: 0 }) }} style={{ fontWeight: activeLeft.menu == \"consolidated\" ? \"500\" : \"normal\", cursor: \"pointer\" }} >Consolidate Report</div> */}\n                </div>\n\n\n                <div className=\"header-card logout\" onClick={logoutFunction}>\n                    <div className=\"icon\">&nbsp;</div>\n                    SIGN OUT\n                </div>\n\n\n\n            </div>\n\n            <div className=\"right-container\" ref={ref}>\n                <div className=\"header-card\">\n                    <span>\n                        {\n                            activeLeft.menu == \"dashboard\" ? \"Dashboard\" : activeLeft.menu == \"consolidated\" ? \"Consolidated\"\n                                : interbranchAdminSideMenu[activeLeft.menu].options[activeLeft.option].name\n                        }\n                    </span>\n\n                    <span className='caption'>\n                        {/* {getTodayDateStringForHeader()} */}\n                        &nbsp;\n                    </span>\n                </div>\n\n\n\n                <div className=\"right-menu-container\">\n\n                    <CustomeModal\n                        width={700}\n                        state={todaysReportModal}\n                        modalName=\"todaysReportModal\"\n                        component={<TodaysReportModalContent />}\n                        isRight\n                    />\n\n\n\n                    <CustomeModal\n                        width={700}\n                        state={misReportModal}\n                        modalName=\"misReportModal\"\n                        component={<MisReportModalContent />}\n                        isRight\n                    />\n\n                    {/* <CustomeModal\n                        state={ApointmentHistoryModal}\n                        modalName=\"ApointmentHistoryModal\"\n                        component={<AppointmentHistoryModalContent />}\n                        isRight\n                    />\n\n                   \n\n                    <CustomeModal\n                        width={700}\n                        state={misReportModal}\n                        modalName=\"misReportModal\"\n                        component={<MisReportModalContent />}\n                        isRight\n                    />\n\n\n                    <CustomeModal\n                        state={PatientDetailsModal}\n                        modalName={PATIENT_DETAILS_MODAL_NAME}\n                        component={<PatientDetailsModalContent />}\n                        isRight\n                    />\n\n                    <CustomeModal\n\n                        state={ViewFileModal}\n                        modalName=\"ViewFileModal\"\n                        component={<ViewFileModalComponent name=\"ViewFileModal\" />}\n\n\n                    />\n\n                    <CustomeModal\n                        state={deleteFileModel}\n                        modalName=\"deleteFileModel\"\n                        component={<DeleteFileModelComponent name=\"ViewFileModal\" />}\n                    />\n\n                    <CustomeModal\n                        state={commonDeleteModal}\n                        modalName=\"commonDeleteModal\"\n                        component={<CommonDeleteModalBody />}\n                    /> */}\n\n                    <div className=\"container_interbranch\">\n\n                        {\n\n                            activeLeft.menu == \"dashboard\" ? <TodaysReport /> :\n                                //  activeLeft.menu == \"consolidated\" ? <ConsolidatedReport /> :\n\n                                interbranchAdminSideMenu[activeLeft.menu].options[activeLeft.option].component ?\n                                    interbranchAdminSideMenu[activeLeft.menu].options[activeLeft.option].component : null\n\n\n\n                        }\n\n\n\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default InterbranchAdminHome"],"names":["getFromLocalStorage","key","localStorage","getItem","USER_DATA","ADMIN_USER","CLINIC_ADMIN_USER","TextArea","Input","value","element","onBlur","useState","_value","setValue","useEffect","onChange","e","target","appointmentId","rows","ConsultationStatusArray","status","flag","getConsultationStatusFlag","filter","length","RangePicker","DatePicker","dateRef","useRef","isOpen","setOpen","pagination","setPagination","from","to","selectedDate","setSelectedDate","dispatch","useDispatch","misReports","useSelector","state","interbranchAdmin","detailedReportTable","misReportsPageLength","detailedReportTableTotalPages","userData","userType","JSON","parse","isLoading","setLoading","FETCH_ADMIN_DETAILED_REPORT","context","then","res","downloadReport","console","log","downloadSummaryReport","fromDate","toDate","resp","window","open","handleCommentChange","para_appointment_id","updateMisReportComment","offset","className","onClick","class","ref","bordered","suffixIcon","startDate","endDate","prevDate","moment","subtract","convertDateToString","Modal","title","content","okText","cancelText","onOk","map","Comments","appointmentDate","appointmentTime","patientName","doctorName","hospital","feesPaid","c2mdFees","nettFees","StatusBadge","text","consultationStatus","varient","paymentStatus","_id","FETCH_DETAILED_MORE","type","INTERBRANCH_MODAL","payload","name","colSpan","EmptyTableData","showSizeChanger","pageSize","defaultCurrent","total","interbranchAdminSideMenu","tittle","options","ico","component","TodaysReport","date","ConsolidatedReport","history","useHistory","menu","option","activeLeft","setActiveleft","interbranchModal","todaysReportModal","ApointmentHistoryModal","ViewFileModal","deleteFileModel","commonDeleteModal","PatientDetailsModal","misReportModal","login","user","isSessionActive","token","push","style","marginBottom","width","height","color","display","flexDirection","alignItems","justifyContent","fontWeight","profileName","profileId","FETCH_ADMIN_DASHBOARD_REPORT","cursor","object","menuKey","optionKey","FETCH_CONSOLIDATED_REPORTS","onChangeLeftOptions","logoutAction","CLEAR_INTERBRANCH_ADMIN","CustomeModal","modalName","TodaysReportModalContent","isRight","MisReportModalContent"],"sourceRoot":""}