{"version":3,"file":"static/js/8795.afc60a63.chunk.js","mappings":"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","sources":["actions/DoctorListingAction.js","webpack://connect2mydoctor/./src/components/FooterMobileScreen/FooterMobileScreen.module.scss?8c42","components/FooterMobileScreen/index.js","webpack://connect2mydoctor/./src/components/Layout/DoctorListingLayout/DoctorListingLayout.module.scss?ab1c","components/Layout/DoctorListingLayout/index.js","logic/Dimensions/index.js","pages/DoctorProfileSchedule.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import loginedApi from \"../apis/index\";\nimport { DOCTOR_LISTING } from \"./type\";\nconst { detect } = require(\"detect-browser\");\nconst browser = detect();\nlet platform = window.navigator.platform;\nlet userAgent = window.navigator.userAgent;\nlet off = new Date().toString().replace(/GMT\\+(\\d\\d)(\\d\\d)/, \"GMT+$1:$2\");\nlet formatTime = off?.split(\"GMT\")[1].split(\" (\")[0];\nlet result = formatTime?.slice(1);\nif (formatTime.search(/\\+/g) != null) {\n  formatTime = formatTime.replace(/\\+/g, \"%2B\");\n} else if (formatTime.search(/\\-/g) != null) {\n  formatTime = formatTime.replace(/\\-/g, \"%2D\");\n} //replace(/\\+/g,' ') browserTimeZone: `GMT${formatTime}`\n\nexport const fetch_doctors =\n  (speciality, clinicId, pagination) => async (dispatch) => {\n\n\n    console.log({ speciality, clinicId, pagination });\n\n\n    let resp = await loginedApi.post(\"getcountrycode\", {\n      token: \"token\",\n      version: \"2.0\",\n      data: { browserTimeZone: `GMT${formatTime}` },\n      requestType: 1058,\n    });\n    const doctorscountrycode = resp.data.data;\n\n    let params = {\n      data: {\n        clinicId: clinicId,\n        todayRate: \"74.27006\",\n        searchName: \"\",\n        City: \"\",\n        speciality: speciality,\n        browserTimeZone: `GMT${formatTime}`,\n        Ipaddress: doctorscountrycode.Ipaddress,\n        useragent: userAgent,\n        Browser: browser.name + \" \" + browser.version,\n        appname: \"C2MD Web\",\n        Os: platform,\n        currency: doctorscountrycode.currency,\n        accessCountry: doctorscountrycode.Country,\n\n      },\n      requestType: \"604\",\n      token: \"C2MDVerificationToken\",\n    };\n\n\n    let getalldoctors = {\n      requestType: \"259\",\n      token: \"C2MDVerificationToken\",\n      data: {\n        browserTimeZone: `GMT${formatTime}`,\n        Ipaddress: doctorscountrycode.Ipaddress,\n        useragent: userAgent,\n        Browser: browser.name + \" \" + browser.version,\n        appname: \"C2MD Web\",\n        Os: platform,\n        currency: doctorscountrycode.currency,\n        accessCountry: doctorscountrycode.Country,\n        todayRate: \"\",\n        clinicId: clinicId,\n        searchName: \"\",\n        City: \"\",\n        count: pagination,\n\n      },\n    };\n\n    if (clinicId != \"\") {\n      params.data.clinicId = clinicId;\n    }\n\n    let res = null;\n\n\n    //Only if there is clinic id.................................\n\n    if (clinicId) {\n\n      if (speciality && speciality != \"ALL\") {\n\n        res = await loginedApi.post(\"searchDoctor\", params);\n        console.log(\"Searching doctors...........................\",params);\n      \n      } else {\n\n\n        res = await loginedApi.post(\"getdoctors\", getalldoctors);\n        console.log(\"loading all doctors...........................\");\n      }\n\n      if (res.status === 200) {\n        const doctors = res.data.data;\n\n        let location = [{ value: \"All\", checked: false }];\n        let hospitals = [{ value: \"All\", checked: false }];\n        let languagesSet = [\n          { value: \"All\", checked: false },\n          { value: \"English\", checked: false },\n          { value: \"Hindi\", checked: false },\n          { value: \"Tamil\", checked: false },\n        ];\n\n        doctors?.Hospitals.map((item) => {\n          item && hospitals.push({ value: item, checked: false });\n        });\n        doctors?.citiesSet?.map((item) => {\n          item && location.push({ value: item, checked: false });\n        });\n        doctors?.languagesSet.map((item) => {\n          item && location.push({ value: item, checked: false });\n        });\n\n    \n        dispatch({\n          type: DOCTOR_LISTING,\n          payload: {\n            speciality,\n            doctors: doctors,\n            location: location,\n            hospitals: hospitals,\n            languagesSet: languagesSet,\n            indexCharacters: doctors?.indexCharacters,\n          },\n        });\n      }\n    }\n\n  };\n\nexport const fetch_alldoctors = (count, clinicId) => async (dispatch) => {\n  // let reduxData = useSelector(state => state)\n  // console.log(\"88888888888\",reduxData)\n  const countrycoderes = await loginedApi.post(\"getcountrycode\",\n    {\n      \"token\": \"token\",\n      \"version\": \"2.0\",\n      \"data\": { browserTimeZone: `GMT${formatTime}`, },\n      \"requestType\": 1058\n    });\n\n  const doctorscountrycode = countrycoderes.data.data;\n\n  let params = {\n    data: {\n      clinicId: clinicId,\n      Ipaddress: doctorscountrycode.Ipaddress,\n      useragent: userAgent,\n      todayRate: \"74.27006\",\n      currency: doctorscountrycode.currency,\n      accessCountry: doctorscountrycode.Country,\n      searchName: \"\",\n      browserTimeZone: `GMT${formatTime}`,\n      Os: platform,\n      City: \"\",\n\n      count: count,\n    },\n    requestType: \"259\",\n    token: \"C2MDVerificationToken\",\n  };\n\n  if (clinicId != \"\") {\n    params.data.clinicId = clinicId;\n  }\n\n\n  let res;\n  if (clinicId != \"\" && clinicId != undefined) {\n    res = await loginedApi.post(\"getdoctors\", params);\n  }\n  console.log(\"res-->\", res)\n\n  if (res?.status === 200) {\n    const doctors = res.data.data;\n\n    let location = [{ value: \"All\", checked: false }];\n    let hospitals = [{ value: \"All\", checked: false }];\n    let languagesSet = [\n      { value: \"All\", checked: false },\n      { value: \"English\", checked: false },\n      { value: \"Hindi\", checked: false },\n      { value: \"Tamil\", checked: false },\n    ];\n\n    doctors.Hospitals.map((item) => {\n      item && hospitals.push({ value: item, checked: false });\n    });\n    doctors.citiesSet.map((item) => {\n      item && location.push({ value: item, checked: false });\n    });\n    doctors.languagesSet.map((item) => {\n      item && location.push({ value: item, checked: false });\n    });\n\n\n    console.log(doctors.doctorDetails.length);\n\n\n    dispatch({\n      type: DOCTOR_LISTING,\n      payload: {\n        doctors: doctors,\n        location: location,\n        hospitals: hospitals,\n        languagesSet: languagesSet,\n        indexCharacters: doctors?.indexCharacters,\n      },\n    });\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"mobile_footer_align\":\"FooterMobileScreen_mobile_footer_align__qKYsf\",\"mobile_footer_top_banner\":\"FooterMobileScreen_mobile_footer_top_banner__h0mkV\",\"mobile_footer_first_div\":\"FooterMobileScreen_mobile_footer_first_div__mY6Hp\",\"mobile_footer_main_heading\":\"FooterMobileScreen_mobile_footer_main_heading__wFf-m\",\"mobile_footer_space_between\":\"FooterMobileScreen_mobile_footer_space_between__170t8\",\"footer_img_align\":\"FooterMobileScreen_footer_img_align__pQXog\",\"mobile_footer_second_div\":\"FooterMobileScreen_mobile_footer_second_div__eRb4l\",\"mobile_footer_sub_heading\":\"FooterMobileScreen_mobile_footer_sub_heading__vmSOC\",\"mobile_footer_content\":\"FooterMobileScreen_mobile_footer_content__p+QZl\",\"mobile_footer_bottom\":\"FooterMobileScreen_mobile_footer_bottom__IxW0j\"};","import React from \"react\";\nimport Style from \"./FooterMobileScreen.module.scss\";\nimport Assets from \"../Layout/Assets\";\nimport { Container, Row } from \"react-bootstrap\";\n\nfunction MobileFooter() {\n\n  return (\n        <div className={Style.mobile_footer_align}>\n             <div className={Style.mobile_footer_top_banner}>\n                <Container>\n                    <Row className={Style.mobile_footer_first_div}>\n                        <div className=\"col-6 mob_footer_left\">\n                            <h2 className={Style.mobile_footer_main_heading}>\n                                Download the app today!\n                            </h2>\n                            <a href=\"https://play.google.com/store/apps/details?id=com.neevlabs.connect2mydoctorpatient&amp;hl=en\" target=\"_blank\">\n                                <img src={Assets.google_play_icon} className={Style.mobile_footer_space_between}/>\n                            </a>\n                            <a href=\"https://apps.apple.com/au/app/connect2mydoctor-for-patients/id1490627746\" target=\"_blank\">\n                                <img src={Assets.app_store_icon} className={Style.mobile_footer_space_between}/>\n                            </a>\n                        \n                        </div>\n                        <div className=\"col-6 img_footer\">\n                            <img src={Assets.footer_img} className={Style.footer_img_align}/>\n                        </div>\n                    </Row>\n                </Container> \n            </div>   \n            <div className={Style.mobile_footer_bottom}>\n                <Container>\n                    <Row className={Style.mobile_footer_second_div}>\n                        <p className={Style.mobile_footer_sub_heading}>Connect2MyDoctor cannot be used in case of emergency</p>\n                        <p className={Style.mobile_footer_content}>Connect2MyDoctor does not provide medical advice, diagnosis, or treatment</p>\n\n                    </Row>\n                </Container> \n            </div>\n        </div>\n  );\n}\n\nexport default MobileFooter;","// extracted by mini-css-extract-plugin\nexport default {\"LoginLayout_body\":\"DoctorListingLayout_LoginLayout_body__xk5wt\",\"DoctorlistingLayout_scroll\":\"DoctorListingLayout_DoctorlistingLayout_scroll__WAduY\"};","import React, { lazy, useEffect, useRef, useState } from \"react\";\nimport MobileFooter from \"../../FooterMobileScreen\";\nimport Style from \"./DoctorListingLayout.module.scss\";\nimport { useDimensions } from \"../../../logic/Dimensions\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetch_doctors } from \"../../../actions/DoctorListingAction\";\nconst Header = React.lazy(() => import(\"../../Header\"));\nconst MicrositeHeader = React.lazy(() =>\n  import(\"../../MicrositeLayout/MicrositeHeader\")\n);\nconst Footer = React.lazy(() =>\n  import(\"../../MicrositeLayout/MicrositeFooter\")\n);\n\nfunction DoctorlistingLayout({ children, pagination, setPagination, selectedSpeciality, setSpeciality }) {\n  const { width } = useDimensions();\n  const [showFilter, setShowFilter] = useState(false);\n  const [searchDoctor, setSearchDoctor] = useState(\"\");\n  const location = useLocation();\n  const clientDetails = useSelector((state) => state.clientDetails);\n  let doctorListingScroll = useRef()\n\n  let dispatch = useDispatch()\n\n  let onScrollDoctorList = async () => {\n\n\n\n    const { scrollTop, scrollHeight, clientHeight } = doctorListingScroll.current;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n\n\n      if (!selectedSpeciality || selectedSpeciality==\"ALL\") {\n        // TO SOMETHING HERE\n        console.log('Reached bottom')\n\n        // if (FilterItem.length % 4 == 0) {\n\n        // await setLoader(true);\n        // await dispatch(\n        //   fetch_doctors(\n        //     selectedSpeciality,\n        //     clientDetails ? clientDetails.clinicurl : \"\",\n        //     pagination + 10\n        //   )\n        // );\n        if(setPagination)\n        {\n          setPagination(pagination + 10)\n        }\n       \n        // await setLoader(false);\n\n\n        // }\n\n      }\n\n\n\n\n    }\n\n  }\n\n\n\n  return (\n    <div className={Style.DoctorlistingLayout_scroll} ref={doctorListingScroll} onScroll={() => { onScrollDoctorList() }} style={{ height: \"100vh\", overflow: \"auto\" }}>\n      {width >= 992 ? (\n        <MicrositeHeader\n          showFilter={showFilter}\n          setShowFilter={setShowFilter}\n          searchDoctor={searchDoctor}\n          setSearchDoctor={setSearchDoctor}\n          clientDetails={clientDetails}\n        />\n      ) : (\n        <Header\n          showFilter={showFilter}\n          setShowFilter={setShowFilter}\n          searchDoctor={searchDoctor}\n          setSearchDoctor={setSearchDoctor}\n          clientDetails={\"\"}\n        />\n      )}\n      <div className={Style.LoginLayout_body}>\n        {width >= 992\n          ? children\n          : React.cloneElement(children, {\n            showFilter,\n            setShowFilter,\n            searchDoctor,\n            setSearchDoctor,\n          })}\n      </div>\n      {location.pathname.search(\"bookAppointment\") == -1 && width >= 992 ? (\n        <Footer />\n      ) : null}\n      {location.pathname.search(\"bookAppointment\") == -1 && width < 992 ? (\n        <MobileFooter />\n      ) : null}\n    </div>\n  );\n}\n\nexport default DoctorlistingLayout;\n","import { useEffect,useState } from 'react';\n\nexport const useDimensions = props => { \n    const [windowDimensions, setWindowDimensions] = useState(\n        getDimentions()\n      );\n    \n      useEffect(() => {\n        function handleResize() {\n          setWindowDimensions(getDimentions());\n        }\n    \n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n      }, []);\n    \n      return windowDimensions;\n} \n\nconst getDimentions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}","import React from \"react\";\nimport { useDimensions } from \"../logic/Dimensions\";\nimport DoctorlistingLayout from \"../components/Layout/DoctorListingLayout\";\nconst DoctorProfileSchedule = React.lazy(() =>\n  import(\"../components/DoctorprofileSchedule\")\n);\n\nfunction DoctorProfileSchedulePage() {\n  const { width } = useDimensions();\n  return (\n    <div\n      className=\"doctor-profile-layout\"\n      style={{ marginBottom: width < 992 ? \"100px\" : \"0px\" }}\n    >\n      <DoctorlistingLayout>\n        <DoctorProfileSchedule />\n      </DoctorlistingLayout>\n    </div>\n  );\n}\n\nexport default DoctorProfileSchedulePage;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["browser","detect","require","platform","window","navigator","userAgent","off","Date","toString","replace","formatTime","split","slice","search","fetch_doctors","speciality","clinicId","pagination","dispatch","console","log","loginedApi","token","version","data","browserTimeZone","requestType","resp","doctorscountrycode","params","todayRate","searchName","City","Ipaddress","useragent","Browser","name","appname","Os","currency","accessCountry","Country","getalldoctors","count","res","status","doctors","location","value","checked","hospitals","languagesSet","Hospitals","map","item","push","citiesSet","type","DOCTOR_LISTING","payload","indexCharacters","className","Style","Container","Row","href","target","src","Assets","Header","React","MicrositeHeader","Footer","children","setPagination","selectedSpeciality","width","setSpeciality","useDimensions","useState","showFilter","setShowFilter","searchDoctor","setSearchDoctor","useLocation","clientDetails","useSelector","state","doctorListingScroll","useRef","onScrollDoctorList","useDispatch","current","scrollTop","scrollHeight","clientHeight","ref","onScroll","style","height","overflow","pathname","props","getDimentions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","innerWidth","innerHeight","DoctorProfileSchedule","marginBottom","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","_jsx","classNames","displayName"],"sourceRoot":""}